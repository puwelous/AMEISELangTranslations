-----------------------------------------------------------------------------
-- MODELL: QS

model QS is 
-----------------------------------------------------------------------------
-- KONSTANTE: KEINE

-- KEINE : constant INTEGER := 1;
-----------------------------------------------------------------------------
-- KONSTANTE: GERING

-- GERING : constant INTEGER := 2;
-----------------------------------------------------------------------------
-- KONSTANTE: MITTEL

-- MITTEL : constant INTEGER := 3;
-----------------------------------------------------------------------------
-- KONSTANTE: HOCH

-- HOCH : constant INTEGER := 4;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Record_IIIII_Type

type Record_IIIII_Type is record
  Rec_Elem_1 : INTEGER;
  Rec_Elem_2 : INTEGER;
  Rec_Elem_3 : INTEGER;
  Rec_Elem_4 : INTEGER;
  Rec_Elem_5 : INTEGER;
end record;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Record_SI_Type

type Record_SI_Type is record
  Rec_Elem_1 : STRING;
  Rec_Elem_2 : INTEGER;
end record;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Set_Record_SI_Type

type Set_Record_SI_Type is List of Record_SI_Type;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Record_RRRRRRRRR_Type

type Record_RRRRRRRRR_Type is record
  Rec_Elem_1 : REAL;
  Rec_Elem_2 : REAL;
  Rec_Elem_3 : REAL;
  Rec_Elem_4 : REAL;
  Rec_Elem_5 : REAL;
  Rec_Elem_6 : REAL;
  Rec_Elem_7 : REAL;
  Rec_Elem_8 : REAL;
  Rec_Elem_9 : REAL;
end record;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Array_4_Record_RRRRRRRRR_Type

type Array_4_Record_RRRRRRRRR_Type is List of Record_RRRRRRRRR_Type;
-----------------------------------------------------------------------------
-- KONSTANTE: ANALYSENOTIZEN_DOKUMENT

-- ANALYSENOTIZEN_DOKUMENT : constant INTEGER := 1;
-----------------------------------------------------------------------------
-- KONSTANTE: SPEZIFIKATION_DOKUMENT

-- SPEZIFIKATION_DOKUMENT : constant INTEGER := 2;
-----------------------------------------------------------------------------
-- KONSTANTE: SYSTEMENTWURF_DOKUMENT

-- SYSTEMENTWURF_DOKUMENT : constant INTEGER := 3;
-----------------------------------------------------------------------------
-- KONSTANTE: MODULSPEZIFIKATION_DOKUMENT

-- MODULSPEZIFIKATION_DOKUMENT : constant INTEGER := 4;
-----------------------------------------------------------------------------
-- KONSTANTE: CODE_DOKUMENT

-- CODE_DOKUMENT : constant INTEGER := 5;
-----------------------------------------------------------------------------
-- KONSTANTE: HANDBUCH_DOKUMENT

-- HANDBUCH_DOKUMENT : constant INTEGER := 6;
-----------------------------------------------------------------------------
-- KONSTANTE: PRODUKTIVITAET

-- PRODUKTIVITAET : constant INTEGER := 1;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTE

-- VERLUSTQUOTE : constant INTEGER := 2;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATE

-- FEHLERRATE : constant INTEGER := 3;
-----------------------------------------------------------------------------
-- KONSTANTE: PRUEFLEISTUNG

-- PRUEFLEISTUNG : constant INTEGER := 4;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUST_EQ

-- VERLUST_EQ : constant INTEGER := 5;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLER_EQ

-- FEHLER_EQ : constant INTEGER := 6;
-----------------------------------------------------------------------------
-- KONSTANTE: KORREKTURLEISTUNG

-- KORREKTURLEISTUNG : constant INTEGER := 7;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUST_BQ

-- VERLUST_BQ : constant INTEGER := 8;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLER_BQ

-- FEHLER_BQ : constant INTEGER := 9;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Record_IRIRRRRR_Type

type Record_IRIRRRRR_Type is record
  Rec_Elem_1 : INTEGER;
  Rec_Elem_2 : REAL;
  Rec_Elem_3 : INTEGER;
  Rec_Elem_4 : REAL;
  Rec_Elem_5 : REAL;
  Rec_Elem_6 : REAL;
  Rec_Elem_7 : REAL;
  Rec_Elem_8 : REAL;
end record;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Bag_Record_IRIRRRRR_Type

type Bag_Record_IRIRRRRR_Type is List of Record_IRIRRRRR_Type;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Bag_I_Type

type Bag_I_Type is List of INTEGER;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Record_IRRRRRRRR_Type

type Record_IRRRRRRRR_Type is record
  Rec_Elem_1 : INTEGER;
  Rec_Elem_2 : REAL;
  Rec_Elem_3 : REAL;
  Rec_Elem_4 : REAL;
  Rec_Elem_5 : REAL;
  Rec_Elem_6 : REAL;
  Rec_Elem_7 : REAL;
  Rec_Elem_8 : REAL;
  Rec_Elem_9 : REAL;
end record;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Bag_Record_IRRRRRRRR_Type

type Bag_Record_IRRRRRRRR_Type is List of Record_IRRRRRRRR_Type;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Record_RRRRR_Type

type Record_RRRRR_Type is record
  Rec_Elem_1 : REAL;
  Rec_Elem_2 : REAL;
  Rec_Elem_3 : REAL;
  Rec_Elem_4 : REAL;
  Rec_Elem_5 : REAL;
end record;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Array_3_I_Type

type Array_3_I_Type is List of INTEGER;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Array_4_R_Type

type Array_4_R_Type is List of REAL;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Array_5_R_Type

type Array_5_R_Type is List of REAL;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Array_10_R_Type

type Array_10_R_Type is List of REAL;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Record_R_Type

type Record_R_Type is record
  Rec_Elem_1 : REAL;
end record;
-----------------------------------------------------------------------------
-- ATTRIBUTTYP: Set_S_Type

type Set_S_Type is List of STRING;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRODUKTIVITAET_MIT_KUNDE_SPRECHEN

-- KOEFF_PRODUKTIVITAET_MIT_KUNDE_SPRECHEN : constant REAL := 7.08;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRODUKTIVITAET_SPEZIFIZIEREN

-- KOEFF_PRODUKTIVITAET_SPEZIFIZIEREN : constant REAL := 1.42;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRODUKTIVITAET_SYSTEM_ENTWERFEN

-- KOEFF_PRODUKTIVITAET_SYSTEM_ENTWERFEN : constant REAL := 1.18;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRODUKTIVITAET_MODULE_SPEZIFIZIEREN

-- KOEFF_PRODUKTIVITAET_MODULE_SPEZIFIZIEREN : constant REAL := 1.01;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRODUKTIVITAET_CODIEREN

-- KOEFF_PRODUKTIVITAET_CODIEREN : constant REAL := 0.47;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRODUKTIVITAET_INTEGRIEREN

-- KOEFF_PRODUKTIVITAET_INTEGRIEREN : constant REAL := 0.4;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRODUKTIVITAET_HANDBUCH_SCHREIBEN

-- KOEFF_PRODUKTIVITAET_HANDBUCH_SCHREIBEN : constant REAL := 1.16;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRODUKTIVITAET_MIT_KUNDE_SPRECHEN

-- EXPONENT_PRODUKTIVITAET_MIT_KUNDE_SPRECHEN : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRODUKTIVITAET_SPEZIFIZIEREN

-- EXPONENT_PRODUKTIVITAET_SPEZIFIZIEREN : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRODUKTIVITAET_SYSTEM_ENTWERFEN

-- EXPONENT_PRODUKTIVITAET_SYSTEM_ENTWERFEN : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRODUKTIVITAET_MODULE_SPEZIFIZIEREN

-- EXPONENT_PRODUKTIVITAET_MODULE_SPEZIFIZIEREN : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRODUKTIVITAET_CODIEREN

-- EXPONENT_PRODUKTIVITAET_CODIEREN : constant REAL := -0.192;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRODUKTIVITAET_INTEGRIEREN

-- EXPONENT_PRODUKTIVITAET_INTEGRIEREN : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRODUKTIVITAET_HANDBUCH_SCHREIBEN

-- EXPONENT_PRODUKTIVITAET_HANDBUCH_SCHREIBEN : constant REAL := -0.192;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_SPEZIFIKATIONSREVIEW

-- KOEFF_PRUEFLEISTUNG_SPEZIFIKATIONSREVIEW : constant REAL := 18.54;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_SYSTEMENTWURFSREVIEW

-- KOEFF_PRUEFLEISTUNG_SYSTEMENTWURFSREVIEW : constant REAL := 15.46;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_MODULSPEZREVIEW

-- KOEFF_PRUEFLEISTUNG_MODULSPEZREVIEW : constant REAL := 10.6;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_CODEREVIEW

-- KOEFF_PRUEFLEISTUNG_CODEREVIEW : constant REAL := 3.68;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_HANDBUCHREVIEW

-- KOEFF_PRUEFLEISTUNG_HANDBUCHREVIEW : constant REAL := 16.22;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_MODULTEST

-- KOEFF_PRUEFLEISTUNG_MODULTEST : constant REAL := 2.11;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_INTEGRATIONSTEST

-- KOEFF_PRUEFLEISTUNG_INTEGRATIONSTEST : constant REAL := 2.88;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_SYSTEMTEST

-- KOEFF_PRUEFLEISTUNG_SYSTEMTEST : constant REAL := 3.93;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_PRUEFLEISTUNG_ABNAHMETEST

-- KOEFF_PRUEFLEISTUNG_ABNAHMETEST : constant REAL := 8.54;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_SPEZIFIKATIONSREVIEW

-- EXPONENT_PRUEFLEISTUNG_SPEZIFIKATIONSREVIEW : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_SYSTEMENTWURFSREVIEW

-- EXPONENT_PRUEFLEISTUNG_SYSTEMENTWURFSREVIEW : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_MODULSPEZREVIEW

-- EXPONENT_PRUEFLEISTUNG_MODULSPEZREVIEW : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_CODEREVIEW

-- EXPONENT_PRUEFLEISTUNG_CODEREVIEW : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_HANDBUCHREVIEW

-- EXPONENT_PRUEFLEISTUNG_HANDBUCHREVIEW : constant REAL := -0.192;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_MODULTEST

-- EXPONENT_PRUEFLEISTUNG_MODULTEST : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_INTEGRATIONSTEST

-- EXPONENT_PRUEFLEISTUNG_INTEGRATIONSTEST : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_SYSTEMTEST

-- EXPONENT_PRUEFLEISTUNG_SYSTEMTEST : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_PRUEFLEISTUNG_ABNAHMETEST

-- EXPONENT_PRUEFLEISTUNG_ABNAHMETEST : constant REAL := -0.251;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_KORREKTURLEISTUNG_IN_SPEZIFIKATION

-- EXPONENT_KORREKTURLEISTUNG_IN_SPEZIFIKATION : constant REAL := -0.11;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_KORREKTURLEISTUNG_IN_SYSTEMENTWURF

-- EXPONENT_KORREKTURLEISTUNG_IN_SYSTEMENTWURF : constant REAL := -0.11;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_KORREKTURLEISTUNG_IN_MODULSPEZ

-- EXPONENT_KORREKTURLEISTUNG_IN_MODULSPEZ : constant REAL := -0.11;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_KORREKTURLEISTUNG_IN_CODE

-- EXPONENT_KORREKTURLEISTUNG_IN_CODE : constant REAL := -0.11;
-----------------------------------------------------------------------------
-- KONSTANTE: EXPONENT_KORREKTURLEISTUNG_IN_HANDBUCH

-- EXPONENT_KORREKTURLEISTUNG_IN_HANDBUCH : constant REAL := -0.086;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_AF_IN_SPEZIFIKATION

-- KOEFF_KORREKTURLEISTUNG_AF_IN_SPEZIFIKATION : constant REAL := 9.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_AF_IN_HANDBUCH

-- KOEFF_KORREKTURLEISTUNG_AF_IN_HANDBUCH : constant REAL := 7.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_AF_IN_SYSTEMENTWURF

-- KOEFF_KORREKTURLEISTUNG_AF_IN_SYSTEMENTWURF : constant REAL := 4.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_AF_IN_MODULSPEZ

-- KOEFF_KORREKTURLEISTUNG_AF_IN_MODULSPEZ : constant REAL := 1.5;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_AF_IN_CODE

-- KOEFF_KORREKTURLEISTUNG_AF_IN_CODE : constant REAL := 0.16;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_GF_IN_SYSTEMENTWURF

-- KOEFF_KORREKTURLEISTUNG_GF_IN_SYSTEMENTWURF : constant REAL := 5.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_GF_IN_MODULSPEZ

-- KOEFF_KORREKTURLEISTUNG_GF_IN_MODULSPEZ : constant REAL := 3.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_GF_IN_CODE

-- KOEFF_KORREKTURLEISTUNG_GF_IN_CODE : constant REAL := 0.33;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_FF_IN_MODULSPEZ

-- KOEFF_KORREKTURLEISTUNG_FF_IN_MODULSPEZ : constant REAL := 4.5;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_FF_IN_CODE

-- KOEFF_KORREKTURLEISTUNG_FF_IN_CODE : constant REAL := 0.42;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_HF_IN_HANDBUCH

-- KOEFF_KORREKTURLEISTUNG_HF_IN_HANDBUCH : constant REAL := 8.89;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_IF_NACH_CODEREVIEW

-- KOEFF_KORREKTURLEISTUNG_IF_NACH_CODEREVIEW : constant REAL := 7.07;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_IF_NACH_MODULTEST

-- KOEFF_KORREKTURLEISTUNG_IF_NACH_MODULTEST : constant REAL := 2.85;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_IF_NACH_INTEGRTEST

-- KOEFF_KORREKTURLEISTUNG_IF_NACH_INTEGRTEST : constant REAL := 2.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_IF_NACH_SYSTEMTEST

-- KOEFF_KORREKTURLEISTUNG_IF_NACH_SYSTEMTEST : constant REAL := 1.88;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_GF_BEI_INTEGRATION

-- KOEFF_KORREKTURLEISTUNG_GF_BEI_INTEGRATION : constant REAL := 0.21;
-----------------------------------------------------------------------------
-- KONSTANTE: KOEFF_KORREKTURLEISTUNG_FF_BEI_INTEGRATION

-- KOEFF_KORREKTURLEISTUNG_FF_BEI_INTEGRATION : constant REAL := 0.26;
-----------------------------------------------------------------------------
-- KONSTANTE: FAKTOR_FREMDER_ENTWICKLER_KORRIGIERT

-- FAKTOR_FREMDER_ENTWICKLER_KORRIGIERT : constant REAL := 1.2;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTE_MIT_KUNDE_SPRECHEN

-- VERLUSTQUOTE_MIT_KUNDE_SPRECHEN : constant REAL := 8.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTE_SPEZIFIZIEREN

-- VERLUSTQUOTE_SPEZIFIZIEREN : constant REAL := 5.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTE_SYSTEM_ENTWERFEN

-- VERLUSTQUOTE_SYSTEM_ENTWERFEN : constant REAL := 4.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTE_MODULE_SPEZIFIZIEREN

-- VERLUSTQUOTE_MODULE_SPEZIFIZIEREN : constant REAL := 4.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTE_CODIEREN

-- VERLUSTQUOTE_CODIEREN : constant REAL := 3.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTE_HANDBUCH_SCHREIBEN

-- VERLUSTQUOTE_HANDBUCH_SCHREIBEN : constant REAL := 5.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATE_1AFP_MIT_KUNDE_SPRECHEN

-- FEHLERRATE_1AFP_MIT_KUNDE_SPRECHEN : constant REAL := 0.0692;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATE_1AFP_SPEZIFIZIEREN

-- FEHLERRATE_1AFP_SPEZIFIZIEREN : constant REAL := 0.1781;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATE_1AFP_SYSTEM_ENTWERFEN

-- FEHLERRATE_1AFP_SYSTEM_ENTWERFEN : constant REAL := 0.1645;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATE_1AFP_MODULE_SPEZIFIZIEREN

-- FEHLERRATE_1AFP_MODULE_SPEZIFIZIEREN : constant REAL := 0.1447;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATE_1AFP_CODIEREN

-- FEHLERRATE_1AFP_CODIEREN : constant REAL := 0.4329;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATE_1AFP_HANDBUCH_SCHREIBEN

-- FEHLERRATE_1AFP_HANDBUCH_SCHREIBEN : constant REAL := 0.1237;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENANSTIEG_PRO_10ERPOTENZ_MIT_KUNDE_SPRECHEN

-- FEHLERRATENANSTIEG_PRO_10ERPOTENZ_MIT_KUNDE_SPRECHEN : constant REAL := 0.0462;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENANSTIEG_PRO_10ERPOTENZ_SPEZIFIZIEREN

-- FEHLERRATENANSTIEG_PRO_10ERPOTENZ_SPEZIFIZIEREN : constant REAL := 0.1188;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENANSTIEG_PRO_10ERPOTENZ_SYSTEM_ENTWERFEN

-- FEHLERRATENANSTIEG_PRO_10ERPOTENZ_SYSTEM_ENTWERFEN : constant REAL := 0.1097;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENANSTIEG_PRO_10ERPOTENZ_MODULE_SPEZIFIZIEREN

-- FEHLERRATENANSTIEG_PRO_10ERPOTENZ_MODULE_SPEZIFIZIEREN : constant REAL := 0.0965;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENANSTIEG_PRO_10ERPOTENZ_CODIEREN

-- FEHLERRATENANSTIEG_PRO_10ERPOTENZ_CODIEREN : constant REAL := 0.2887;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENANSTIEG_PRO_10ERPOTENZ_HANDBUCH_SCHREIBEN

-- FEHLERRATENANSTIEG_PRO_10ERPOTENZ_HANDBUCH_SCHREIBEN : constant REAL := 0.0825;
-----------------------------------------------------------------------------
-- KONSTANTE: PRODUKTIVITAETSFAKTOR_SPEZIFIKATION_UEBERSPRINGEN

-- PRODUKTIVITAETSFAKTOR_SPEZIFIKATION_UEBERSPRINGEN : constant REAL := 2.0;
-----------------------------------------------------------------------------
-- KONSTANTE: PRODUKTIVITAETSFAKTOR_SYSTEMENTWURF_UEBERSPRINGEN

-- PRODUKTIVITAETSFAKTOR_SYSTEMENTWURF_UEBERSPRINGEN : constant REAL := 3.5;
-----------------------------------------------------------------------------
-- KONSTANTE: PRODUKTIVITAETSFAKTOR_MODULSPEZ_UEBERSPRINGEN

-- PRODUKTIVITAETSFAKTOR_MODULSPEZ_UEBERSPRINGEN : constant REAL := 3.2;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTENFAKTOR_SPEZIFIKATION_UEBERSPRINGEN

-- VERLUSTQUOTENFAKTOR_SPEZIFIKATION_UEBERSPRINGEN : constant REAL := 2.5;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTENFAKTOR_SYSTEMENTWURF_UEBERSPRINGEN

-- VERLUSTQUOTENFAKTOR_SYSTEMENTWURF_UEBERSPRINGEN : constant REAL := 1.5;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTQUOTENFAKTOR_MODULSPEZ_UEBERSPRINGEN

-- VERLUSTQUOTENFAKTOR_MODULSPEZ_UEBERSPRINGEN : constant REAL := 1.5;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENFAKTOR_SPEZIFIKATION_UEBERSPRINGEN

-- FEHLERRATENFAKTOR_SPEZIFIKATION_UEBERSPRINGEN : constant REAL := 2.8;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENFAKTOR_SYSTEMENTWURF_UEBERSPRINGEN

-- FEHLERRATENFAKTOR_SYSTEMENTWURF_UEBERSPRINGEN : constant REAL := 2.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERRATENFAKTOR_MODULSPEZ_UEBERSPRINGEN

-- FEHLERRATENFAKTOR_MODULSPEZ_UEBERSPRINGEN : constant REAL := 1.9;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_2

-- FEHLERENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_2

-- FEHLERENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_MODULSPEZREVIEW_2

-- FEHLERENTDECKUNGSQUOTE_MODULSPEZREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_CODEREVIEW_2

-- FEHLERENTDECKUNGSQUOTE_CODEREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_HANDBUCHREVIEW_2

-- FEHLERENTDECKUNGSQUOTE_HANDBUCHREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_3

-- FEHLERENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_3

-- FEHLERENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_MODULSPEZREVIEW_3

-- FEHLERENTDECKUNGSQUOTE_MODULSPEZREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_CODEREVIEW_3

-- FEHLERENTDECKUNGSQUOTE_CODEREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_HANDBUCHREVIEW_3

-- FEHLERENTDECKUNGSQUOTE_HANDBUCHREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_MODULTEST

-- FEHLERENTDECKUNGSQUOTE_MODULTEST : constant REAL := 55.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_INTEGRATIONSTEST

-- FEHLERENTDECKUNGSQUOTE_INTEGRATIONSTEST : constant REAL := 45.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_SYSTEMTEST

-- FEHLERENTDECKUNGSQUOTE_SYSTEMTEST : constant REAL := 38.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_ABNAHMETEST

-- FEHLERENTDECKUNGSQUOTE_ABNAHMETEST : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_INTEGRATION

-- FEHLERENTDECKUNGSQUOTE_INTEGRATION : constant REAL := 20.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_2

-- VERLUSTENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_2

-- VERLUSTENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_MODULSPEZREVIEW_2

-- VERLUSTENTDECKUNGSQUOTE_MODULSPEZREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_CODEREVIEW_2

-- VERLUSTENTDECKUNGSQUOTE_CODEREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_HANDBUCHREVIEW_2

-- VERLUSTENTDECKUNGSQUOTE_HANDBUCHREVIEW_2 : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_3

-- VERLUSTENTDECKUNGSQUOTE_SPEZIFIKATIONSREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_3

-- VERLUSTENTDECKUNGSQUOTE_SYSTEMENTWURFSREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_MODULSPEZREVIEW_3

-- VERLUSTENTDECKUNGSQUOTE_MODULSPEZREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_CODEREVIEW_3

-- VERLUSTENTDECKUNGSQUOTE_CODEREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_HANDBUCHREVIEW_3

-- VERLUSTENTDECKUNGSQUOTE_HANDBUCHREVIEW_3 : constant REAL := 65.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_MODULTEST

-- VERLUSTENTDECKUNGSQUOTE_MODULTEST : constant REAL := 55.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_INTEGRATIONSTEST

-- VERLUSTENTDECKUNGSQUOTE_INTEGRATIONSTEST : constant REAL := 45.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_SYSTEMTEST

-- VERLUSTENTDECKUNGSQUOTE_SYSTEMTEST : constant REAL := 38.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_ABNAHMETEST

-- VERLUSTENTDECKUNGSQUOTE_ABNAHMETEST : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTENTDECKUNGSQUOTE_INTEGRATION

-- VERLUSTENTDECKUNGSQUOTE_INTEGRATION : constant REAL := 5.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEQ_FAKTOR_ENTWURFSREVIEW_OHNE_VORGABE

-- FEQ_FAKTOR_ENTWURFSREVIEW_OHNE_VORGABE : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: FEQ_FAKTOR_MODULSPEZREVIEW_OHNE_VORGABE

-- FEQ_FAKTOR_MODULSPEZREVIEW_OHNE_VORGABE : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: FEQ_FAKTOR_CODEREVIEW_OHNE_VORGABE

-- FEQ_FAKTOR_CODEREVIEW_OHNE_VORGABE : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: FEQ_FAKTOR_HANDBUCHREVIEW_OHNE_VORGABE

-- FEQ_FAKTOR_HANDBUCHREVIEW_OHNE_VORGABE : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: FEQ_FAKTOR_MODULTEST_OHNE_VORGABE

-- FEQ_FAKTOR_MODULTEST_OHNE_VORGABE : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: FEQ_FAKTOR_INTEGRATIONSTEST_OHNE_VORGABE

-- FEQ_FAKTOR_INTEGRATIONSTEST_OHNE_VORGABE : constant REAL := 0.55;
-----------------------------------------------------------------------------
-- KONSTANTE: FEQ_FAKTOR_SYSTEMTEST_OHNE_VORGABE

-- FEQ_FAKTOR_SYSTEMTEST_OHNE_VORGABE : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: KFEQ_SREVIEW_MIT_KUNDE

-- KFEQ_SREVIEW_MIT_KUNDE : constant REAL := 40.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KVEQ_SREVIEW_MIT_KUNDE

-- KVEQ_SREVIEW_MIT_KUNDE : constant REAL := 20.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KFEQ_HBREVIEW_MIT_KUNDE

-- KFEQ_HBREVIEW_MIT_KUNDE : constant REAL := 35.0;
-----------------------------------------------------------------------------
-- KONSTANTE: KVEQ_HBREVIEW_MIT_KUNDE

-- KVEQ_HBREVIEW_MIT_KUNDE : constant REAL := 15.0;
-----------------------------------------------------------------------------
-- KONSTANTE: UNVORBEREITETE_FEQ_BEI_2

-- UNVORBEREITETE_FEQ_BEI_2 : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: UNVORBEREITETE_VEQ_BEI_2

-- UNVORBEREITETE_VEQ_BEI_2 : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: UNVORBEREITETE_FEQ_BEI_3

-- UNVORBEREITETE_FEQ_BEI_3 : constant REAL := 0.8;
-----------------------------------------------------------------------------
-- KONSTANTE: UNVORBEREITETE_VEQ_BEI_3

-- UNVORBEREITETE_VEQ_BEI_3 : constant REAL := 0.8;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERENTDECKUNGSQUOTE_REFERENZDOKUMENT

-- FEHLERENTDECKUNGSQUOTE_REFERENZDOKUMENT : constant REAL := 15.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERMEINTLICHE_FEHLER_EQ

-- VERMEINTLICHE_FEHLER_EQ : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_SPEZREVIEW_EFFEKTIVITAET

-- GERINGERE_SPEZREVIEW_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_ENTWURFSREVIEW_EFFEKTIVITAET

-- GERINGERE_ENTWURFSREVIEW_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_MODULSPEZREVIEW_EFFEKTIVITAET

-- GERINGERE_MODULSPEZREVIEW_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_CODEREVIEW_EFFEKTIVITAET

-- GERINGERE_CODEREVIEW_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_HANDBUCHREVIEW_EFFEKTIVITAET

-- GERINGERE_HANDBUCHREVIEW_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_MODULTEST_EFFEKTIVITAET

-- GERINGERE_MODULTEST_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_INTEGRATIONSTEST_EFFEKTIVITAET

-- GERINGERE_INTEGRATIONSTEST_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_SYSTEMTEST_EFFEKTIVITAET

-- GERINGERE_SYSTEMTEST_EFFEKTIVITAET : constant REAL := 25.0;
-----------------------------------------------------------------------------
-- KONSTANTE: GERINGERE_ABNAHMETEST_EFFEKTIVITAET

-- GERINGERE_ABNAHMETEST_EFFEKTIVITAET : constant REAL := 20.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERBEHEBUNGSQUOTE_ANALYSEFEHLER

-- FEHLERBEHEBUNGSQUOTE_ANALYSEFEHLER : constant REAL := 92.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERBEHEBUNGSQUOTE_GROBENTWURFSFEHLER

-- FEHLERBEHEBUNGSQUOTE_GROBENTWURFSFEHLER : constant REAL := 90.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERBEHEBUNGSQUOTE_FEINENTWURFSFEHLER

-- FEHLERBEHEBUNGSQUOTE_FEINENTWURFSFEHLER : constant REAL := 90.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERBEHEBUNGSQUOTE_IMPLEMENTIERUNGSFEHLER

-- FEHLERBEHEBUNGSQUOTE_IMPLEMENTIERUNGSFEHLER : constant REAL := 88.0;
-----------------------------------------------------------------------------
-- KONSTANTE: FEHLERBEHEBUNGSQUOTE_HANDBUCHFEHLER

-- FEHLERBEHEBUNGSQUOTE_HANDBUCHFEHLER : constant REAL := 90.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERLUSTBEHEBUNGSQUOTE

-- VERLUSTBEHEBUNGSQUOTE : constant REAL := 95.0;
-----------------------------------------------------------------------------
-- KONSTANTE: VERMEINTLICHE_FEHLER_BQ

-- VERMEINTLICHE_FEHLER_BQ : constant REAL := 80.0;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITENDER_ENTWICKLER_ZAEHLT_FUER_TEAMGROESSE

-- EINARBEITENDER_ENTWICKLER_ZAEHLT_FUER_TEAMGROESSE : constant REAL := 3.0;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRODUKTIVITAET_ANALYSIEREN

-- EINARBEITUNGSFAKTOR_PRODUKTIVITAET_ANALYSIEREN : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRODUKTIVITAET_SPEZIFIZIEREN

-- EINARBEITUNGSFAKTOR_PRODUKTIVITAET_SPEZIFIZIEREN : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRODUKTIVITAET_SYSTEM_ENTWERFEN

-- EINARBEITUNGSFAKTOR_PRODUKTIVITAET_SYSTEM_ENTWERFEN : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRODUKTIVITAET_MODULE_SPEZIFIZIEREN

-- EINARBEITUNGSFAKTOR_PRODUKTIVITAET_MODULE_SPEZIFIZIEREN : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRODUKTIVITAET_CODIEREN

-- EINARBEITUNGSFAKTOR_PRODUKTIVITAET_CODIEREN : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRODUKTIVITAET_HANDBUCH_SCHREIBEN

-- EINARBEITUNGSFAKTOR_PRODUKTIVITAET_HANDBUCH_SCHREIBEN : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEHLERRATE_ANALYSIEREN

-- EINARBEITUNGSFAKTOR_FEHLERRATE_ANALYSIEREN : constant REAL := 1.1;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEHLERRATE_SPEZIFIZIEREN

-- EINARBEITUNGSFAKTOR_FEHLERRATE_SPEZIFIZIEREN : constant REAL := 1.1;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEHLERRATE_SYSTEM_ENTWERFEN

-- EINARBEITUNGSFAKTOR_FEHLERRATE_SYSTEM_ENTWERFEN : constant REAL := 1.3;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEHLERRATE_MODULE_SPEZIFIZIEREN

-- EINARBEITUNGSFAKTOR_FEHLERRATE_MODULE_SPEZIFIZIEREN : constant REAL := 1.3;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEHLERRATE_CODIEREN

-- EINARBEITUNGSFAKTOR_FEHLERRATE_CODIEREN : constant REAL := 1.2;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEHLERRATE_HANDBUCH_SCHREIBEN

-- EINARBEITUNGSFAKTOR_FEHLERRATE_HANDBUCH_SCHREIBEN : constant REAL := 1.3;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_SPEZREVIEW

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_SPEZREVIEW : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_ENTWURFSREVIEW

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_ENTWURFSREVIEW : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_MODULSPEZREVIEW

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_MODULSPEZREVIEW : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_CODEREVIEW

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_CODEREVIEW : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_HANDBUCHREVIEW

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_HANDBUCHREVIEW : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_MODULTEST

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_MODULTEST : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_INTEGRATIONSTEST

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_INTEGRATIONSTEST : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_SYSTEMTEST

-- EINARBEITUNGSFAKTOR_PRUEFLEISTUNG_SYSTEMTEST : constant REAL := 0.8;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_SPEZREVIEW

-- EINARBEITUNGSFAKTOR_FEQ_SPEZREVIEW : constant REAL := 0.9;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_ENTWURFSREVIEW

-- EINARBEITUNGSFAKTOR_FEQ_ENTWURFSREVIEW : constant REAL := 0.8;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_MODULSPEZREVIEW

-- EINARBEITUNGSFAKTOR_FEQ_MODULSPEZREVIEW : constant REAL := 0.8;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_CODEREVIEW

-- EINARBEITUNGSFAKTOR_FEQ_CODEREVIEW : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_HANDBUCHREVIEW

-- EINARBEITUNGSFAKTOR_FEQ_HANDBUCHREVIEW : constant REAL := 0.9;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_MODULTEST

-- EINARBEITUNGSFAKTOR_FEQ_MODULTEST : constant REAL := 0.8;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_INTEGRATIONSTEST

-- EINARBEITUNGSFAKTOR_FEQ_INTEGRATIONSTEST : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FEQ_SYSTEMTEST

-- EINARBEITUNGSFAKTOR_FEQ_SYSTEMTEST : constant REAL := 0.8;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_SPEZIFIKATION

-- EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_SPEZIFIKATION : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_SYSTEMENTWURF

-- EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_SYSTEMENTWURF : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_MODULSPEZ

-- EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_MODULSPEZ : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_CODE

-- EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_CODE : constant REAL := 0.3;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_HANDBUCH

-- EINARBEITUNGSFAKTOR_KORREKTURLEISTUNG_HANDBUCH : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FBQ_SPEZIFIKATION

-- EINARBEITUNGSFAKTOR_FBQ_SPEZIFIKATION : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FBQ_SYSTEMENTWURF

-- EINARBEITUNGSFAKTOR_FBQ_SYSTEMENTWURF : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FBQ_MODULSPEZ

-- EINARBEITUNGSFAKTOR_FBQ_MODULSPEZ : constant REAL := 0.6;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FBQ_CODE

-- EINARBEITUNGSFAKTOR_FBQ_CODE : constant REAL := 0.2;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSFAKTOR_FBQ_HANDBUCH

-- EINARBEITUNGSFAKTOR_FBQ_HANDBUCH : constant REAL := 0.7;
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_P_SPEZIFIZIEREN

-- ANWENDUNGSBEREICH_P_SPEZIFIZIEREN : constant Array_4_R_Type := Array_4_R_Type'(0.9,1.0,1.1,1.2);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_FR_SPEZIFIZIEREN

-- ANWENDUNGSBEREICH_FR_SPEZIFIZIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.2,1.1,1.0,0.9);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_VQ_SPEZIFIZIEREN

-- ANWENDUNGSBEREICH_VQ_SPEZIFIZIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.3,1.0,0.8,0.75);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_P_ANALYSIEREN

-- ANWENDUNGSBEREICH_P_ANALYSIEREN : constant Array_4_R_Type := Array_4_R_Type'(0.8,1.0,1.2,1.4);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_FR_ANALYSIEREN

-- ANWENDUNGSBEREICH_FR_ANALYSIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.2,1.0,0.9,0.8);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_VQ_ANALYSIEREN

-- ANWENDUNGSBEREICH_VQ_ANALYSIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.4,1.0,0.7,0.6);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_P_SREVIEW

-- ANWENDUNGSBEREICH_P_SREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.9,1.0,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_FEQ_SREVIEW

-- ANWENDUNGSBEREICH_FEQ_SREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.1);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_VEQ_SREVIEW

-- ANWENDUNGSBEREICH_VEQ_SREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.7,0.9,1.0,1.1);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_K_SKORR

-- ANWENDUNGSBEREICH_K_SKORR : constant Array_4_R_Type := Array_4_R_Type'(0.9,1.0,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_FBQ_SKORR

-- ANWENDUNGSBEREICH_FBQ_SKORR : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: ANWENDUNGSBEREICH_VBQ_SKORR

-- ANWENDUNGSBEREICH_VBQ_SKORR : constant Array_4_R_Type := Array_4_R_Type'(0.7,0.9,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: SPEZIFIZIEREN_P_SPEZIFIZIEREN

-- SPEZIFIZIEREN_P_SPEZIFIZIEREN : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.1);
-----------------------------------------------------------------------------
-- KONSTANTE: SPEZIFIZIEREN_FR_SPEZIFIZIEREN

-- SPEZIFIZIEREN_FR_SPEZIFIZIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.2,1.1,1.0,0.9);
-----------------------------------------------------------------------------
-- KONSTANTE: SPEZIFIZIEREN_VQ_SPEZIFIZIEREN

-- SPEZIFIZIEREN_VQ_SPEZIFIZIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.1,1.0,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_P_ENTWERFEN

-- ENTWURF_P_ENTWERFEN : constant Array_4_R_Type := Array_4_R_Type'(0.5,0.75,1.0,1.25);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_FR_ENTWERFEN

-- ENTWURF_FR_ENTWERFEN : constant Array_4_R_Type := Array_4_R_Type'(1.25,1.0,0.75,0.5);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_VQ_ENTWERFEN

-- ENTWURF_VQ_ENTWERFEN : constant Array_4_R_Type := Array_4_R_Type'(1.3,1.0,0.9,0.75);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_P_EREVIEW

-- ENTWURF_P_EREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.9,1.0,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_FEQ_EREVIEW

-- ENTWURF_FEQ_EREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.1);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_VEQ_EREVIEW

-- ENTWURF_VEQ_EREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.7,0.9,1.0,1.1);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_K_EKORR

-- ENTWURF_K_EKORR : constant Array_4_R_Type := Array_4_R_Type'(0.9,1.0,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_FBQ_EKORR

-- ENTWURF_FBQ_EKORR : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: ENTWURF_VBQ_EKORR

-- ENTWURF_VBQ_EKORR : constant Array_4_R_Type := Array_4_R_Type'(0.7,0.9,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_P_CODIEREN

-- PROGRAMMIERUNG_P_CODIEREN : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.05);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_FR_CODIEREN

-- PROGRAMMIERUNG_FR_CODIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.3,1.1,1.0,0.95);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_VQ_CODIEREN

-- PROGRAMMIERUNG_VQ_CODIEREN : constant Array_4_R_Type := Array_4_R_Type'(1.01,1.0,0.99,0.97);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_P_CREVIEW

-- PROGRAMMIERUNG_P_CREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.9,0.95,1.0,1.05);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_FEQ_CREVIEW

-- PROGRAMMIERUNG_FEQ_CREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.95,0.98,1.0,1.02);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_VEQ_CREVIEW

-- PROGRAMMIERUNG_VEQ_CREVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.95,0.98,1.0,1.02);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_K_CKORR

-- PROGRAMMIERUNG_K_CKORR : constant Array_4_R_Type := Array_4_R_Type'(0.9,0.95,1.0,1.05);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_FBQ_CKORR

-- PROGRAMMIERUNG_FBQ_CKORR : constant Array_4_R_Type := Array_4_R_Type'(0.95,0.98,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: PROGRAMMIERUNG_VBQ_CKORR

-- PROGRAMMIERUNG_VBQ_CKORR : constant Array_4_R_Type := Array_4_R_Type'(0.95,0.98,1.0,1.0);
-----------------------------------------------------------------------------
-- KONSTANTE: REVIEWS_P_REVIEW

-- REVIEWS_P_REVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.05);
-----------------------------------------------------------------------------
-- KONSTANTE: REVIEWS_FEQ_REVIEW

-- REVIEWS_FEQ_REVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.9,0.95,1.0,1.05);
-----------------------------------------------------------------------------
-- KONSTANTE: REVIEWS_VEQ_REVIEW

-- REVIEWS_VEQ_REVIEW : constant Array_4_R_Type := Array_4_R_Type'(0.8,0.9,1.0,1.1);
-----------------------------------------------------------------------------
-- KONSTANTE: ANALYSENOTIZEN_AP_AFP

-- ANALYSENOTIZEN_AP_AFP : constant REAL := 150.0;
-----------------------------------------------------------------------------
-- KONSTANTE: SPEZIFIKATIONS_AP_AFP

-- SPEZIFIKATIONS_AP_AFP : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: SYSTEMENTWURFS_AP_AFP

-- SYSTEMENTWURFS_AP_AFP : constant REAL := 50.0;
-----------------------------------------------------------------------------
-- KONSTANTE: MODULSPEZ_AP_AFP

-- MODULSPEZ_AP_AFP : constant REAL := 30.0;
-----------------------------------------------------------------------------
-- KONSTANTE: HANDBUCH_AP_AFP

-- HANDBUCH_AP_AFP : constant REAL := 50.0;
-----------------------------------------------------------------------------
-- KONSTANTE: CODE_AP_AFP

-- CODE_AP_AFP : constant REAL := 15.0;
-----------------------------------------------------------------------------
-- KONSTANTE: INTEGRATIONS_AP_AFP

-- INTEGRATIONS_AP_AFP : constant REAL := 80.0;
-----------------------------------------------------------------------------
-- KONSTANTE: SPEZIFIKATIONSREVIEW_AP_AFP

-- SPEZIFIKATIONSREVIEW_AP_AFP : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: SYSTEMENTWURFSREVIEW_AP_AFP

-- SYSTEMENTWURFSREVIEW_AP_AFP : constant REAL := 40.0;
-----------------------------------------------------------------------------
-- KONSTANTE: MODULSPEZREVIEW_AP_AFP

-- MODULSPEZREVIEW_AP_AFP : constant REAL := 40.0;
-----------------------------------------------------------------------------
-- KONSTANTE: HANDBUCHREVIEW_AP_AFP

-- HANDBUCHREVIEW_AP_AFP : constant REAL := 60.0;
-----------------------------------------------------------------------------
-- KONSTANTE: CODEREVIEW_AP_AFP

-- CODEREVIEW_AP_AFP : constant REAL := 15.0;
-----------------------------------------------------------------------------
-- KONSTANTE: MODULTEST_AP_AFP

-- MODULTEST_AP_AFP : constant REAL := 30.0;
-----------------------------------------------------------------------------
-- KONSTANTE: INTEGRATIONSTEST_AP_AFP

-- INTEGRATIONSTEST_AP_AFP : constant REAL := 50.0;
-----------------------------------------------------------------------------
-- KONSTANTE: SYSTEMTEST_AP_AFP

-- SYSTEMTEST_AP_AFP : constant REAL := 100.0;
-----------------------------------------------------------------------------
-- KONSTANTE: SPEZIFIKATIONSKORREKTUR_AP_AFP

-- SPEZIFIKATIONSKORREKTUR_AP_AFP : constant REAL := 80.0;
-----------------------------------------------------------------------------
-- KONSTANTE: SYSTEMENTWURFSKORREKTUR_AP_AFP

-- SYSTEMENTWURFSKORREKTUR_AP_AFP : constant REAL := 50.0;
-----------------------------------------------------------------------------
-- KONSTANTE: MODULSPEZKORREKTUR_AP_AFP

-- MODULSPEZKORREKTUR_AP_AFP : constant REAL := 50.0;
-----------------------------------------------------------------------------
-- KONSTANTE: HANDBUCHKORREKTUR_AP_AFP

-- HANDBUCHKORREKTUR_AP_AFP : constant REAL := 80.0;
-----------------------------------------------------------------------------
-- KONSTANTE: CODEKORREKTUR_AP_AFP

-- CODEKORREKTUR_AP_AFP : constant REAL := 30.0;
-----------------------------------------------------------------------------
-- KONSTANTE: MODULE_PRO_SUBSYSTEM

-- MODULE_PRO_SUBSYSTEM : constant REAL := 6.0;
-----------------------------------------------------------------------------
-- KONSTANTE: AFP_PRO_MODUL

-- AFP_PRO_MODUL : constant REAL := 8.0;
-----------------------------------------------------------------------------
-- KONSTANTE: AFP_PRO_PROZEDUR

-- AFP_PRO_PROZEDUR : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNGSDAUER

-- EINARBEITUNGSDAUER : constant INTEGER := 30240;
-----------------------------------------------------------------------------
-- KONSTANTE: EINARBEITUNG_NOETIG_AB

-- EINARBEITUNG_NOETIG_AB : constant INTEGER := 14400;
-----------------------------------------------------------------------------
-- KONSTANTE: REVIEW_ABSTAND

-- REVIEW_ABSTAND : constant INTEGER := 1440;
-----------------------------------------------------------------------------
-- KONSTANTE: REVIEWAUFWAND_FUER_KUNDE

-- REVIEWAUFWAND_FUER_KUNDE : constant REAL := 180.0;
-----------------------------------------------------------------------------
-- KONSTANTE: UEBERLAPPUNGSGRAD

-- UEBERLAPPUNGSGRAD : constant REAL := 0.5;
-----------------------------------------------------------------------------
-- KONSTANTE: MH_PRO_MM

-- MH_PRO_MM : constant REAL := 132.0;
-----------------------------------------------------------------------------
-- KONSTANTE: LEERE_ANFORDERUNG

-- LEERE_ANFORDERUNG : constant Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
-----------------------------------------------------------------------------
-- KONSTANTE: LEERER_BEFUND

-- LEERER_BEFUND : constant Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
-----------------------------------------------------------------------------
-- KONSTANTE: KORREKTHEIT_EGAL

-- KORREKTHEIT_EGAL : constant REAL := 9999.9;
-----------------------------------------------------------------------------
-- KONSTANTE: MIN_DATE

-- MIN_DATE : constant DATE := 1901/01/01/00:00;
-----------------------------------------------------------------------------
-- KONSTANTE: MAX_DATE

-- MAX_DATE : constant DATE := 2099/12/31/23:59;
-----------------------------------------------------------------------------
-- ENTITAET: NULL_ENTITY

entity type NULL_ENTITY is 
end type;
-----------------------------------------------------------------------------
-- ENTITAET: KAUSALITAETSFLUSS

entity type KAUSALITAETSFLUSS is 
attributes
  REGELMENGE : Set_S_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: DELTAT

entity type DELTAT is 
attributes
  T : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: ANFORDERUNGEN_NACH_IFPUG_4

entity type ANFORDERUNGEN_NACH_IFPUG_4 is 
attributes
  INTERNAL_LOGICAL_FILES : Array_3_I_Type;
  EXTERNAL_INTERFACE_FILES : Array_3_I_Type;
  EXTERNAL_INPUTS : Array_3_I_Type;
  EXTERNAL_OUTPUTS : Array_3_I_Type;
  EXTERNAL_INQUIRIES : Array_3_I_Type;
  DATA_COMMUNICATIONS : INTEGER;
  DISTRIBUTED_DATA_PROCESSING : INTEGER;
  PERFORMANCE : INTEGER;
  HEAVILY_USED_CONFIGURATION : INTEGER;
  TRANSACTION_RATE : INTEGER;
  ONLINE_DATA_ENTRY : INTEGER;
  END_USER_EFFICIENCY : INTEGER;
  ONLINE_UPDATE : INTEGER;
  COMPLEX_PROCESSING : INTEGER;
  REUSABILITY : INTEGER;
  INSTALLATION_EASE : INTEGER;
  OPERATIONAL_EASE : INTEGER;
  MULTIPLE_SITES : INTEGER;
  FACILITATE_CHANGE : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PROJEKT

entity type PROJEKT is 
attributes
  FIX_KOSTEN : REAL;
  VOLLSTAENDIGKEIT_DER_ANALYSENOTIZEN : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PROJEKTZIELE

entity type PROJEKTZIELE is 
attributes
  SOLL_KOSTEN : REAL;
  SOLL_TERMIN : DATE;
  SOLL_VOLLSTAENDIGKEIT_SPEZIFIKATION : REAL;
  SOLL_VOLLSTAENDIGKEIT_SYSTEMENTWURF : REAL;
  SOLL_VOLLSTAENDIGKEIT_MODULSPEZ : REAL;
  SOLL_VOLLSTAENDIGKEIT_CODE : REAL;
  SOLL_VOLLSTAENDIGKEIT_HANDBUCH : REAL;
  SOLL_KORREKTHEIT_SPEZIFIKATION : REAL;
  SOLL_KORREKTHEIT_SYSTEMENTWURF : REAL;
  SOLL_KORREKTHEIT_MODULSPEZ : REAL;
  SOLL_KORREKTHEIT_CODE : REAL;
  SOLL_KORREKTHEIT_HANDBUCH : REAL;
  MITTEL_AB_DAUER : INTEGER;
  MITTEL_AB_KOSTEN : REAL;
  MITTEL_AB_VOLL_CODE : REAL;
  MITTEL_AB_KORR_CODE : REAL;
  MITTEL_AB_VOLL_HB : REAL;
  MITTEL_AB_KORR_HB : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: KUNDENWUNSCH

entity type KUNDENWUNSCH is 
attributes
  SOLL_ANFORDERUNGEN : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  UMFANG_AFP : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PROJEKTZUSTAND

entity type PROJEKTZUSTAND is 
attributes
  KOSTEN : REAL;
  AUFWAND_SPEZIFIKATIONSPHASE : REAL;
  AUFWAND_ENTWURFSPHASE : REAL;
  AUFWAND_CODIERUNGSPHASE : REAL;
  AUFWAND_TESTPHASE : REAL;
  AUFWAND_HANDBUCHERSTELLUNG : REAL;
  AUFWAND_REVIEWS : REAL;
  AUFWAND_TESTS : REAL;
  AUFWAND_KORREKTUR_REVIEWS : REAL;
  AUFWAND_KORREKTUR_TESTS : REAL;
  AUFWAND_FUER_KUNDE : REAL;
  BEHOBENE_FEHLER : REAL;
  PROJEKTBEGINN : DATE;
  PROJEKTENDE : DATE;
  PROJEKT_IST_BEENDET : BOOLEAN;
  SYSTEM_AUSGELIEFERT : BOOLEAN;
  ANZAHL_ABNAHMETESTS : INTEGER;
  GESAMTAUFWAND : REAL;
  KOSTEN_PRO_MM : REAL;
  AUFWANDSVERTEILUNG_PHASEN : Array_5_R_Type;
  MITTELWERT_VOLLSTAENDIGKEIT : REAL;
  MITTELWERT_VOLLSTAENDIGKEIT_ZV : REAL;
  MITTELWERT_KORREKTHEIT_ZV : REAL;
  PROZENT_DAUER_ZV : REAL;
  PROZENT_KOSTEN_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PROJEKTLOGBUCH

entity type PROJEKTLOGBUCH is 
attributes
  ANALYSE_AUFWAND : REAL;
  ANALYSE_BEGINN : DATE;
  ANALYSE_ENDE : DATE;
  ANALYSE_DAUER : INTEGER;
  SPEZIFIKATION_AUFWAND : REAL;
  SPEZIFIKATION_BEGINN : DATE;
  SPEZIFIKATION_ENDE : DATE;
  SPEZIFIKATION_DAUER : INTEGER;
  ENTWURF_AUFWAND : REAL;
  ENTWURF_BEGINN : DATE;
  ENTWURF_ENDE : DATE;
  ENTWURF_DAUER : INTEGER;
  MODSPEZ_AUFWAND : REAL;
  MODSPEZ_BEGINN : DATE;
  MODSPEZ_ENDE : DATE;
  MODSPEZ_DAUER : INTEGER;
  CODE_AUFWAND : REAL;
  CODE_BEGINN : DATE;
  CODE_ENDE : DATE;
  CODE_DAUER : INTEGER;
  INTEGRATION_AUFWAND : REAL;
  INTEGRATION_BEGINN : DATE;
  INTEGRATION_ENDE : DATE;
  INTEGRATION_DAUER : INTEGER;
  HANDBUCH_AUFWAND : REAL;
  HANDBUCH_BEGINN : DATE;
  HANDBUCH_ENDE : DATE;
  HANDBUCH_DAUER : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: TESTLOGBUCH

entity type TESTLOGBUCH is 
attributes
  MTEST_AUFWAND : REAL;
  MTEST_BEGINN : DATE;
  MTEST_ENDE : DATE;
  MTEST_DAUER : INTEGER;
  MTEST_K_AUFWAND : REAL;
  MTEST_K_BEGINN : DATE;
  MTEST_K_ENDE : DATE;
  MTEST_K_DAUER : INTEGER;
  ITEST_AUFWAND : REAL;
  ITEST_BEGINN : DATE;
  ITEST_ENDE : DATE;
  ITEST_DAUER : INTEGER;
  ITEST_K_AUFWAND : REAL;
  ITEST_K_BEGINN : DATE;
  ITEST_K_ENDE : DATE;
  ITEST_K_DAUER : INTEGER;
  STEST_AUFWAND : REAL;
  STEST_BEGINN : DATE;
  STEST_ENDE : DATE;
  STEST_DAUER : INTEGER;
  STEST_K_AUFWAND : REAL;
  STEST_K_BEGINN : DATE;
  STEST_K_ENDE : DATE;
  STEST_K_DAUER : INTEGER;
  ATEST_AUFWAND : REAL;
  ATEST_BEGINN : DATE;
  ATEST_ENDE : DATE;
  ATEST_DAUER : INTEGER;
  ATEST_K_AUFWAND : REAL;
  ATEST_K_BEGINN : DATE;
  ATEST_K_ENDE : DATE;
  ATEST_K_DAUER : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: REVIEWLOGBUCH

entity type REVIEWLOGBUCH is 
attributes
  SREVIEW_AUFWAND : REAL;
  SREVIEW_BEGINN : DATE;
  SREVIEW_ENDE : DATE;
  SREVIEW_DAUER : INTEGER;
  SREVIEW_K_AUFWAND : REAL;
  SREVIEW_K_BEGINN : DATE;
  SREVIEW_K_ENDE : DATE;
  SREVIEW_K_DAUER : INTEGER;
  EREVIEW_AUFWAND : REAL;
  EREVIEW_BEGINN : DATE;
  EREVIEW_ENDE : DATE;
  EREVIEW_DAUER : INTEGER;
  EREVIEW_K_AUFWAND : REAL;
  EREVIEW_K_BEGINN : DATE;
  EREVIEW_K_ENDE : DATE;
  EREVIEW_K_DAUER : INTEGER;
  MREVIEW_AUFWAND : REAL;
  MREVIEW_BEGINN : DATE;
  MREVIEW_ENDE : DATE;
  MREVIEW_DAUER : INTEGER;
  MREVIEW_K_AUFWAND : REAL;
  MREVIEW_K_BEGINN : DATE;
  MREVIEW_K_ENDE : DATE;
  MREVIEW_K_DAUER : INTEGER;
  CREVIEW_AUFWAND : REAL;
  CREVIEW_BEGINN : DATE;
  CREVIEW_ENDE : DATE;
  CREVIEW_DAUER : INTEGER;
  CREVIEW_K_AUFWAND : REAL;
  CREVIEW_K_BEGINN : DATE;
  CREVIEW_K_ENDE : DATE;
  CREVIEW_K_DAUER : INTEGER;
  HREVIEW_AUFWAND : REAL;
  HREVIEW_BEGINN : DATE;
  HREVIEW_ENDE : DATE;
  HREVIEW_DAUER : INTEGER;
  HREVIEW_K_AUFWAND : REAL;
  HREVIEW_K_BEGINN : DATE;
  HREVIEW_K_ENDE : DATE;
  HREVIEW_K_DAUER : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: ZEITERFASSUNGSBOGEN

entity type ZEITERFASSUNGSBOGEN is 
attributes
  ANALYSE : Record_R_Type;
  SPEZIFIKATION : Record_R_Type;
  GROBENTWURF : Record_R_Type;
  FEINENTWURF : Record_R_Type;
  CODE : Record_R_Type;
  HANDBUCH : Record_R_Type;
  SPEZREVIEW : Record_R_Type;
  GROBENTWURFSREVIEW : Record_R_Type;
  FEINENTWURFSREVIEW : Record_R_Type;
  CODEREVIEW : Record_R_Type;
  HANDBUCHREVIEW : Record_R_Type;
  MODULTEST : Record_R_Type;
  INTTEST : Record_R_Type;
  SYSTEMTEST : Record_R_Type;
  ANALYSE_K : Record_R_Type;
  SPEZ_K : Record_R_Type;
  GROBENTWURF_K : Record_R_Type;
  FEINENTWURF_K : Record_R_Type;
  CODE_K : Record_R_Type;
  HANDBUCH_K : Record_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PRUEFUNGSEFFEKTIVITAET

entity type PRUEFUNGSEFFEKTIVITAET is 
attributes
  SPEZREVIEWEFFEKTIVITAET : REAL;
  ENTWURFSREVIEWEFFEKTIVITAET : REAL;
  MODULSPEZREVIEWEFFEKTIVITAET : REAL;
  CODEREVIEWEFFEKTIVITAET : REAL;
  HANDBUCHREVIEWEFFEKTIVITAET : REAL;
  MODULTESTEFFEKTIVITAET : REAL;
  INTEGRATIONSTESTEFFEKTIVITAET : REAL;
  SYSTEMTESTEFFEKTIVITAET : REAL;
  ABNAHMETESTEFFEKTIVITAET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PERSON

entity type PERSON is 
end type;
-----------------------------------------------------------------------------
-- ENTITAET: KUNDE

entity type KUNDE conforming  PERSON is 
end type;
-----------------------------------------------------------------------------
-- ENTITAET: MITARBEITER

entity type MITARBEITER conforming  PERSON is 
attributes
  KOSTEN : REAL;
  IST_EINGESTELLT : BOOLEAN;
  VERFUEGBAR_AB : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: ENTWICKLER

entity type ENTWICKLER conforming  MITARBEITER, PERSON is 
attributes
  KOSTEN : REAL;
  IST_EINGESTELLT : BOOLEAN;
  VERFUEGBAR_AB : DATE;
  AUTOR_ID : INTEGER;
  ERFAHRUNG : Record_IIIII_Type;
  NOTATIONSERFAHRUNG : Set_Record_SI_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PROJEKTLEITER

entity type PROJEKTLEITER conforming  MITARBEITER, PERSON is 
attributes
  KOSTEN : REAL;
  IST_EINGESTELLT : BOOLEAN;
  VERFUEGBAR_AB : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: DOKUMENT

entity type DOKUMENT is 
attributes
  INHALT : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  ANZ_AFP : REAL;
  ANZ_FEHLER_GES : REAL;
  FEHLER_PRO_AFP : REAL;
  PROZENT_AFP_100 : REAL;
  PROZENT_AFP_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: ANALYSENOTIZEN

entity type ANALYSENOTIZEN conforming  DOKUMENT is 
attributes
  INHALT : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  ANZ_AFP : REAL;
  ANZ_FEHLER_GES : REAL;
  FEHLER_PRO_AFP : REAL;
  PROZENT_AFP_100 : REAL;
  PROZENT_AFP_ZV : REAL;
  UNBEARBEITETE_HB_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_SPEZ_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_ENTW_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_MSPEZ_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_CODE_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_HB_IDS : Bag_I_Type;
  ANZ_AF : REAL;
  AF_PRO_AFP : REAL;
  PROZENT_FEHLER_PRO_SEITE_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: SPEZIFIKATION

entity type SPEZIFIKATION conforming  DOKUMENT is 
attributes
  INHALT : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  ANZ_AFP : REAL;
  ANZ_FEHLER_GES : REAL;
  FEHLER_PRO_AFP : REAL;
  PROZENT_AFP_100 : REAL;
  PROZENT_AFP_ZV : REAL;
  SEITEN : INTEGER;
  UNBEARBEITETE_HB_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_ENTW_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_MSPEZ_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_CODE_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_HB_IDS : Bag_I_Type;
  ANZ_AF : REAL;
  AF_PRO_AFP : REAL;
  FEHLER_PRO_SEITE : REAL;
  KONS_SC_AF : REAL;
  PROZENT_FEHLER_PRO_SEITE_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: SYSTEMENTWURF

entity type SYSTEMENTWURF conforming  DOKUMENT is 
attributes
  INHALT : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  ANZ_AFP : REAL;
  ANZ_FEHLER_GES : REAL;
  FEHLER_PRO_AFP : REAL;
  PROZENT_AFP_100 : REAL;
  PROZENT_AFP_ZV : REAL;
  SEITEN : INTEGER;
  SUBSYSTEME : INTEGER;
  IN_ARBEIT_FUER_MSPEZ_IDS : Bag_I_Type;
  IN_ARBEIT_FUER_CODE_IDS : Bag_I_Type;
  ANZ_AF : REAL;
  ANZ_GF : REAL;
  AF_PRO_AFP : REAL;
  GF_PRO_AFP : REAL;
  FEHLER_PRO_SEITE : REAL;
  KONS_GC_AF : REAL;
  KONS_GC_GF : REAL;
  PROZENT_FEHLER_PRO_SEITE_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: MODULSPEZIFIKATION

entity type MODULSPEZIFIKATION conforming  DOKUMENT is 
attributes
  INHALT : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  ANZ_AFP : REAL;
  ANZ_FEHLER_GES : REAL;
  FEHLER_PRO_AFP : REAL;
  PROZENT_AFP_100 : REAL;
  PROZENT_AFP_ZV : REAL;
  SEITEN : INTEGER;
  MODULE : INTEGER;
  PROZEDUREN : INTEGER;
  IN_ARBEIT_FUER_CODE_IDS : Bag_I_Type;
  ANZ_AF : REAL;
  ANZ_GF : REAL;
  ANZ_FF : REAL;
  AF_PRO_AFP : REAL;
  GF_PRO_AFP : REAL;
  FF_PRO_AFP : REAL;
  FEHLER_PRO_SEITE : REAL;
  KONS_MC_AF : REAL;
  KONS_MC_GF : REAL;
  KONS_MC_FF : REAL;
  PROZENT_FEHLER_PRO_SEITE_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: CODE

entity type CODE conforming  DOKUMENT is 
attributes
  INHALT : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  ANZ_AFP : REAL;
  ANZ_FEHLER_GES : REAL;
  FEHLER_PRO_AFP : REAL;
  PROZENT_AFP_100 : REAL;
  PROZENT_AFP_ZV : REAL;
  INTEGRIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  ZEILEN : INTEGER;
  MODULE : INTEGER;
  SUBSYSTEME : INTEGER;
  PROZEDUREN : INTEGER;
  ANZ_AF : REAL;
  ANZ_GF : REAL;
  ANZ_FF : REAL;
  ANZ_IF : REAL;
  AF_PRO_AFP : REAL;
  GF_PRO_AFP : REAL;
  FF_PRO_AFP : REAL;
  IF_PRO_AFP : REAL;
  FEHLER_PRO_KLOC : REAL;
  PROZENT_FEHLER_PRO_KLOC_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: HANDBUCH

entity type HANDBUCH conforming  DOKUMENT is 
attributes
  INHALT : Bag_Record_IRIRRRRR_Type;
  UNBEARBEITETE_IDS : Bag_I_Type;
  ANZ_AFP : REAL;
  ANZ_FEHLER_GES : REAL;
  FEHLER_PRO_AFP : REAL;
  PROZENT_AFP_100 : REAL;
  PROZENT_AFP_ZV : REAL;
  SEITEN : INTEGER;
  ANZ_AF : REAL;
  ANZ_HF : REAL;
  AF_PRO_AFP : REAL;
  HF_PRO_AFP : REAL;
  FEHLER_PRO_SEITE : REAL;
  KONS_HC_AF : REAL;
  PROZENT_FEHLER_PRO_SEITE_ZV : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: PRUEFBERICHT

entity type PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: REVIEWBERICHT

entity type REVIEWBERICHT conforming  PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: TESTBERICHT

entity type TESTBERICHT conforming  PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: SPEZIFIKATIONSREVIEWBERICHT

entity type SPEZIFIKATIONSREVIEWBERICHT conforming  REVIEWBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: SYSTEMENTWURFSREVIEWBERICHT

entity type SYSTEMENTWURFSREVIEWBERICHT conforming  REVIEWBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: MODULSPEZREVIEWBERICHT

entity type MODULSPEZREVIEWBERICHT conforming  REVIEWBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: CODEREVIEWBERICHT

entity type CODEREVIEWBERICHT conforming  REVIEWBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: HANDBUCHREVIEWBERICHT

entity type HANDBUCHREVIEWBERICHT conforming  REVIEWBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: MODULTESTBERICHT

entity type MODULTESTBERICHT conforming  TESTBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: INTEGRATIONSTESTBERICHT

entity type INTEGRATIONSTESTBERICHT conforming  TESTBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: SYSTEMTESTBERICHT

entity type SYSTEMTESTBERICHT conforming  TESTBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: ABNAHMETESTBERICHT

entity type ABNAHMETESTBERICHT conforming  TESTBERICHT, PRUEFBERICHT is 
attributes
  INHALT : Bag_Record_IRRRRRRRR_Type;
  NICHT_KORRIGIERTE_IDS : Bag_I_Type;
  FEHLER : REAL;
  VERLUSTE : REAL;
  IST_LEER : BOOLEAN;
  ANZ_ANF : REAL;
  ANZ_NICHT_KORR_ANF : REAL;
  NUMMER : INTEGER;
  ANZ_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_KORR_FEHLER_PRO_PRF : Array_10_R_Type;
  ANZ_VERLUSTE_PRO_PRF : Array_10_R_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: NOTATION

entity type NOTATION is 
attributes
  NAME : STRING;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: NOTATIONSVOREINSTELLUNG

entity type NOTATIONSVOREINSTELLUNG is 
attributes
  FUER_NOTIZEN : STRING;
  FUER_SPEZIFIKATION : STRING;
  FUER_SYSTEMENTWURF : STRING;
  FUER_MODULSPEZ : STRING;
  FUER_CODE : STRING;
  FUER_HANDBUCH : STRING;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_BEARBEITEN_Entity

entity type BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_PRODUZIEREN_Entity

entity type BASE2_SOLL_PRODUZIEREN_Entity conforming  BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_KORRIGIEREN_Entity

entity type BASE2_SOLL_KORRIGIEREN_Entity conforming  BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_ALLES_KORRIGIEREN_Entity

entity type BASE2_SOLL_ALLES_KORRIGIEREN_Entity conforming  BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_INTEGRIEREN_Entity

entity type BASE2_SOLL_INTEGRIEREN_Entity conforming  BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_MODULE_TESTEN_Entity

entity type BASE2_SOLL_MODULE_TESTEN_Entity conforming  BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_SUBSYSTEME_TESTEN_Entity

entity type BASE2_SOLL_SUBSYSTEME_TESTEN_Entity conforming  BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_SYSTEM_TESTEN_Entity

entity type BASE2_SOLL_SYSTEM_TESTEN_Entity conforming  BASE2_SOLL_BEARBEITEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
  ZEITDRUCK : REAL;
  STARTDATUM : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_ABNEHMEN_Entity

entity type BASE2_SOLL_ABNEHMEN_Entity is 
attributes
  Dummy : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_REVIEW_SOLL_STATTFINDEN_Entity

entity type BASE2_REVIEW_SOLL_STATTFINDEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_REVIEW_3_SOLL_STATTFINDEN_Entity

entity type BASE2_REVIEW_3_SOLL_STATTFINDEN_Entity conforming  BASE2_REVIEW_SOLL_STATTFINDEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_Entity

entity type BASE2_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_Entity conforming  BASE2_REVIEW_SOLL_STATTFINDEN_Entity is 
attributes
  ANZAHL_X : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity

entity type BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity is 
attributes
  Dummy : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity

entity type BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity is 
attributes
  Dummy : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_BEARBEITET_Entity

entity type BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_PRODUZIERT_Entity

entity type BASE2_PRODUZIERT_Entity conforming  BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  PRODUKTIVITAET : REAL;
  FEHLERRATE : Record_RRRRR_Type;
  VERLUSTQUOTE : REAL;
  VORGABEDOKUMENT : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_INTEGRIERT_Entity

entity type BASE2_INTEGRIERT_Entity conforming  BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  KORREKTURLEISTUNG : Record_RRRRR_Type;
  PRODUKTIVITAET : REAL;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_KORRIGIERT_Entity

entity type BASE2_KORRIGIERT_Entity conforming  BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  KORREKTURLEISTUNG : Record_RRRRR_Type;
  FEHLERBQ : Record_RRRRR_Type;
  PRODUKTIVITAET : REAL;
  VERLUSTBQ : REAL;
  FEHLERRATE : Record_RRRRR_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_KORRIGIERT_ALLES_Entity

entity type BASE2_KORRIGIERT_ALLES_Entity conforming  BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  KORREKTURLEISTUNG_SPEZ : Record_RRRRR_Type;
  KORREKTURLEISTUNG_ENTWURF : Record_RRRRR_Type;
  KORREKTURLEISTUNG_MODULSPEZ : Record_RRRRR_Type;
  KORREKTURLEISTUNG_CODE : Record_RRRRR_Type;
  KORREKTURLEISTUNG_HANDBUCH : Record_RRRRR_Type;
  FEHLERBQ : Record_RRRRR_Type;
  PRODUKTIVITAET_SPEZ : REAL;
  PRODUKTIVITAET_ENTWURF : REAL;
  PRODUKTIVITAET_MODULSPEZ : REAL;
  PRODUKTIVITAET_CODE : REAL;
  PRODUKTIVITAET_HANDBUCH : REAL;
  VERLUSTBQ : REAL;
  FEHLERRATE : Record_RRRRR_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_TESTET_Entity

entity type BASE2_TESTET_Entity conforming  BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  PRUEFLEISTUNG : REAL;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_TESTET_MODULE_Entity

entity type BASE2_TESTET_MODULE_Entity conforming  BASE2_TESTET_Entity, BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  PRUEFLEISTUNG : REAL;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_TESTET_SUBSYSTEME_Entity

entity type BASE2_TESTET_SUBSYSTEME_Entity conforming  BASE2_TESTET_Entity, BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  PRUEFLEISTUNG : REAL;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_TESTET_SYSTEM_Entity

entity type BASE2_TESTET_SYSTEM_Entity conforming  BASE2_TESTET_Entity, BASE2_BEARBEITET_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  ZEITANTEIL : REAL;
  PRUEFLEISTUNG : REAL;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_REVIEW_FINDET_STATT_Entity

entity type BASE2_REVIEW_FINDET_STATT_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_REVIEW_3_FINDET_STATT_Entity

entity type BASE2_REVIEW_3_FINDET_STATT_Entity conforming  BASE2_REVIEW_FINDET_STATT_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_REVIEW_MIT_KUNDE_FINDET_STATT_Entity

entity type BASE2_REVIEW_MIT_KUNDE_FINDET_STATT_Entity conforming  BASE2_REVIEW_FINDET_STATT_Entity is 
attributes
  ARBEITSPAKET : Bag_Record_IRIRRRRR_Type;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_BEGUTACHTET_Entity

entity type BASE2_BEGUTACHTET_Entity is 
attributes
  ZEITANTEIL : REAL;
  PRUEFLEISTUNG : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_NIMMT_AB_Entity

entity type BASE2_NIMMT_AB_Entity is 
attributes
  FERTIG_AM : DATE;
  FEHLEREQ : Record_RRRRR_Type;
  VERLUSTEQ : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_ARBEITET_SICH_EIN_Entity

entity type BASE2_ARBEITET_SICH_EIN_Entity is 
attributes
  BIS : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_GESCHRIEBEN_IN_Entity

entity type BASE2_GESCHRIEBEN_IN_Entity is 
attributes
  Dummy : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_GEEIGNET_FUER_Entity

entity type BASE2_GEEIGNET_FUER_Entity is 
attributes
  X_PRO_AFP : REAL;
  AUSWIRKUNG : Array_4_Record_RRRRRRRRR_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_ERFASST_ZEIT_Entity

entity type BASE2_ERFASST_ZEIT_Entity is 
attributes
  Dummy : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_INITIALIZE_Entity

entity type BASE2_1_INITIALIZE_Entity is 
attributes
  LCD : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_GLOBALE_INITIALISIERUNG_Entity

entity type BASE2_2_GLOBALE_INITIALISIERUNG_Entity is 
attributes
  LCD : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_ABBRUCH_DUMMY_REGEL_Entity

entity type BASE2_1_ABBRUCH_DUMMY_REGEL_Entity is 
attributes
  LCD : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity

entity type BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity is 
attributes
  LCD : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity

entity type BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity is 
attributes
  LCD : DATE;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity

entity type BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity is 
attributes
  LCD : DATE;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity

entity type BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity is 
attributes
  LCD : DATE;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity

entity type BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity is 
attributes
  LCD : DATE;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity

entity type BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity is 
attributes
  LCD : DATE;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_CODE_BEARBEITEN_Entity

entity type BASE2_1_CODE_BEARBEITEN_Entity is 
attributes
  LCD : DATE;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_HANDBUCH_BEARBEITEN_Entity

entity type BASE2_1_HANDBUCH_BEARBEITEN_Entity is 
attributes
  LCD : DATE;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity

entity type BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity is 
attributes
  LCD : DATE;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_ANALYSIERT_Entity

entity type BASE2_2_ENTWICKLER_ANALYSIERT_Entity is 
attributes
  LCD : DATE;
  A : Record_IRIRRRRR_Type;
  B : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity

entity type BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity is 
attributes
  LCD : DATE;
  A : Record_IRIRRRRR_Type;
  B : Record_IRIRRRRR_Type;
  AH : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ID : INTEGER;
  ID_DUMMY : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_SPEZIFIKATION_REVIEWEN_Entity

entity type BASE2_2_SPEZIFIKATION_REVIEWEN_Entity is 
attributes
  LCD : DATE;
  T : INTEGER;
  PRF_ANF : Record_IRIRRRRR_Type;
  REF_ANF : Record_IRIRRRRR_Type;
  K_ANF : Record_IRIRRRRR_Type;
  B : Record_IRRRRRRRR_Type;
  X : REAL;
  FEHLER_DIFF : REAL;
  ENTDECKTE_FEHLER : REAL;
  GESAMT_FEHLER : REAL;
  GESAMT_AFP : REAL;
  ANZ_SEITEN : INTEGER;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_FEHLER : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AS : Record_IRIRRRRR_Type;
  AN : Record_IRIRRRRR_Type;
  AE : Record_IRIRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  AH : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  MAX_AF : REAL;
  MAX_VERLUST : REAL;
  AF_FAKTOR : REAL;
  AF_NEU : REAL;
  HINZUGEFUEGT_S_AFP : REAL;
  HINZUGEFUEGT_E_AFP : REAL;
  HINZUGEFUEGT_M_AFP : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  HINZUGEFUEGT_H_AFP : REAL;
  HINZUGEFUEGTE_AF : REAL;
  HINZUGEFUEGTE_GF : REAL;
  HINZUGEFUEGTE_FF : REAL;
  HINZUGEFUEGTE_IF : REAL;
  HINZUGEFUEGTE_HF : REAL;
  ZEIT_S : REAL;
  ZEIT_E : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  ZEIT_H : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_ENTWIRFT_Entity

entity type BASE2_2_ENTWICKLER_ENTWIRFT_Entity is 
attributes
  LCD : DATE;
  A : Record_IRIRRRRR_Type;
  B : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ID_DUMMY : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity

entity type BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity is 
attributes
  LCD : DATE;
  T : INTEGER;
  PRF_ANF : Record_IRIRRRRR_Type;
  REF_ANF : Record_IRIRRRRR_Type;
  B : Record_IRRRRRRRR_Type;
  X : REAL;
  FEHLER_DIFF : REAL;
  ENTDECKTE_FEHLER : REAL;
  GESAMT_FEHLER : REAL;
  GESAMT_AFP : REAL;
  ANZ_SEITEN : INTEGER;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AE : Record_IRIRRRRR_Type;
  AS : Record_IRIRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_RF : REAL;
  MAX_AF : REAL;
  MAX_GF : REAL;
  MAX_VERLUST : REAL;
  AF_FAKTOR : REAL;
  GF_FAKTOR : REAL;
  AF_NEU : REAL;
  GF_NEU : REAL;
  HINZUGEFUEGT_E_AFP : REAL;
  HINZUGEFUEGT_M_AFP : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  HINZUGEFUEGTE_AF : REAL;
  HINZUGEFUEGTE_GF : REAL;
  HINZUGEFUEGTE_FF : REAL;
  HINZUGEFUEGTE_IF : REAL;
  ZEIT_S : REAL;
  ZEIT_E : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity

entity type BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity is 
attributes
  LCD : DATE;
  A : Record_IRIRRRRR_Type;
  B : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ID_DUMMY : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity

entity type BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity is 
attributes
  LCD : DATE;
  T : INTEGER;
  PRF_ANF : Record_IRIRRRRR_Type;
  REF_ANF : Record_IRIRRRRR_Type;
  B : Record_IRRRRRRRR_Type;
  X : REAL;
  FEHLER_DIFF : REAL;
  ENTDECKTE_FEHLER : REAL;
  GESAMT_FEHLER : REAL;
  GESAMT_AFP : REAL;
  ANZ_SEITEN : INTEGER;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AE : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  MAX_AF : REAL;
  MAX_GF : REAL;
  MAX_FF : REAL;
  MAX_VERLUST : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_RF : REAL;
  AF_FAKTOR : REAL;
  GF_FAKTOR : REAL;
  FF_FAKTOR : REAL;
  AF_NEU : REAL;
  GF_NEU : REAL;
  FF_NEU : REAL;
  HINZUGEFUEGT_M_AFP : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  HINZUGEFUEGTE_AF : REAL;
  HINZUGEFUEGTE_GF : REAL;
  HINZUGEFUEGTE_FF : REAL;
  HINZUGEFUEGTE_IF : REAL;
  ZEIT_E : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_CODIERT_Entity

entity type BASE2_2_ENTWICKLER_CODIERT_Entity is 
attributes
  LCD : DATE;
  A : Record_IRIRRRRR_Type;
  B : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ID_DUMMY : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_CODE_REVIEWEN_Entity

entity type BASE2_2_CODE_REVIEWEN_Entity is 
attributes
  LCD : DATE;
  T : INTEGER;
  PRF_ANF : Record_IRIRRRRR_Type;
  REF_ANF : Record_IRIRRRRR_Type;
  B : Record_IRRRRRRRR_Type;
  X : REAL;
  FEHLER_DIFF : REAL;
  ENTDECKTE_FEHLER : REAL;
  GESAMT_FEHLER : REAL;
  GESAMT_AFP : REAL;
  ANZ_ZEILEN : INTEGER;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_ALT : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  MAX_AF : REAL;
  MAX_GF : REAL;
  MAX_FF : REAL;
  MAX_RF : REAL;
  MAX_IF : REAL;
  MAX_VERLUST : REAL;
  ENTDECKTE_RF : REAL;
  AF_FAKTOR : REAL;
  GF_FAKTOR : REAL;
  FF_FAKTOR : REAL;
  IF_FAKTOR : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity

entity type BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity is 
attributes
  LCD : DATE;
  A : Record_IRIRRRRR_Type;
  B : Record_IRIRRRRR_Type;
  AH : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ID_DUMMY : INTEGER;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_HANDBUCH_REVIEWEN_Entity

entity type BASE2_2_HANDBUCH_REVIEWEN_Entity is 
attributes
  LCD : DATE;
  T : INTEGER;
  PRF_ANF : Record_IRIRRRRR_Type;
  REF_ANF : Record_IRIRRRRR_Type;
  K_ANF : Record_IRIRRRRR_Type;
  B : Record_IRRRRRRRR_Type;
  X : REAL;
  FEHLER_DIFF : REAL;
  ENTDECKTE_FEHLER : REAL;
  GESAMT_FEHLER : REAL;
  GESAMT_AFP : REAL;
  ANZ_SEITEN : INTEGER;
  GERUNDET : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_HF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AH : Record_IRIRRRRR_Type;
  AS : Record_IRIRRRRR_Type;
  AE : Record_IRIRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  MAX_AF : REAL;
  MAX_HF : REAL;
  MAX_RF : REAL;
  MAX_VERLUST : REAL;
  ENTDECKTE_RF : REAL;
  AF_FAKTOR : REAL;
  HF_FAKTOR : REAL;
  AF_NEU : REAL;
  HINZUGEFUEGT_H_AFP : REAL;
  HINZUGEFUEGTE_AF : REAL;
  HINZUGEFUEGTE_HF : REAL;
  ZEIT_H : REAL;
  ZEIT_S : REAL;
  ZEIT_E : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  HANDBUCHFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_INTEGRIERT_Entity

entity type BASE2_2_ENTWICKLER_INTEGRIERT_Entity is 
attributes
  LCD : DATE;
  A : Record_IRIRRRRR_Type;
  B : Record_IRIRRRRR_Type;
  ANOTIZEN : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  FAKTOR : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity

entity type BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity is 
attributes
  LCD : DATE;
  REF_ANF : Record_IRIRRRRR_Type;
  TEST_ANF : Record_IRIRRRRR_Type;
  FEHLER_DIFF : REAL;
  ENTDECKTE_F : REAL;
  X : REAL;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  B : Record_IRRRRRRRR_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_ALT : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  MAX_AF : REAL;
  MAX_GF : REAL;
  MAX_FF : REAL;
  MAX_IF : REAL;
  MAX_RF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity

entity type BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity is 
attributes
  LCD : DATE;
  REF_ANF : Record_IRIRRRRR_Type;
  TEST_ANF : Record_IRIRRRRR_Type;
  FEHLER_DIFF : REAL;
  ENTDECKTE_F : REAL;
  X : REAL;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  B : Record_IRRRRRRRR_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_ALT : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AE : Record_IRIRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  MAX_AF : REAL;
  MAX_GF : REAL;
  MAX_FF : REAL;
  MAX_IF : REAL;
  MAX_RF : REAL;
  MAX_VERLUST : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_RF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  HINZUGEFUEGT_M_AFP : REAL;
  ZEIT_E : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity

entity type BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity is 
attributes
  LCD : DATE;
  REF_ANF : Record_IRIRRRRR_Type;
  TEST_ANF : Record_IRIRRRRR_Type;
  FEHLER_DIFF : REAL;
  ENTDECKTE_F : REAL;
  X : REAL;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  B : Record_IRRRRRRRR_Type;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_ALT : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  ENTDECKTE_RF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AS : Record_IRIRRRRR_Type;
  AE : Record_IRIRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  AH : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  MAX_AF : REAL;
  MAX_GF : REAL;
  MAX_FF : REAL;
  MAX_IF : REAL;
  MAX_RF : REAL;
  MAX_VERLUST : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_RF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  ENTDECKTE_HF : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  HINZUGEFUEGT_E_AFP : REAL;
  HINZUGEFUEGT_M_AFP : REAL;
  ZEIT_S : REAL;
  ZEIT_E : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  ZEIT_H : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  A : Record_IRIRRRRR_Type;
  A_ALT : Record_IRIRRRRR_Type;
  A_ANF : Record_IRIRRRRR_Type;
  A_REF : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  HINZUGEFUEGTE_AFP : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
-----------------------------------------------------------------------------
-- ENTITAET: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity

entity type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity is 
attributes
  LCD : DATE;
  B : Record_IRRRRRRRR_Type;
  AN : Record_IRIRRRRR_Type;
  AS : Record_IRIRRRRR_Type;
  AE : Record_IRIRRRRR_Type;
  AM : Record_IRIRRRRR_Type;
  AC : Record_IRIRRRRR_Type;
  AC_ALT : Record_IRIRRRRR_Type;
  AH : Record_IRIRRRRR_Type;
  T : REAL;
  DT : REAL;
  NOETIGE_ZEIT : REAL;
  MAX_AF : REAL;
  MAX_GF : REAL;
  MAX_FF : REAL;
  MAX_IF : REAL;
  MAX_VERLUST : REAL;
  ENTDECKTE_AF : REAL;
  ENTDECKTE_GF : REAL;
  ENTDECKTE_FF : REAL;
  ENTDECKTE_IF : REAL;
  ENTDECKTE_HF : REAL;
  HINZUGEFUEGT_C_AFP : REAL;
  HINZUGEFUEGT_S_AFP : REAL;
  HINZUGEFUEGT_H_AFP : REAL;
  HINZUGEFUEGT_E_AFP : REAL;
  HINZUGEFUEGT_M_AFP : REAL;
  ZEIT_S : REAL;
  ZEIT_E : REAL;
  ZEIT_M : REAL;
  ZEIT_C : REAL;
  ZEIT_H : REAL;
  TATSAECHLICHE_ZEIT : REAL;
  ANALYSEFEHLER_VOR_KORR : REAL;
  GROBENTWURFSFEHLER_VOR_KORR : REAL;
  FEINENTWURFSFEHLER_VOR_KORR : REAL;
  IMPLEMENTIERUNGSFEHLER_VOR_KORR : REAL;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_BEARBEITEN

relation type SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_BEARBEITEN_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_PRODUZIEREN

relation type SOLL_PRODUZIEREN conforming  SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_PRODUZIEREN_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_KORRIGIEREN

relation type SOLL_KORRIGIEREN conforming  SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_KORRIGIEREN_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
  AUFGRUND : PRUEFBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_ALLES_KORRIGIEREN

relation type SOLL_ALLES_KORRIGIEREN conforming  SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
  AUFGRUND : PRUEFBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_INTEGRIEREN

relation type SOLL_INTEGRIEREN conforming  SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_INTEGRIEREN_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_MODULE_TESTEN

relation type SOLL_MODULE_TESTEN conforming  SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_MODULE_TESTEN_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_SUBSYSTEME_TESTEN

relation type SOLL_SUBSYSTEME_TESTEN conforming  SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_SUBSYSTEME_TESTEN_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_SYSTEM_TESTEN

relation type SOLL_SYSTEM_TESTEN conforming  SOLL_BEARBEITEN is 
roles
  Attribute_Role : BASE2_SOLL_SYSTEM_TESTEN_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_ABNEHMEN

relation type SOLL_ABNEHMEN is 
roles
  Attribute_Role : BASE2_SOLL_ABNEHMEN_Entity;
  WER : KUNDE;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: REVIEW_SOLL_STATTFINDEN

relation type REVIEW_SOLL_STATTFINDEN is 
roles
  Attribute_Role : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  PRUEFLING : DOKUMENT;
  GUTACHTER1 : ENTWICKLER;
  GUTACHTER2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: REVIEW_3_SOLL_STATTFINDEN

relation type REVIEW_3_SOLL_STATTFINDEN conforming  REVIEW_SOLL_STATTFINDEN is 
roles
  Attribute_Role : BASE2_REVIEW_3_SOLL_STATTFINDEN_Entity;
  PRUEFLING : DOKUMENT;
  GUTACHTER1 : ENTWICKLER;
  GUTACHTER2 : ENTWICKLER;
  GUTACHTER3 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: REVIEW_MIT_KUNDE_SOLL_STATTFINDEN

relation type REVIEW_MIT_KUNDE_SOLL_STATTFINDEN conforming  REVIEW_SOLL_STATTFINDEN is 
roles
  Attribute_Role : BASE2_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_Entity;
  PRUEFLING : DOKUMENT;
  GUTACHTER1 : ENTWICKLER;
  GUTACHTER2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_BEARBEITUNG_ABBRECHEN

relation type SOLL_BEARBEITUNG_ABBRECHEN is 
roles
  Attribute_Role : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  WER : ENTWICKLER;
  VON_WAS : DOKUMENT;
end type;
----------------------------------------------------------------------------
-- RELATION: SOLL_GESCHRIEBEN_WERDEN_IN

relation type SOLL_GESCHRIEBEN_WERDEN_IN is 
roles
  Attribute_Role : BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity;
  WAS : DOKUMENT;
  IN_WAS : NOTATION;
end type;
----------------------------------------------------------------------------
-- RELATION: BEARBEITET

relation type BEARBEITET is 
roles
  Attribute_Role : BASE2_BEARBEITET_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
end type;
----------------------------------------------------------------------------
-- RELATION: PRODUZIERT

relation type PRODUZIERT conforming  BEARBEITET is 
roles
  Attribute_Role : BASE2_PRODUZIERT_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
end type;
----------------------------------------------------------------------------
-- RELATION: INTEGRIERT

relation type INTEGRIERT conforming  BEARBEITET is 
roles
  Attribute_Role : BASE2_INTEGRIERT_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: KORRIGIERT

relation type KORRIGIERT conforming  BEARBEITET is 
roles
  Attribute_Role : BASE2_KORRIGIERT_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
  AUFGRUND : PRUEFBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: KORRIGIERT_ALLES

relation type KORRIGIERT_ALLES conforming  BEARBEITET is 
roles
  Attribute_Role : BASE2_KORRIGIERT_ALLES_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
  AUFGRUND : PRUEFBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: TESTET

relation type TESTET conforming  BEARBEITET is 
roles
  Attribute_Role : BASE2_TESTET_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: TESTET_MODULE

relation type TESTET_MODULE conforming  TESTET, BEARBEITET is 
roles
  Attribute_Role : BASE2_TESTET_MODULE_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: TESTET_SUBSYSTEME

relation type TESTET_SUBSYSTEME conforming  TESTET, BEARBEITET is 
roles
  Attribute_Role : BASE2_TESTET_SUBSYSTEME_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: TESTET_SYSTEM

relation type TESTET_SYSTEM conforming  TESTET, BEARBEITET is 
roles
  Attribute_Role : BASE2_TESTET_SYSTEM_Entity;
  WER : ENTWICKLER;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: REVIEW_FINDET_STATT

relation type REVIEW_FINDET_STATT is 
roles
  Attribute_Role : BASE2_REVIEW_FINDET_STATT_Entity;
  PRUEFLING : DOKUMENT;
  GUTACHTER1 : ENTWICKLER;
  GUTACHTER2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: REVIEW_3_FINDET_STATT

relation type REVIEW_3_FINDET_STATT conforming  REVIEW_FINDET_STATT is 
roles
  Attribute_Role : BASE2_REVIEW_3_FINDET_STATT_Entity;
  PRUEFLING : DOKUMENT;
  GUTACHTER1 : ENTWICKLER;
  GUTACHTER2 : ENTWICKLER;
  GUTACHTER3 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: REVIEW_MIT_KUNDE_FINDET_STATT

relation type REVIEW_MIT_KUNDE_FINDET_STATT conforming  REVIEW_FINDET_STATT is 
roles
  Attribute_Role : BASE2_REVIEW_MIT_KUNDE_FINDET_STATT_Entity;
  PRUEFLING : DOKUMENT;
  GUTACHTER1 : ENTWICKLER;
  GUTACHTER2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BEGUTACHTET

relation type BEGUTACHTET is 
roles
  Attribute_Role : BASE2_BEGUTACHTET_Entity;
  WER : ENTWICKLER;
  WAS : DOKUMENT;
end type;
----------------------------------------------------------------------------
-- RELATION: NIMMT_AB

relation type NIMMT_AB is 
roles
  Attribute_Role : BASE2_NIMMT_AB_Entity;
  WER : KUNDE;
  WAS : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: ARBEITET_SICH_EIN

relation type ARBEITET_SICH_EIN is 
roles
  Attribute_Role : BASE2_ARBEITET_SICH_EIN_Entity;
  WER : ENTWICKLER;
  IN_WAS : PROJEKT;
end type;
----------------------------------------------------------------------------
-- RELATION: GESCHRIEBEN_IN

relation type GESCHRIEBEN_IN is 
roles
  Attribute_Role : BASE2_GESCHRIEBEN_IN_Entity;
  WAS : DOKUMENT;
  IN_WAS : NOTATION;
end type;
----------------------------------------------------------------------------
-- RELATION: GEEIGNET_FUER

relation type GEEIGNET_FUER is 
roles
  Attribute_Role : BASE2_GEEIGNET_FUER_Entity;
  WAS : NOTATION;
  FUER : DOKUMENT;
end type;
----------------------------------------------------------------------------
-- RELATION: ERFASST_ZEIT

relation type ERFASST_ZEIT is 
roles
  Attribute_Role : BASE2_ERFASST_ZEIT_Entity;
  WER : ENTWICKLER;
  BOGEN : ZEITERFASSUNGSBOGEN;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_INITIALIZE_Relation

relation type BASE2_1_INITIALIZE_Relation is 
roles
  RL_DUMMY : KUNDE;
  RL_THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_GLOBALE_INITIALISIERUNG_Relation

relation type BASE2_2_GLOBALE_INITIALISIERUNG_Relation is 
roles
  RL_DUMMY : KUNDE;
  RL_THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  RL_DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  RL_THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_ABBRUCH_DUMMY_REGEL_Relation

relation type BASE2_1_ABBRUCH_DUMMY_REGEL_Relation is 
roles
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_EIN_DOKUMENT : DOKUMENT;
  RL_THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  RL_THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation

relation type BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation is 
roles
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_EIN_DOKUMENT : DOKUMENT;
  RL_THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  RL_THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  RL_THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation

relation type BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation is 
roles
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_EIN_DOKUMENT : DOKUMENT;
  RL_THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  RL_THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  RL_THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
  RL_THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity : BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation

relation type BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation is 
roles
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ANALYSENOTIZEN_BEARBEITEN_Relation

relation type Deactivating_1_ANALYSENOTIZEN_BEARBEITEN_Relation is 
roles
  RL_THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation

relation type BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation is 
roles
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_SPEZIFIKATION_BEARBEITEN_Relation

relation type Deactivating_1_SPEZIFIKATION_BEARBEITEN_Relation is 
roles
  RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation

relation type BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation is 
roles
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_SYSTEMENTWURF_BEARBEITEN_Relation

relation type Deactivating_1_SYSTEMENTWURF_BEARBEITEN_Relation is 
roles
  RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  RL_DER_ENTWURF : SYSTEMENTWURF;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation

relation type BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation is 
roles
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_MODULSPEZIFIKATION_BEARBEITEN_Relation

relation type Deactivating_1_MODULSPEZIFIKATION_BEARBEITEN_Relation is 
roles
  RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_CODE_BEARBEITEN_Relation

relation type BASE2_1_CODE_BEARBEITEN_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_CODE_BEARBEITEN_Relation

relation type Deactivating_1_CODE_BEARBEITEN_Relation is 
roles
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_DER_CODE : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_HANDBUCH_BEARBEITEN_Relation

relation type BASE2_1_HANDBUCH_BEARBEITEN_Relation is 
roles
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_HANDBUCH_BEARBEITEN_Relation

relation type Deactivating_1_HANDBUCH_BEARBEITEN_Relation is 
roles
  RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  RL_DAS_HANDBUCH : HANDBUCH;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation

relation type BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation

relation type Deactivating_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation is 
roles
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ALLE_DOKUMENTE_KORRIGIEREN_Relation

relation type Deactivating_2_ALLE_DOKUMENTE_KORRIGIEREN_Relation is 
roles
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_DER_ENTWURF : SYSTEMENTWURF;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_3_ALLE_DOKUMENTE_KORRIGIEREN_Relation

relation type Deactivating_3_ALLE_DOKUMENTE_KORRIGIEREN_Relation is 
roles
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_4_ALLE_DOKUMENTE_KORRIGIEREN_Relation

relation type Deactivating_4_ALLE_DOKUMENTE_KORRIGIEREN_Relation is 
roles
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_DER_CODE : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_5_ALLE_DOKUMENTE_KORRIGIEREN_Relation

relation type Deactivating_5_ALLE_DOKUMENTE_KORRIGIEREN_Relation is 
roles
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_DAS_HANDBUCH : HANDBUCH;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_ANALYSIERT_Relation

relation type BASE2_2_ENTWICKLER_ANALYSIERT_Relation is 
roles
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_ANALYSIERT_Relation

relation type Deactivating_1_ENTWICKLER_ANALYSIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_ANALYSIERT_Relation

relation type Deactivating_2_ENTWICKLER_ANALYSIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation

relation type BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation is 
roles
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_SPEZIFIZIERT_Relation

relation type Deactivating_1_ENTWICKLER_SPEZIFIZIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_SPEZIFIZIERT_Relation

relation type Deactivating_2_ENTWICKLER_SPEZIFIZIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_SPEZIFIKATION_REVIEWEN_Relation

relation type BASE2_2_SPEZIFIKATION_REVIEWEN_Relation is 
roles
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  RL_DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  RL_THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_SPEZIFIKATION_REVIEWEN_Relation

relation type Deactivating_1_SPEZIFIKATION_REVIEWEN_Relation is 
roles
  RL_THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_SPEZIFIKATION_REVIEWEN_Relation

relation type Deactivating_2_SPEZIFIKATION_REVIEWEN_Relation is 
roles
  RL_THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation is 
roles
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation

relation type Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_ENTWIRFT_Relation

relation type BASE2_2_ENTWICKLER_ENTWIRFT_Relation is 
roles
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_ENTWIRFT_Relation

relation type Deactivating_1_ENTWICKLER_ENTWIRFT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_ENTWURF : SYSTEMENTWURF;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_ENTWIRFT_Relation

relation type Deactivating_2_ENTWICKLER_ENTWIRFT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation

relation type BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation is 
roles
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  RL_DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  RL_THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_SYSTEMENTWURF_REVIEWEN_Relation

relation type Deactivating_1_SYSTEMENTWURF_REVIEWEN_Relation is 
roles
  RL_THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation is 
roles
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation

relation type Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation

relation type BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation is 
roles
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation

relation type Deactivating_1_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation

relation type Deactivating_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation

relation type BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation is 
roles
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  RL_DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  RL_THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_MODULSPEZIFIKATION_REVIEWEN_Relation

relation type Deactivating_1_MODULSPEZIFIKATION_REVIEWEN_Relation is 
roles
  RL_THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation is 
roles
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : MODULSPEZREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_BERICHT : MODULSPEZREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : MODULSPEZREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_BERICHT : MODULSPEZREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation

relation type Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_CODIERT_Relation

relation type BASE2_2_ENTWICKLER_CODIERT_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_CODIERT_Relation

relation type Deactivating_1_ENTWICKLER_CODIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_CODIERT_Relation

relation type Deactivating_2_ENTWICKLER_CODIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_CODE_REVIEWEN_Relation

relation type BASE2_2_CODE_REVIEWEN_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  RL_DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  RL_THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_CODE_REVIEWEN_Relation

relation type Deactivating_1_CODE_REVIEWEN_Relation is 
roles
  RL_THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_DER_CODE : CODE;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : CODEREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : CODEREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : CODEREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_BERICHT : CODEREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation

relation type Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation

relation type BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation is 
roles
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_SCHREIBT_HANDBUCH_Relation

relation type Deactivating_1_ENTWICKLER_SCHREIBT_HANDBUCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DAS_HANDBUCH : HANDBUCH;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation

relation type Deactivating_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_HANDBUCH_REVIEWEN_Relation

relation type BASE2_2_HANDBUCH_REVIEWEN_Relation is 
roles
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  RL_DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  RL_DER_KUNDENWUNSCH : KUNDENWUNSCH;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  RL_THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_HANDBUCH_REVIEWEN_Relation

relation type Deactivating_1_HANDBUCH_REVIEWEN_Relation is 
roles
  RL_THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_HANDBUCH_REVIEWEN_Relation

relation type Deactivating_2_HANDBUCH_REVIEWEN_Relation is 
roles
  RL_THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_GUTACHTER_1 : ENTWICKLER;
  RL_GUTACHTER_2 : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation is 
roles
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : HANDBUCHREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_DER_BERICHT : HANDBUCHREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : HANDBUCHREVIEWBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_REVIEWLOG : REVIEWLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_BERICHT : HANDBUCHREVIEWBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation

relation type Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_INTEGRIERT_Relation

relation type BASE2_2_ENTWICKLER_INTEGRIERT_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_INTEGRIERT_Relation

relation type Deactivating_1_ENTWICKLER_INTEGRIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_INTEGRIERT_Relation

relation type Deactivating_2_ENTWICKLER_INTEGRIERT_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation

relation type BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  RL_DER_TESTBERICHT : MODULTESTBERICHT;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation

relation type Deactivating_1_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation

relation type Deactivating_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : MODULTESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : MODULTESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : MODULTESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : MODULTESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation

relation type BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  RL_DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation

relation type Deactivating_1_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation

relation type Deactivating_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : INTEGRATIONSTESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : INTEGRATIONSTESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : INTEGRATIONSTESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : INTEGRATIONSTESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation

relation type BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  RL_DER_TESTBERICHT : SYSTEMTESTBERICHT;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation

relation type Deactivating_1_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation

relation type Deactivating_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : SYSTEMTESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : SYSTEMTESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : SYSTEMTESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : SYSTEMTESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation is 
roles
  RL_DER_CODE : CODE;
  RL_EINE_NOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DAS_LOGBUCH : PROJEKTLOGBUCH;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : ABNAHMETESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : ABNAHMETESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
----------------------------------------------------------------------------
-- RELATION: BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation

relation type BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation is 
roles
  RL_DIE_NOTIZEN : ANALYSENOTIZEN;
  RL_DIE_SPEZIFIKATION : SPEZIFIKATION;
  RL_DER_ENTWURF : SYSTEMENTWURF;
  RL_DIE_MODULSPEZ : MODULSPEZIFIKATION;
  RL_DER_CODE : CODE;
  RL_DAS_HANDBUCH : HANDBUCH;
  RL_EINE_SPEZNOTATION : NOTATION;
  RL_EINE_ENTWURFSNOTATION : NOTATION;
  RL_EINE_MODULSPEZNOTATION : NOTATION;
  RL_EINE_CODENOTATION : NOTATION;
  RL_EINE_HANDBUCHNOTATION : NOTATION;
  RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  RL_DER_ZUSTAND : PROJEKTZUSTAND;
  RL_DEL_TA : DELTAT;
  RL_K : KAUSALITAETSFLUSS;
  RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_BERICHT : ABNAHMETESTBERICHT;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_DER_TESTLOG : TESTLOGBUCH;
  RL_SEIN_LOG : ZEITERFASSUNGSBOGEN;
  RL_THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation

relation type Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
  RL_DER_CODE : CODE;
  RL_DER_BERICHT : ABNAHMETESTBERICHT;
end type;
----------------------------------------------------------------------------
-- RELATION: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation

relation type Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation is 
roles
  RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  RL_EIN_ENTWICKLER : ENTWICKLER;
end type;
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_MIT_KUNDE_ZU_SPRECHEN

message BEGONNEN_MIT_KUNDE_ZU_SPRECHEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_ZU_SPEZIFIZIEREN

message BEGONNEN_ZU_SPEZIFIZIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_SYSTEM_ZU_ENTWERFEN

message BEGONNEN_SYSTEM_ZU_ENTWERFEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_MODULE_ZU_SPEZIFIZIEREN

message BEGONNEN_MODULE_ZU_SPEZIFIZIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_ZU_CODIEREN

message BEGONNEN_ZU_CODIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_HANDBUCH_ZU_SCHREIBEN

message BEGONNEN_HANDBUCH_ZU_SCHREIBEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_ZU_INTEGRIEREN

message BEGONNEN_ZU_INTEGRIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_MIT_MODULTEST

message BEGONNEN_MIT_MODULTEST( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_MIT_INTEGRATIONSTEST

message BEGONNEN_MIT_INTEGRATIONSTEST( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_MIT_SYSTEMTEST

message BEGONNEN_MIT_SYSTEMTEST( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_MIT_ABNAHMETEST

message BEGONNEN_MIT_ABNAHMETEST;
-----------------------------------------------------------------------------
-- NACHRICHT: LETZTER_ABNAHMETEST_VOM_KUNDEN

message LETZTER_ABNAHMETEST_VOM_KUNDEN;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_FUEHRT_ABNAHMETEST_GERADE_DURCH

message KUNDE_FUEHRT_ABNAHMETEST_GERADE_DURCH;
-----------------------------------------------------------------------------
-- NACHRICHT: ABNAHMETEST_BEFUNDE_ERST_KORRIGIEREN

message ABNAHMETEST_BEFUNDE_ERST_KORRIGIEREN;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_FUEHRT_KEINEN_WEITEREN_ABNAHMETEST_DURCH

message KUNDE_FUEHRT_KEINEN_WEITEREN_ABNAHMETEST_DURCH;
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN

message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN

message BEGONNEN_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_SPEZIFIKATION_ZU_KORRIGIEREN

message BEGONNEN_SPEZIFIKATION_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_SYSTEMENTWURF_ZU_KORRIGIEREN

message BEGONNEN_SYSTEMENTWURF_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_MODULSPEZ_ZU_KORRIGIEREN

message BEGONNEN_MODULSPEZ_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_CODE_ZU_KORRIGIEREN

message BEGONNEN_CODE_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_HANDBUCH_ZU_KORRIGIEREN

message BEGONNEN_HANDBUCH_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: BEGONNEN_ALLES_ZU_KORRIGIEREN

message BEGONNEN_ALLES_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: REVIEWSITZUNG_FINDET_STATT

message REVIEWSITZUNG_FINDET_STATT( PRUEFLING : DOKUMENT, ANZAHL_SEITEN : INTEGER, ENTDECKTE_FEHLER : INTEGER, ENTDECKTE_AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: CODEREVIEWSITZUNG_FINDET_STATT

message CODEREVIEWSITZUNG_FINDET_STATT( PRUEFLING : DOKUMENT, ANZAHL_ZEILEN : INTEGER, ENTDECKTE_FEHLER : INTEGER, ENTDECKTE_AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GUTACHTER_BEREITET_SICH_NICHT_VOR

message GUTACHTER_BEREITET_SICH_NICHT_VOR( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_MIT_KUNDE_ZU_SPRECHEN

message AUFGEHOERT_MIT_KUNDE_ZU_SPRECHEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_ZU_SPEZIFIZIEREN

message AUFGEHOERT_ZU_SPEZIFIZIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_SYSTEM_ZU_ENTWERFEN

message AUFGEHOERT_SYSTEM_ZU_ENTWERFEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_MODULE_ZU_SPEZIFIZIEREN

message AUFGEHOERT_MODULE_ZU_SPEZIFIZIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_ZU_CODIEREN

message AUFGEHOERT_ZU_CODIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_HANDBUCH_ZU_SCHREIBEN

message AUFGEHOERT_HANDBUCH_ZU_SCHREIBEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_ZU_INTEGRIEREN

message AUFGEHOERT_ZU_INTEGRIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_MIT_MODULTEST

message AUFGEHOERT_MIT_MODULTEST( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_MIT_INTEGRATIONSTEST

message AUFGEHOERT_MIT_INTEGRATIONSTEST( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_MIT_SYSTEMTEST

message AUFGEHOERT_MIT_SYSTEMTEST( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_AKZEPTIERT

message KUNDE_AKZEPTIERT;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_AKZEPTIERT_NICHT_TERMIN

message KUNDE_AKZEPTIERT_NICHT_TERMIN;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_AKZEPTIERT_NICHT_KOSTEN

message KUNDE_AKZEPTIERT_NICHT_KOSTEN;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_AKZEPTIERT_NICHT_VOLL_CODE

message KUNDE_AKZEPTIERT_NICHT_VOLL_CODE;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_AKZEPTIERT_NICHT_KORR_CODE

message KUNDE_AKZEPTIERT_NICHT_KORR_CODE;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_AKZEPTIERT_NICHT_VOLL_HB

message KUNDE_AKZEPTIERT_NICHT_VOLL_HB;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_AKZEPTIERT_NICHT_KORR_HB

message KUNDE_AKZEPTIERT_NICHT_KORR_HB;
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_DOKUMENT_ZU_BEGUTACHTEN

message AUFGEHOERT_DOKUMENT_ZU_BEGUTACHTEN( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN

message AUFGEHOERT_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_SPEZIFIKATION_ZU_KORRIGIEREN

message AUFGEHOERT_SPEZIFIKATION_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_SYSTEMENTWURF_ZU_KORRIGIEREN

message AUFGEHOERT_SYSTEMENTWURF_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_MODULSPEZ_ZU_KORRIGIEREN

message AUFGEHOERT_MODULSPEZ_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_CODE_ZU_KORRIGIEREN

message AUFGEHOERT_CODE_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_HANDBUCH_ZU_KORRIGIEREN

message AUFGEHOERT_HANDBUCH_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGEHOERT_ALLES_ZU_KORRIGIEREN

message AUFGEHOERT_ALLES_ZU_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: NEUE_AUFGABE_AKZEPTIERT

message NEUE_AUFGABE_AKZEPTIERT( WER : ENTWICKLER, ALTES_DOKUMENT : DOKUMENT, NEUES_DOKUMENT : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: NEUE_AUFGABE_GLEICHES_DOK_AKZEPTIERT

message NEUE_AUFGABE_GLEICHES_DOK_AKZEPTIERT( WER : ENTWICKLER, EIN_DOKUMENT : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFGABENSTELLUNG_BESCHREIBEN

message AUFGABENSTELLUNG_BESCHREIBEN( UMFANG_AFP : REAL, LIEFERTERMIN : DATE, BUDGET : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: MINDESTENS_PROZENT_AFP

message MINDESTENS_PROZENT_AFP( IN_WAS : DOKUMENT, VOLLSTAENDIGKEIT : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: MAX_FEHLER_PRO_SEITE

message MAX_FEHLER_PRO_SEITE( IN_WAS : DOKUMENT, KORREKTHEIT : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: MAX_FEHLER_IM_CODE_PRO_KLOC

message MAX_FEHLER_IM_CODE_PRO_KLOC( KORREKTHEIT : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: DATEN_UEBER_PROJEKT

message DATEN_UEBER_PROJEKT( PROJEKTDAUER : INTEGER, GESAMTAUFWAND : REAL, KOSTEN : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFWAND_FUER_PHASEN

message AUFWAND_FUER_PHASEN( MM_SPEZIFIKATIONSPHASE : REAL, MM_ENTWURFSPHASE : REAL, MM_CODIERUNGSPHASE : REAL, MM_TESTPHASE : REAL, MM_HANDBUCHERSTELLUNG : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ENDZUSTAND_VON_DOKUMENT

message ENDZUSTAND_VON_DOKUMENT( WELCHES : DOKUMENT, SEITEN : INTEGER, AFP : REAL, PROZENT_AFP : REAL, FEHLER : INTEGER, FEHLER_PRO_SEITE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ENDZUSTAND_DES_CODES

message ENDZUSTAND_DES_CODES( LOC : INTEGER, AFP : REAL, PROZENT_AFP : REAL, ANALYSEFEHLER : INTEGER, GROBENTWURFSFEHLER : INTEGER, FEINENTWURFSFEHLER : INTEGER, IMPLEMENTIERUNGSFEHLER : INTEGER, FEHLER_PRO_KLOC : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFWAND_FUER_PRUEFUNG_U_KORREKTUR

message AUFWAND_FUER_PRUEFUNG_U_KORREKTUR( REVIEWAUFWAND : REAL, TESTAUFWAND : REAL, REVIEWKORREKTURAUFWAND : REAL, TESTKORREKTURAUFWAND : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDE_BERICHTET_NACH_ABNAHMETEST

message KUNDE_BERICHTET_NACH_ABNAHMETEST( FEHLER : INTEGER, VERLUSTE : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTUR_NACH_ABNAHMETEST_BEENDET

message KORREKTUR_NACH_ABNAHMETEST_BEENDET;
-----------------------------------------------------------------------------
-- NACHRICHT: BEWERTUNG_NICHT_MOEGLICH

message BEWERTUNG_NICHT_MOEGLICH;
-----------------------------------------------------------------------------
-- NACHRICHT: PROJEKTABBRUCH_BEI_KOSTENUEBERLAUF

message PROJEKTABBRUCH_BEI_KOSTENUEBERLAUF;
-----------------------------------------------------------------------------
-- NACHRICHT: PROJEKTABBRUCH_BEI_TERMINUEBERLAUF

message PROJEKTABBRUCH_BEI_TERMINUEBERLAUF;
-----------------------------------------------------------------------------
-- NACHRICHT: SYSTEM_NOCH_NICHT_AUSLIEFERBAR

message SYSTEM_NOCH_NICHT_AUSLIEFERBAR;
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDENREAKTION_AUF_PROJEKTABBRUCH

message KUNDENREAKTION_AUF_PROJEKTABBRUCH( PROJEKTBEGINN : DATE, HEUTE : DATE, SOLL_KOSTEN : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VORGESETZTENREAKTION_AUF_PROJEKTABBRUCH

message VORGESETZTENREAKTION_AUF_PROJEKTABBRUCH( KOSTEN : REAL, WER : KUNDE );
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDENREAKTION

message KUNDENREAKTION( WER : KUNDE );
-----------------------------------------------------------------------------
-- NACHRICHT: TERMINEINHALTUNG

message TERMINEINHALTUNG( SOLL_TERMIN : DATE, PROJEKTENDE : DATE, TAGE : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: TERMINEINHALTUNG_GUT

message TERMINEINHALTUNG_GUT( TAGE : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: TERMINEINHALTUNG_MITTEL

message TERMINEINHALTUNG_MITTEL( TAGE : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: TERMINEINHALTUNG_SCHLECHT

message TERMINEINHALTUNG_SCHLECHT( TAGE : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: KOSTENEINHALTUNG

message KOSTENEINHALTUNG( SOLL_KOSTEN : REAL, KOSTEN : REAL, DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KOSTENEINHALTUNG_GUT

message KOSTENEINHALTUNG_GUT( DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KOSTENEINHALTUNG_MITTEL

message KOSTENEINHALTUNG_MITTEL( DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KOSTENEINHALTUNG_SCHLECHT

message KOSTENEINHALTUNG_SCHLECHT( DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_CODE

message VOLLSTAENDIGKEIT_CODE( LOC : INTEGER, AFP_WUNSCH : REAL, AFP_CODE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_CODE_GUT

message VOLLSTAENDIGKEIT_CODE_GUT( VOLL_CODE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_CODE_MITTEL

message VOLLSTAENDIGKEIT_CODE_MITTEL( VOLL_CODE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_CODE_SCHLECHT

message VOLLSTAENDIGKEIT_CODE_SCHLECHT( VOLL_CODE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_CODE

message KORREKTHEIT_CODE( SOLL_KORR_CODE : REAL, KORR_CODE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_CODE_GUT

message KORREKTHEIT_CODE_GUT( KORR_CODE : REAL, DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_CODE_MITTEL

message KORREKTHEIT_CODE_MITTEL( KORR_CODE : REAL, DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_CODE_SCHLECHT

message KORREKTHEIT_CODE_SCHLECHT( KORR_CODE : REAL, DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_HANDBUCH

message VOLLSTAENDIGKEIT_HANDBUCH( SEITEN : INTEGER, AFP_WUNSCH : REAL, AFP_HB : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_HANDBUCH_GUT

message VOLLSTAENDIGKEIT_HANDBUCH_GUT( VOLL_HB : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_HANDBUCH_MITTEL

message VOLLSTAENDIGKEIT_HANDBUCH_MITTEL( VOLL_HB : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: VOLLSTAENDIGKEIT_HANDBUCH_SCHLECHT

message VOLLSTAENDIGKEIT_HANDBUCH_SCHLECHT( VOLL_HB : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_HANDBUCH

message KORREKTHEIT_HANDBUCH( SOLL_KORR_HB : REAL, KORR_HB : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_HANDBUCH_GUT

message KORREKTHEIT_HANDBUCH_GUT( KORR_HB : REAL, DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_HANDBUCH_MITTEL

message KORREKTHEIT_HANDBUCH_MITTEL( KORR_HB : REAL, DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KORREKTHEIT_HANDBUCH_SCHLECHT

message KORREKTHEIT_HANDBUCH_SCHLECHT( KORR_HB : REAL, DIFFERENZ : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KUNDEN_SCORE

message KUNDEN_SCORE( SCORE : INTEGER, MAX_SCORE : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: SIMULATION_BEENDET

message SIMULATION_BEENDET;
-----------------------------------------------------------------------------
-- NACHRICHT: VERBRAUCHTE_RESSOURCEN_AUSGEBEN

message VERBRAUCHTE_RESSOURCEN_AUSGEBEN( DAUER : INTEGER, AUFWAND : REAL, KOSTEN : REAL, STERMIN : DATE, SKOSTEN : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_SEITEN_VON_DOKUMENT

message ANZAHL_SEITEN_VON_DOKUMENT( WELCHES : DOKUMENT, SEITEN : INTEGER, UNTEN : INTEGER, OBEN : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: NULL_SEITEN_VON_DOKUMENT

message NULL_SEITEN_VON_DOKUMENT( WELCHES : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_ZEILEN_DES_CODES

message ANZAHL_ZEILEN_DES_CODES( ZEILEN : INTEGER, MODULE : INTEGER, UNTEN : INTEGER, OBEN : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: NULL_ZEILEN_CODE

message NULL_ZEILEN_CODE;
-----------------------------------------------------------------------------
-- NACHRICHT: BEFUNDE_IN_PRUEFBERICHT

message BEFUNDE_IN_PRUEFBERICHT( WELCHER : PRUEFBERICHT, FEHLER : INTEGER, VERLUSTE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KEINE_PRUEFUNG_STATTGEFUNDEN

message KEINE_PRUEFUNG_STATTGEFUNDEN;
-----------------------------------------------------------------------------
-- NACHRICHT: FEHLER_UND_VERLUSTE_IN_PRUEFBERICHT_OHNE_RESTFEHLER

message FEHLER_UND_VERLUSTE_IN_PRUEFBERICHT_OHNE_RESTFEHLER( WELCHER : PRUEFBERICHT, FEHLER : INTEGER, VERLUSTE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: FEHLER_UND_VERLUSTE_IN_PRUEFBERICHT_MIT_RESTFEHLER

message FEHLER_UND_VERLUSTE_IN_PRUEFBERICHT_MIT_RESTFEHLER( WELCHER : PRUEFBERICHT, FEHLER : INTEGER, VERLUSTE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: WIEDER_VERFUEGBAREN_ENTWICKLER_AUSGEBEN

message WIEDER_VERFUEGBAREN_ENTWICKLER_AUSGEBEN( WER : ENTWICKLER, AB_WANN : DATE );
-----------------------------------------------------------------------------
-- NACHRICHT: VERFUEGBAREN_ENTWICKLER_AUSGEBEN

message VERFUEGBAREN_ENTWICKLER_AUSGEBEN( WER : ENTWICKLER, AB_WANN : DATE );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUGETEILTEN_ENTWICKLER_AUSGEBEN

message ZUGETEILTEN_ENTWICKLER_AUSGEBEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: INFORMATIONEN_ZU_ENTWICKLER_AUSGEBEN

message INFORMATIONEN_ZU_ENTWICKLER_AUSGEBEN( WER : ENTWICKLER, KOSTEN : REAL, HOHE_E : STRING, MITTLERE_E : STRING, GERINGE_E : STRING );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_MACHT_NICHTS

message ENTWICKLER_MACHT_NICHTS( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WIRD_BEGUTACHTEN

message ENTWICKLER_WIRD_BEGUTACHTEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WIRD_PRODUZIEREN

message ENTWICKLER_WIRD_PRODUZIEREN( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WIRD_INTEGR

message ENTWICKLER_WIRD_INTEGR( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WIRD_TESTEN

message ENTWICKLER_WIRD_TESTEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WIRD_KORRIGIEREN

message ENTWICKLER_WIRD_KORRIGIEREN( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WIRD_ALLES_KORRIGIEREN

message ENTWICKLER_WIRD_ALLES_KORRIGIEREN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_BEGUTACHTET

message ENTWICKLER_BEGUTACHTET( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_PRODUZIERT

message ENTWICKLER_PRODUZIERT( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_INTEGR

message ENTWICKLER_INTEGR( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_TESTET

message ENTWICKLER_TESTET( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_KORRIGIERT

message ENTWICKLER_KORRIGIERT( WER : ENTWICKLER, WAS : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_KORRIGIERT_ALLES

message ENTWICKLER_KORRIGIERT_ALLES( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_HAT_ERSTELLT

message ENTWICKLER_HAT_ERSTELLT( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_HAT_KORRIGIERT

message ENTWICKLER_HAT_KORRIGIERT( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_HAT_BEGUTACHTET

message ENTWICKLER_HAT_BEGUTACHTET( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_HAT_ERSTELLUNGSAUFWAND

message ENTWICKLER_HAT_ERSTELLUNGSAUFWAND( WAS : DOKUMENT, WIELANG : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_HAT_KORREKTURAUFWAND

message ENTWICKLER_HAT_KORREKTURAUFWAND( WAS : DOKUMENT, WIELANG : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_HAT_REVIEWAUFWAND

message ENTWICKLER_HAT_REVIEWAUFWAND( WAS : DOKUMENT, WIELANG : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_HAT_GETESTET

message ENTWICKLER_HAT_GETESTET( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_TESTETE_MODULE

message ENTWICKLER_TESTETE_MODULE( WIELANG : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_TESTETE_INTEGRATION

message ENTWICKLER_TESTETE_INTEGRATION( WIELANG : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_TESTETE_SYSTEM

message ENTWICKLER_TESTETE_SYSTEM( WIELANG : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WURDE_EINGESTELLT

message ENTWICKLER_WURDE_EINGESTELLT( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: ENTWICKLER_WURDE_ENTLASSEN

message ENTWICKLER_WURDE_ENTLASSEN( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: KEINE_NOTATION_VORGEGEBEN

message KEINE_NOTATION_VORGEGEBEN( FUER : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: NOTATION_WURDE_VORGEGEBEN

message NOTATION_WURDE_VORGEGEBEN( WELCHE : NOTATION, FUER : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: NOTATION_IST_UNGEEIGNET

message NOTATION_IST_UNGEEIGNET( WELCHE : NOTATION, FUER : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: NOTATION_DARF_NICHT_MEHR_GEAENDERT_WERDEN

message NOTATION_DARF_NICHT_MEHR_GEAENDERT_WERDEN( FUER : DOKUMENT );
-----------------------------------------------------------------------------
-- NACHRICHT: NICHT_EINGESTELLT

message NICHT_EINGESTELLT( WER : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: FEHLERMELDUNG_ILLEGALE_AUTOR_ID

message FEHLERMELDUNG_ILLEGALE_AUTOR_ID( E : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: FEHLERMELDUNG_GLEICHE_AUTOR_IDS

message FEHLERMELDUNG_GLEICHE_AUTOR_IDS( E1 : ENTWICKLER, E2 : ENTWICKLER );
-----------------------------------------------------------------------------
-- NACHRICHT: PRINT_STRING

message PRINT_STRING( WAS : STRING );
-----------------------------------------------------------------------------
-- NACHRICHT: PRINT_STRING_INTEGER

message PRINT_STRING_INTEGER( WAS_S : STRING, WAS_I : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: PRINT_STRING_REAL

message PRINT_STRING_REAL( WAS_S : STRING, WAS_R : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: PRINT_INTEGER

message PRINT_INTEGER( WAS : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: PRINT_REAL

message PRINT_REAL( WAS : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: PRINT_DATE

message PRINT_DATE( WAS : DATE );
-----------------------------------------------------------------------------
-- NACHRICHT: PRINT_AKA

message PRINT_AKA( VON_WEM : PERSON );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_NOTIZEN

message ZUSTAND_VON_NOTIZEN( AFP : REAL, ANALYSEFEHLER : INTEGER, ANZAHL_FEHLER_GES : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_SPEZ_DOK

message ZUSTAND_VON_SPEZ_DOK( AFP : REAL, ANALYSEFEHLER : INTEGER, ANZAHL_FEHLER_GES : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_ENTW_DOK

message ZUSTAND_VON_ENTW_DOK( AFP : REAL, ANALYSEFEHLER : INTEGER, GROBENTWURFSFEHLER : INTEGER, ANZAHL_FEHLER_GES : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_MSPEZ_DOK

message ZUSTAND_VON_MSPEZ_DOK( AFP : REAL, ANALYSEFEHLER : INTEGER, GROBENTWURFSFEHLER : INTEGER, FEINENTWURFSFEHLER : INTEGER, ANZAHL_FEHLER_GES : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_CODE_DOK

message ZUSTAND_VON_CODE_DOK( AFP : REAL, ANALYSEFEHLER : INTEGER, GROBENTWURFSFEHLER : INTEGER, FEINENTWURFSFEHLER : INTEGER, IMPLEMENTIERUNGSFEHLER : INTEGER, ANZAHL_FEHLER_GES : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_HB_DOK

message ZUSTAND_VON_HB_DOK( AFP : REAL, ANALYSEFEHLER : INTEGER, HANDBUCHFEHLER : INTEGER, ANZAHL_FEHLER_GES : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_ANALYSE

message ZUSTAND_VON_ANALYSE( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_SPEZIFIKATION

message ZUSTAND_VON_SPEZIFIKATION( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_ENTWURF

message ZUSTAND_VON_ENTWURF( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_MODSPEZ

message ZUSTAND_VON_MODSPEZ( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_CODE

message ZUSTAND_VON_CODE( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_HANDBUCH

message ZUSTAND_VON_HANDBUCH( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_INTEGRATION

message ZUSTAND_VON_INTEGRATION( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_MTEST

message ZUSTAND_VON_MTEST( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_ITEST

message ZUSTAND_VON_ITEST( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_STEST

message ZUSTAND_VON_STEST( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_ATEST

message ZUSTAND_VON_ATEST( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_MTEST_K

message ZUSTAND_VON_MTEST_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_ITEST_K

message ZUSTAND_VON_ITEST_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_STEST_K

message ZUSTAND_VON_STEST_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_ATEST_K

message ZUSTAND_VON_ATEST_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_SREVIEW

message ZUSTAND_VON_SREVIEW( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_EREVIEW

message ZUSTAND_VON_EREVIEW( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_MREVIEW

message ZUSTAND_VON_MREVIEW( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_CREVIEW

message ZUSTAND_VON_CREVIEW( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_HREVIEW

message ZUSTAND_VON_HREVIEW( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_SREVIEW_K

message ZUSTAND_VON_SREVIEW_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_EREVIEW_K

message ZUSTAND_VON_EREVIEW_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_MREVIEW_K

message ZUSTAND_VON_MREVIEW_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_CREVIEW_K

message ZUSTAND_VON_CREVIEW_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_VON_HREVIEW_K

message ZUSTAND_VON_HREVIEW_K( AUFWAND : REAL, BEGINN_DATUM : DATE, END_DATUM : DATE, DAUER : INTEGER );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_AFP_KUNDENWUNSCH

message ANZAHL_AFP_KUNDENWUNSCH( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_AFP_SPEZIFIKATION

message ANZAHL_AFP_SPEZIFIKATION( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_AFP_ANALYSE

message ANZAHL_AFP_ANALYSE( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_AFP_ENTWURF

message ANZAHL_AFP_ENTWURF( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_AFP_MODSPEZ

message ANZAHL_AFP_MODSPEZ( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_AFP_CODE

message ANZAHL_AFP_CODE( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ANZAHL_AFP_HANDBUCH

message ANZAHL_AFP_HANDBUCH( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_MTEST

message GEPRUEFTE_AFP_MTEST( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_ITEST

message GEPRUEFTE_AFP_ITEST( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_STEST

message GEPRUEFTE_AFP_STEST( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_ATEST

message GEPRUEFTE_AFP_ATEST( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_SREVIEW

message GEPRUEFTE_AFP_SREVIEW( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_EREVIEW

message GEPRUEFTE_AFP_EREVIEW( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_MREVIEW

message GEPRUEFTE_AFP_MREVIEW( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_CREVIEW

message GEPRUEFTE_AFP_CREVIEW( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: GEPRUEFTE_AFP_HREVIEW

message GEPRUEFTE_AFP_HREVIEW( AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KONSISTENZ_SPEZ_DOK

message KONSISTENZ_SPEZ_DOK( KONS_AF : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KONSISTENZ_ENTW_DOK

message KONSISTENZ_ENTW_DOK( KONS_AF : REAL, KONS_GF : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KONSISTENZ_MSPEZ_DOK

message KONSISTENZ_MSPEZ_DOK( KONS_AF : REAL, KONS_GF : REAL, KONS_FF : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: KONSISTENZ_HB_DOK

message KONSISTENZ_HB_DOK( KONS_AF : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: AUFWANDSDATEN_AUSGEBEN

message AUFWANDSDATEN_AUSGEBEN( GESAMTAUFWAND : REAL, KOSTEN_MM : REAL, AUFWVERTEILUNG_PHASEN1 : REAL, AUFWVERTEILUNG_PHASEN2 : REAL, AUFWVERTEILUNG_PHASEN3 : REAL, AUFWVERTEILUNG_PHASEN4 : REAL, AUFWVERTEILUNG_PHASEN5 : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: PERFORMANZ_AUSGEBEN

message PERFORMANZ_AUSGEBEN( PROZ_KOSTEN_ZV : REAL, PROZ_DAUER_ZV : REAL, MITTELWERT_VOLLST_ZV : REAL, MITTELWERT_VOLLST : REAL, MITTELWERT_KORREKT_ZV : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_FEHLER_PRO_AFP_NOTIZEN

message ZUSTAND_FEHLER_PRO_AFP_NOTIZEN( AF_AFP : REAL, FEHLER_PRO_AFP : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_FEHLER_PRO_AFP_SPEZ_DOK

message ZUSTAND_FEHLER_PRO_AFP_SPEZ_DOK( AF_AFP : REAL, FEHLER_PRO_AFP : REAL, FEHLER_SEITE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_FEHLER_PRO_AFP_ENTW_DOK

message ZUSTAND_FEHLER_PRO_AFP_ENTW_DOK( AF_AFP : REAL, GF_AFP : REAL, FEHLER_PRO_AFP : REAL, FEHLER_SEITE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_FEHLER_PRO_AFP_MSPEZ_DOK

message ZUSTAND_FEHLER_PRO_AFP_MSPEZ_DOK( AF_AFP : REAL, GF_AFP : REAL, FF_AFP : REAL, FEHLER_PRO_AFP : REAL, FEHLER_SEITE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_FEHLER_PRO_AFP_CODE_DOK

message ZUSTAND_FEHLER_PRO_AFP_CODE_DOK( AF_AFP : REAL, GF_AFP : REAL, FF_AFP : REAL, IF_AFP : REAL, FEHLER_PRO_AFP : REAL, FEHLER_KLOC : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_FEHLER_PRO_AFP_HB_DOK

message ZUSTAND_FEHLER_PRO_AFP_HB_DOK( AF_AFP : REAL, HF_AFP : REAL, FEHLER_PRO_AFP : REAL, FEHLER_SEITE : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: EINHALTUNG_ZV_DOK

message EINHALTUNG_ZV_DOK( WELCHES : DOKUMENT, PROZ_AFP_100 : REAL, PROZ_AFP_ZV : REAL, PROZ_FEHLER_PRO_SEITE_ZV : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: EINHALTUNG_ZV_CODE

message EINHALTUNG_ZV_CODE( PROZ_AFP_100 : REAL, PROZ_AFP_ZV : REAL, PROZ_FEHLER_PRO_KLOC_ZV : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_PRUEFUNGEN

message ZUSTAND_PRUEFUNGEN( WELCHES : PRUEFBERICHT, ANZ_ANF : INTEGER, ANZ_PRF : INTEGER, ANZ_FEHLER_PRO_PRF1 : REAL, ANZ_FEHLER_PRO_PRF2 : REAL, ANZ_FEHLER_PRO_PRF3 : REAL, ANZ_FEHLER_PRO_PRF4 : REAL, ANZ_FEHLER_PRO_PRF5 : REAL, ANZ_FEHLER_PRO_PRF6 : REAL, ANZ_FEHLER_PRO_PRF7 : REAL, ANZ_FEHLER_PRO_PRF8 : REAL, ANZ_FEHLER_PRO_PRF9 : REAL, ANZ_FEHLER_PRO_PRF10 : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: ZUSTAND_KORREKTUR

message ZUSTAND_KORREKTUR( WELCHES : PRUEFBERICHT, IST_LEER : BOOLEAN, ANZ_NICHT_KORR_ANF : INTEGER, ANZ_KORR_FEHLER_PRO_PRF1 : REAL, ANZ_KORR_FEHLER_PRO_PRF2 : REAL, ANZ_KORR_FEHLER_PRO_PRF3 : REAL, ANZ_KORR_FEHLER_PRO_PRF4 : REAL, ANZ_KORR_FEHLER_PRO_PRF5 : REAL, ANZ_KORR_FEHLER_PRO_PRF6 : REAL, ANZ_KORR_FEHLER_PRO_PRF7 : REAL, ANZ_KORR_FEHLER_PRO_PRF8 : REAL, ANZ_KORR_FEHLER_PRO_PRF9 : REAL, ANZ_KORR_FEHLER_PRO_PRF10 : REAL );
-----------------------------------------------------------------------------
-- NACHRICHT: DOPPELTE_ANFORDERUNGEN_VORHANDEN

message DOPPELTE_ANFORDERUNGEN_VORHANDEN( WORIN : DOKUMENT, WELCHE : INTEGER );
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: minutes_to_days
function minutes_to_days (minutes : integer) return integer is 
begin
  return minutes div 1440;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: minutes_to_weeks
function minutes_to_weeks (minutes : integer) return integer is 
begin
  return minutes div 10080;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: days_to_minutes
function days_to_minutes (days : integer) return integer is 
begin
  return days * 1440;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: weeks_to_minutes
function weeks_to_minutes (weeks : integer) return integer is 
begin
  return weeks * 10080;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: odd 
function odd (Value : integer) return boolean is 
begin
  return ((value mod 2) /= 0);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: xor 
function xor (a : boolean,b : boolean) return boolean is 
begin
  return (not (a and b)) and (a or b);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_put_Set_Record_SI_Type
function f_put_Set_Record_SI_Type(L : in out Set_Record_SI_Type , Elem : Record_SI_Type ) return Set_Record_SI_Type is
begin
  if Get_Index(L,Elem) = 0 then
    insert_Last(L,Elem);
  end if;
  return L;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_nth_Set_Record_SI_Type
function f_get_nth_Set_Record_SI_Type(L : in out Set_Record_SI_Type, Pos : integer ) return Record_SI_Type is
declare
  C:  Record_SI_Type:= nth_elem(L,Pos);
begin
  remove_nth(L,Pos);
  return C;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_Set_Record_SI_Type
function f_get_Set_Record_SI_Type(L : in out Set_Record_SI_Type ) return Record_SI_Type is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return f_get_nth_Set_Record_SI_Type(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_getselected_Set_Record_SI_Type
function f_getselected_Set_Record_SI_Type(L : in out Set_Record_SI_Type , Elem : Record_SI_Type ) return Record_SI_Type is
begin
  return f_get_nth_Set_Record_SI_Type(L,Get_Index(L,Elem)); 
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_lookup_Set_Record_SI_Type
function f_lookup_Set_Record_SI_Type(L : in out Set_Record_SI_Type ) return Record_SI_Type is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return nth_elem(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_diff_Set_Record_SI_Type
function f_diff_Set_Record_SI_Type(L : in Set_Record_SI_Type , K : in Set_Record_SI_Type ) return Set_Record_SI_Type is
declare                                       
  is_in_L: integer := 0;                      
  K_Local: Set_Record_SI_Type := K; 
  L_Local: Set_Record_SI_Type := L; 
begin                                         
  while length(K_Local) > 0 loop                    
    is_in_L := Get_Index(L_Local,nth_elem(K_Local,1));           
    remove_first(K_Local);                          
    if is_in_L > 0 then                       
      remove_nth(L_Local,is_in_l);                  
    end if;                                   
  end loop;                                   
  return L_Local;                                   
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_union_Set_Record_SI_Type
function f_union_Set_Record_SI_Type(L : in Set_Record_SI_Type , K : in Set_Record_SI_Type ) return Set_Record_SI_Type is
declare                                       
  Elem : Record_SI_Type := Record_SI_Type'(" ",0); -- Dummy-Zuweisung         
  K_Local: Set_Record_SI_Type := K; 
  L_Local: Set_Record_SI_Type := L; 
begin                                         
  while length(K_Local) > 0 loop                    
    Elem:=nth_elem(K_Local,1);                      
    remove_first(K_Local);                          
    L_Local:=f_Put_Set_Record_SI_Type(L_Local,Elem);
  end loop;                                   
  return L_Local;                                   
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_symmdiff_Set_Record_SI_Type
function f_symmdiff_Set_Record_SI_Type(L : Set_Record_SI_Type , K : Set_Record_SI_Type ) return Set_Record_SI_Type is
declare                                         
  K_Local: Set_Record_SI_Type := K; 
  L_Local: Set_Record_SI_Type := L; 
begin                                         
  return f_union_Set_Record_SI_Type(f_diff_Set_Record_SI_Type(L_Local,K_Local),f_diff_Set_Record_SI_Type(K_Local,L_Local)); 
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_intersection_Set_Record_SI_Type
function f_intersection_Set_Record_SI_Type(L : Set_Record_SI_Type , K : Set_Record_SI_Type ) return Set_Record_SI_Type is
declare                                         
  K_Local: Set_Record_SI_Type := K; 
  L_Local: Set_Record_SI_Type := L; 
begin                                         
  return f_diff_Set_Record_SI_Type(L_Local,f_diff_Set_Record_SI_Type(L_Local,K_Local));               
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_eq_Set_Record_SI_Type
function f_eq_Set_Record_SI_Type(L : Set_Record_SI_Type , K : Set_Record_SI_Type ) return boolean is
begin                                         
  return (length(f_diff_Set_Record_SI_Type(L,K)) = 0) and (length(f_diff_Set_Record_SI_Type(L,K)) = 0);
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_neq_Set_Record_SI_Type
function f_neq_Set_Record_SI_Type(L : Set_Record_SI_Type , K : Set_Record_SI_Type ) return boolean is
begin                                         
  return not f_eq_Set_Record_SI_Type(L,K);                       
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_PRODUKTIVITAETSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_PRODUKTIVITAETSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_1;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_PRODUKTIVITAETSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_PRODUKTIVITAETSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_1:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_VERLUSTFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_VERLUSTFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_2;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_VERLUSTFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_VERLUSTFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_2:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_FEHLERFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_FEHLERFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_3;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_FEHLERFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_FEHLERFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_3:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_PRUEFLEISTUNGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_PRUEFLEISTUNGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_4;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_PRUEFLEISTUNGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_PRUEFLEISTUNGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_4:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_VEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_VEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_5;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_VEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_VEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_5:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_FEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_FEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_6;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_FEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_FEQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_6:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_KORREKTURLSTGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_KORREKTURLSTGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_7;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_KORREKTURLSTGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_KORREKTURLSTGSFAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_7:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_VBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_VBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_8;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_VBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_VBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_8:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_get_FBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_get_FBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type , Pos : integer) return REAL is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  return Rec.Rec_Elem_9;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION:fa_set_FBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type
function fa_set_FBQ_FAKTOR_of_Array_4_Record_RRRRRRRRR_Type(A : in out Array_4_Record_RRRRRRRRR_Type ,Value: REAL, Pos: integer) return Array_4_Record_RRRRRRRRR_Type is
declare
 Rec : Record_RRRRRRRRR_Type:=Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin
  Rec := nth_elem(A,Pos);
  Rec.Rec_Elem_9:= Value;
  replace_nth(A,Rec,Pos);
  return A;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_nth_Bag_Record_IRIRRRRR_Type
function f_get_nth_Bag_Record_IRIRRRRR_Type(L : in out Bag_Record_IRIRRRRR_Type, Pos : integer ) return Record_IRIRRRRR_Type is
declare
  C:  Record_IRIRRRRR_Type:= nth_elem(L,Pos);
begin
  remove_nth(L,Pos);
  return C;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_Bag_Record_IRIRRRRR_Type
function f_get_Bag_Record_IRIRRRRR_Type(L : in out Bag_Record_IRIRRRRR_Type ) return Record_IRIRRRRR_Type is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return f_get_nth_Bag_Record_IRIRRRRR_Type(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_getselected_Bag_Record_IRIRRRRR_Type
function f_getselected_Bag_Record_IRIRRRRR_Type(L : in out Bag_Record_IRIRRRRR_Type , Elem : Record_IRIRRRRR_Type ) return Record_IRIRRRRR_Type is
begin
  return f_get_nth_Bag_Record_IRIRRRRR_Type(L,Get_Index(L,Elem)); 
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_put_Bag_Record_IRIRRRRR_Type
function f_put_Bag_Record_IRIRRRRR_Type(L : in out Bag_Record_IRIRRRRR_Type , Elem : Record_IRIRRRRR_Type ) return Bag_Record_IRIRRRRR_Type is
begin
  insert_Last(L,Elem);
  return L;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_lookup_Bag_Record_IRIRRRRR_Type
function f_lookup_Bag_Record_IRIRRRRR_Type(L : in out Bag_Record_IRIRRRRR_Type ) return Record_IRIRRRRR_Type is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return nth_elem(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_diff_Bag_Record_IRIRRRRR_Type
function f_diff_Bag_Record_IRIRRRRR_Type(L : in Bag_Record_IRIRRRRR_Type , K : in Bag_Record_IRIRRRRR_Type ) return Bag_Record_IRIRRRRR_Type is
declare                                       
  is_in_L: integer := 0;                      
  K_Local: Bag_Record_IRIRRRRR_Type := K; 
  L_Local: Bag_Record_IRIRRRRR_Type := L; 
begin                                         
  while length(K_Local) > 0 loop                    
    is_in_L := Get_Index(L_Local,nth_elem(K_Local,1));           
    remove_first(K_Local);                          
    if is_in_L > 0 then                       
      remove_nth(L_Local,is_in_l);                  
    end if;                                   
  end loop;                                   
  return L_Local;                                   
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_union_Bag_Record_IRIRRRRR_Type
function f_union_Bag_Record_IRIRRRRR_Type(L : in Bag_Record_IRIRRRRR_Type , K : in Bag_Record_IRIRRRRR_Type ) return Bag_Record_IRIRRRRR_Type is
declare                                       
  K_Local: Bag_Record_IRIRRRRR_Type := K; 
  L_Local: Bag_Record_IRIRRRRR_Type := L; 
begin
  concat(L_Local,K_Local);
  return L_Local;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_symmdiff_Bag_Record_IRIRRRRR_Type
function f_symmdiff_Bag_Record_IRIRRRRR_Type(L : Bag_Record_IRIRRRRR_Type , K : Bag_Record_IRIRRRRR_Type ) return Bag_Record_IRIRRRRR_Type is
declare                                         
  K_Local: Bag_Record_IRIRRRRR_Type := K; 
  L_Local: Bag_Record_IRIRRRRR_Type := L; 
begin                                         
  return f_union_Bag_Record_IRIRRRRR_Type(f_diff_Bag_Record_IRIRRRRR_Type(L_Local,K_Local),f_diff_Bag_Record_IRIRRRRR_Type(K_Local,L_Local)); 
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_intersection_Bag_Record_IRIRRRRR_Type
function f_intersection_Bag_Record_IRIRRRRR_Type(L : Bag_Record_IRIRRRRR_Type , K : Bag_Record_IRIRRRRR_Type ) return Bag_Record_IRIRRRRR_Type is
declare                                         
  K_Local: Bag_Record_IRIRRRRR_Type := K; 
  L_Local: Bag_Record_IRIRRRRR_Type := L; 
begin                                         
  return f_diff_Bag_Record_IRIRRRRR_Type(L_Local,f_diff_Bag_Record_IRIRRRRR_Type(L_Local,K_Local));               
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_eq_Bag_Record_IRIRRRRR_Type
function f_eq_Bag_Record_IRIRRRRR_Type(L : Bag_Record_IRIRRRRR_Type , K : Bag_Record_IRIRRRRR_Type ) return boolean is
begin                                         
  return (length(f_diff_Bag_Record_IRIRRRRR_Type(L,K)) = 0) and (length(f_diff_Bag_Record_IRIRRRRR_Type(L,K)) = 0);
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_neq_Bag_Record_IRIRRRRR_Type
function f_neq_Bag_Record_IRIRRRRR_Type(L : Bag_Record_IRIRRRRR_Type , K : Bag_Record_IRIRRRRR_Type ) return boolean is
begin                                         
  return not f_eq_Bag_Record_IRIRRRRR_Type(L,K);                       
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_nth_Bag_I_Type
function f_get_nth_Bag_I_Type(L : in out Bag_I_Type, Pos : integer ) return INTEGER is
declare
  C:  INTEGER:= nth_elem(L,Pos);
begin
  remove_nth(L,Pos);
  return C;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_Bag_I_Type
function f_get_Bag_I_Type(L : in out Bag_I_Type ) return INTEGER is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return f_get_nth_Bag_I_Type(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_getselected_Bag_I_Type
function f_getselected_Bag_I_Type(L : in out Bag_I_Type , Elem : INTEGER ) return INTEGER is
begin
  return f_get_nth_Bag_I_Type(L,Get_Index(L,Elem)); 
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_put_Bag_I_Type
function f_put_Bag_I_Type(L : in out Bag_I_Type , Elem : INTEGER ) return Bag_I_Type is
begin
  insert_Last(L,Elem);
  return L;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_lookup_Bag_I_Type
function f_lookup_Bag_I_Type(L : in out Bag_I_Type ) return INTEGER is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return nth_elem(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_diff_Bag_I_Type
function f_diff_Bag_I_Type(L : in Bag_I_Type , K : in Bag_I_Type ) return Bag_I_Type is
declare                                       
  is_in_L: integer := 0;                      
  K_Local: Bag_I_Type := K; 
  L_Local: Bag_I_Type := L; 
begin                                         
  while length(K_Local) > 0 loop                    
    is_in_L := Get_Index(L_Local,nth_elem(K_Local,1));           
    remove_first(K_Local);                          
    if is_in_L > 0 then                       
      remove_nth(L_Local,is_in_l);                  
    end if;                                   
  end loop;                                   
  return L_Local;                                   
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_union_Bag_I_Type
function f_union_Bag_I_Type(L : in Bag_I_Type , K : in Bag_I_Type ) return Bag_I_Type is
declare                                       
  K_Local: Bag_I_Type := K; 
  L_Local: Bag_I_Type := L; 
begin
  concat(L_Local,K_Local);
  return L_Local;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_symmdiff_Bag_I_Type
function f_symmdiff_Bag_I_Type(L : Bag_I_Type , K : Bag_I_Type ) return Bag_I_Type is
declare                                         
  K_Local: Bag_I_Type := K; 
  L_Local: Bag_I_Type := L; 
begin                                         
  return f_union_Bag_I_Type(f_diff_Bag_I_Type(L_Local,K_Local),f_diff_Bag_I_Type(K_Local,L_Local)); 
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_intersection_Bag_I_Type
function f_intersection_Bag_I_Type(L : Bag_I_Type , K : Bag_I_Type ) return Bag_I_Type is
declare                                         
  K_Local: Bag_I_Type := K; 
  L_Local: Bag_I_Type := L; 
begin                                         
  return f_diff_Bag_I_Type(L_Local,f_diff_Bag_I_Type(L_Local,K_Local));               
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_eq_Bag_I_Type
function f_eq_Bag_I_Type(L : Bag_I_Type , K : Bag_I_Type ) return boolean is
begin                                         
  return (length(f_diff_Bag_I_Type(L,K)) = 0) and (length(f_diff_Bag_I_Type(L,K)) = 0);
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_neq_Bag_I_Type
function f_neq_Bag_I_Type(L : Bag_I_Type , K : Bag_I_Type ) return boolean is
begin                                         
  return not f_eq_Bag_I_Type(L,K);                       
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_nth_Bag_Record_IRRRRRRRR_Type
function f_get_nth_Bag_Record_IRRRRRRRR_Type(L : in out Bag_Record_IRRRRRRRR_Type, Pos : integer ) return Record_IRRRRRRRR_Type is
declare
  C:  Record_IRRRRRRRR_Type:= nth_elem(L,Pos);
begin
  remove_nth(L,Pos);
  return C;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_Bag_Record_IRRRRRRRR_Type
function f_get_Bag_Record_IRRRRRRRR_Type(L : in out Bag_Record_IRRRRRRRR_Type ) return Record_IRRRRRRRR_Type is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return f_get_nth_Bag_Record_IRRRRRRRR_Type(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_getselected_Bag_Record_IRRRRRRRR_Type
function f_getselected_Bag_Record_IRRRRRRRR_Type(L : in out Bag_Record_IRRRRRRRR_Type , Elem : Record_IRRRRRRRR_Type ) return Record_IRRRRRRRR_Type is
begin
  return f_get_nth_Bag_Record_IRRRRRRRR_Type(L,Get_Index(L,Elem)); 
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_put_Bag_Record_IRRRRRRRR_Type
function f_put_Bag_Record_IRRRRRRRR_Type(L : in out Bag_Record_IRRRRRRRR_Type , Elem : Record_IRRRRRRRR_Type ) return Bag_Record_IRRRRRRRR_Type is
begin
  insert_Last(L,Elem);
  return L;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_lookup_Bag_Record_IRRRRRRRR_Type
function f_lookup_Bag_Record_IRRRRRRRR_Type(L : in out Bag_Record_IRRRRRRRR_Type ) return Record_IRRRRRRRR_Type is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return nth_elem(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_diff_Bag_Record_IRRRRRRRR_Type
function f_diff_Bag_Record_IRRRRRRRR_Type(L : in Bag_Record_IRRRRRRRR_Type , K : in Bag_Record_IRRRRRRRR_Type ) return Bag_Record_IRRRRRRRR_Type is
declare                                       
  is_in_L: integer := 0;                      
  K_Local: Bag_Record_IRRRRRRRR_Type := K; 
  L_Local: Bag_Record_IRRRRRRRR_Type := L; 
begin                                         
  while length(K_Local) > 0 loop                    
    is_in_L := Get_Index(L_Local,nth_elem(K_Local,1));           
    remove_first(K_Local);                          
    if is_in_L > 0 then                       
      remove_nth(L_Local,is_in_l);                  
    end if;                                   
  end loop;                                   
  return L_Local;                                   
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_union_Bag_Record_IRRRRRRRR_Type
function f_union_Bag_Record_IRRRRRRRR_Type(L : in Bag_Record_IRRRRRRRR_Type , K : in Bag_Record_IRRRRRRRR_Type ) return Bag_Record_IRRRRRRRR_Type is
declare                                       
  K_Local: Bag_Record_IRRRRRRRR_Type := K; 
  L_Local: Bag_Record_IRRRRRRRR_Type := L; 
begin
  concat(L_Local,K_Local);
  return L_Local;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_symmdiff_Bag_Record_IRRRRRRRR_Type
function f_symmdiff_Bag_Record_IRRRRRRRR_Type(L : Bag_Record_IRRRRRRRR_Type , K : Bag_Record_IRRRRRRRR_Type ) return Bag_Record_IRRRRRRRR_Type is
declare                                         
  K_Local: Bag_Record_IRRRRRRRR_Type := K; 
  L_Local: Bag_Record_IRRRRRRRR_Type := L; 
begin                                         
  return f_union_Bag_Record_IRRRRRRRR_Type(f_diff_Bag_Record_IRRRRRRRR_Type(L_Local,K_Local),f_diff_Bag_Record_IRRRRRRRR_Type(K_Local,L_Local)); 
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_intersection_Bag_Record_IRRRRRRRR_Type
function f_intersection_Bag_Record_IRRRRRRRR_Type(L : Bag_Record_IRRRRRRRR_Type , K : Bag_Record_IRRRRRRRR_Type ) return Bag_Record_IRRRRRRRR_Type is
declare                                         
  K_Local: Bag_Record_IRRRRRRRR_Type := K; 
  L_Local: Bag_Record_IRRRRRRRR_Type := L; 
begin                                         
  return f_diff_Bag_Record_IRRRRRRRR_Type(L_Local,f_diff_Bag_Record_IRRRRRRRR_Type(L_Local,K_Local));               
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_eq_Bag_Record_IRRRRRRRR_Type
function f_eq_Bag_Record_IRRRRRRRR_Type(L : Bag_Record_IRRRRRRRR_Type , K : Bag_Record_IRRRRRRRR_Type ) return boolean is
begin                                         
  return (length(f_diff_Bag_Record_IRRRRRRRR_Type(L,K)) = 0) and (length(f_diff_Bag_Record_IRRRRRRRR_Type(L,K)) = 0);
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_neq_Bag_Record_IRRRRRRRR_Type
function f_neq_Bag_Record_IRRRRRRRR_Type(L : Bag_Record_IRRRRRRRR_Type , K : Bag_Record_IRRRRRRRR_Type ) return boolean is
begin                                         
  return not f_eq_Bag_Record_IRRRRRRRR_Type(L,K);                       
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_put_Set_S_Type
function f_put_Set_S_Type(L : in out Set_S_Type , Elem : STRING ) return Set_S_Type is
begin
  if Get_Index(L,Elem) = 0 then
    insert_Last(L,Elem);
  end if;
  return L;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_nth_Set_S_Type
function f_get_nth_Set_S_Type(L : in out Set_S_Type, Pos : integer ) return STRING is
declare
  C:  STRING:= nth_elem(L,Pos);
begin
  remove_nth(L,Pos);
  return C;
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_get_Set_S_Type
function f_get_Set_S_Type(L : in out Set_S_Type ) return STRING is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return f_get_nth_Set_S_Type(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_getselected_Set_S_Type
function f_getselected_Set_S_Type(L : in out Set_S_Type , Elem : STRING ) return STRING is
begin
  return f_get_nth_Set_S_Type(L,Get_Index(L,Elem)); 
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_lookup_Set_S_Type
function f_lookup_Set_S_Type(L : in out Set_S_Type ) return STRING is
declare
  Pos : Integer := 0;
begin
  Pos := trunc(random(float(length(L))));       
  if Pos = 0 then Pos := 1; end if;
  return nth_elem(L,Pos);
end function;
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_diff_Set_S_Type
function f_diff_Set_S_Type(L : in Set_S_Type , K : in Set_S_Type ) return Set_S_Type is
declare                                       
  is_in_L: integer := 0;                      
  K_Local: Set_S_Type := K; 
  L_Local: Set_S_Type := L; 
begin                                         
  while length(K_Local) > 0 loop                    
    is_in_L := Get_Index(L_Local,nth_elem(K_Local,1));           
    remove_first(K_Local);                          
    if is_in_L > 0 then                       
      remove_nth(L_Local,is_in_l);                  
    end if;                                   
  end loop;                                   
  return L_Local;                                   
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_union_Set_S_Type
function f_union_Set_S_Type(L : in Set_S_Type , K : in Set_S_Type ) return Set_S_Type is
declare                                       
  Elem : STRING := " "; -- Dummy-Zuweisung         
  K_Local: Set_S_Type := K; 
  L_Local: Set_S_Type := L; 
begin                                         
  while length(K_Local) > 0 loop                    
    Elem:=nth_elem(K_Local,1);                      
    remove_first(K_Local);                          
    L_Local:=f_Put_Set_S_Type(L_Local,Elem);
  end loop;                                   
  return L_Local;                                   
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_symmdiff_Set_S_Type
function f_symmdiff_Set_S_Type(L : Set_S_Type , K : Set_S_Type ) return Set_S_Type is
declare                                         
  K_Local: Set_S_Type := K; 
  L_Local: Set_S_Type := L; 
begin                                         
  return f_union_Set_S_Type(f_diff_Set_S_Type(L_Local,K_Local),f_diff_Set_S_Type(K_Local,L_Local)); 
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_intersection_Set_S_Type
function f_intersection_Set_S_Type(L : Set_S_Type , K : Set_S_Type ) return Set_S_Type is
declare                                         
  K_Local: Set_S_Type := K; 
  L_Local: Set_S_Type := L; 
begin                                         
  return f_diff_Set_S_Type(L_Local,f_diff_Set_S_Type(L_Local,K_Local));               
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_eq_Set_S_Type
function f_eq_Set_S_Type(L : Set_S_Type , K : Set_S_Type ) return boolean is
begin                                         
  return (length(f_diff_Set_S_Type(L,K)) = 0) and (length(f_diff_Set_S_Type(L,K)) = 0);
end function;                                 
-----------------------------------------------------------------------------
-- COMPILERDEFINIERTE FUNKTION: f_neq_Set_S_Type
function f_neq_Set_S_Type(L : Set_S_Type , K : Set_S_Type ) return boolean is
begin                                         
  return not f_eq_Set_S_Type(L,K);                       
end function;                                 
-----------------------------------------------------------------------------
-- FUNKTION : MIN

function MIN( WERT1 : in REAL, WERT2 : in REAL ) return REAL is
begin 
  if WERT1 < WERT2 then
  return WERT1;
else
  return WERT2;
end if;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ANFORDERUNG_ZU_ID

function GIB_ANFORDERUNG_ZU_ID( INHALT : in Bag_Record_IRIRRRRR_Type, ID : in INTEGER ) return Record_IRIRRRRR_Type is
declare 
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  if A.Rec_Elem_1 = ID then
  return A;
end if;
end loop;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := ID;
  return A;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ANFORDERUNG_ZU_ID_ODER_LEERE_ANF

function GIB_ANFORDERUNG_ZU_ID_ODER_LEERE_ANF( INHALT : in Bag_Record_IRIRRRRR_Type, ID : in INTEGER ) return Record_IRIRRRRR_Type is
declare 
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  if A.Rec_Elem_1 = ID then
  return A;
end if;
end loop;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  return A;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_AFP

function GIB_AFP( INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  AFP_SUMME : REAL := 0.0;
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  AFP_SUMME := 0.0;
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  AFP_SUMME := 0.0;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  AFP_SUMME := AFP_SUMME + A.Rec_Elem_2;
end loop;
  return AFP_SUMME;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_AFP_BEFUND

function GIB_AFP_BEFUND( INHALT : in Bag_Record_IRIRRRRR_Type, BEFUND : in Bag_Record_IRRRRRRRR_Type ) return REAL is
declare 
  AFP_SUMME : REAL := 0.0;
  BEFUND2 : Bag_Record_IRRRRRRRR_Type := Bag_Record_IRRRRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
  AFP_SUMME := 0.0;
  BEFUND2 := Bag_Record_IRRRRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  BEFUND2 := BEFUND;
  AFP_SUMME := 0.0;
  while not ( length(BEFUND2) = 0 ) loop
  B := f_get_Bag_Record_IRRRRRRRR_Type(BEFUND2);
  A := gib_anforderung_zu_id(INHALT,B.Rec_Elem_1);
  AFP_SUMME := AFP_SUMME + A.Rec_Elem_2;
end loop;
  return AFP_SUMME;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_AFP_SYSTEM

function GIB_AFP_SYSTEM( INTEGRIERT : in Bag_I_Type, INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  AFP_SUMME : REAL := 0.0;
  INTEGRIERT2 : Bag_I_Type := Bag_I_Type'();
  I : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  AFP_SUMME := 0.0;
  INTEGRIERT2 := Bag_I_Type'();
  I := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INTEGRIERT2 := INTEGRIERT;
  AFP_SUMME := 0.0;
  while not ( length(INTEGRIERT2) = 0 ) loop
  I := f_get_Bag_I_Type(INTEGRIERT2);
  A := gib_anforderung_zu_id(INHALT,I);
  AFP_SUMME := AFP_SUMME + A.Rec_Elem_2;
end loop;
  return AFP_SUMME;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ANALYSEFEHLER

function GIB_ANALYSEFEHLER( INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  FEHLERZAHL : REAL := 0.0;
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  FEHLERZAHL := 0.0;
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  FEHLERZAHL := 0.0;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  FEHLERZAHL := FEHLERZAHL + A.Rec_Elem_4;
end loop;
  return float(round(FEHLERZAHL));
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_FEINENTWURFSFEHLER

function GIB_FEINENTWURFSFEHLER( INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  FEHLERZAHL : REAL := 0.0;
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  FEHLERZAHL := 0.0;
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  FEHLERZAHL := 0.0;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  FEHLERZAHL := FEHLERZAHL + A.Rec_Elem_6;
end loop;
  return float(round(FEHLERZAHL));
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_GROBENTWURFSFEHLER

function GIB_GROBENTWURFSFEHLER( INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  FEHLERZAHL : REAL := 0.0;
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  FEHLERZAHL := 0.0;
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  FEHLERZAHL := 0.0;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  FEHLERZAHL := FEHLERZAHL + A.Rec_Elem_5;
end loop;
  return float(round(FEHLERZAHL));
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_IMPLEMENTIERUNGSFEHLER

function GIB_IMPLEMENTIERUNGSFEHLER( INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  FEHLERZAHL : REAL := 0.0;
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  FEHLERZAHL := 0.0;
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  FEHLERZAHL := 0.0;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  FEHLERZAHL := FEHLERZAHL + A.Rec_Elem_7;
end loop;
  return float(round(FEHLERZAHL));
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HANDBUCHFEHLER

function GIB_HANDBUCHFEHLER( INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  FEHLERZAHL : REAL := 0.0;
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  FEHLERZAHL := 0.0;
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  FEHLERZAHL := 0.0;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  FEHLERZAHL := FEHLERZAHL + A.Rec_Elem_8;
end loop;
  return float(round(FEHLERZAHL));
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_FEHLER

function GIB_FEHLER( INHALT : in Bag_Record_IRIRRRRR_Type ) return REAL is
declare 
  AFEHLERZAHL : REAL := 0.0;
  FFEHLERZAHL : REAL := 0.0;
  GFEHLERZAHL : REAL := 0.0;
  IFEHLERZAHL : REAL := 0.0;
  HFEHLERZAHL : REAL := 0.0;
  FEHLERZAHL : REAL := 0.0;
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  AFEHLERZAHL := 0.0;
  FFEHLERZAHL := 0.0;
  GFEHLERZAHL := 0.0;
  IFEHLERZAHL := 0.0;
  HFEHLERZAHL := 0.0;
  FEHLERZAHL := 0.0;
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFEHLERZAHL := 0.0;
  FFEHLERZAHL := 0.0;
  GFEHLERZAHL := 0.0;
  IFEHLERZAHL := 0.0;
  HFEHLERZAHL := 0.0;
  INHALT2 := INHALT;
  FEHLERZAHL := 0.0;
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  AFEHLERZAHL := AFEHLERZAHL + A.Rec_Elem_4;
  FFEHLERZAHL := FFEHLERZAHL + A.Rec_Elem_6;
  GFEHLERZAHL := GFEHLERZAHL + A.Rec_Elem_5;
  IFEHLERZAHL := IFEHLERZAHL + A.Rec_Elem_7;
  HFEHLERZAHL := HFEHLERZAHL + A.Rec_Elem_8;
end loop;
  FEHLERZAHL := float(round(AFEHLERZAHL)) + float(round(FFEHLERZAHL)) + float(round(GFEHLERZAHL)) + float(round(IFEHLERZAHL)) + float(round(HFEHLERZAHL));
  return FEHLERZAHL;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_BEFUND_ZU_ID

function GIB_BEFUND_ZU_ID( INHALT : in Bag_Record_IRRRRRRRR_Type, ID : in INTEGER ) return Record_IRRRRRRRR_Type is
declare 
  INHALT2 : Bag_Record_IRRRRRRRR_Type := Bag_Record_IRRRRRRRR_Type'();
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
  INHALT2 := Bag_Record_IRRRRRRRR_Type'();
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  while not ( length(INHALT2) = 0 ) loop
  B := f_get_Bag_Record_IRRRRRRRR_Type(INHALT2);
  if B.Rec_Elem_1 = ID then
  return B;
end if;
end loop;
  return Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : NIMM_IN_BERICHT_AUF

function NIMM_IN_BERICHT_AUF( PAKET : in Bag_Record_IRIRRRRR_Type, BERICHT : in Bag_Record_IRRRRRRRR_Type ) return Bag_Record_IRRRRRRRR_Type is
declare 
  P : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  BERICHT_LOKAL : Bag_Record_IRRRRRRRR_Type := Bag_Record_IRRRRRRRR_Type'();
begin 
  P := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  BERICHT_LOKAL := Bag_Record_IRRRRRRRR_Type'();
  BERICHT_LOKAL := BERICHT;
  P := PAKET;
  B.Rec_Elem_2 := 0.0;
  B.Rec_Elem_3 := 0.0;
  B.Rec_Elem_4 := 0.0;
  B.Rec_Elem_5 := 0.0;
  B.Rec_Elem_6 := 0.0;
  B.Rec_Elem_7 := 0.0;
  B.Rec_Elem_8 := 0.0;
  B.Rec_Elem_9 := 0.0;
  while not ( length(P) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(P);
  B.Rec_Elem_1 := A.Rec_Elem_1;
  BERICHT_LOKAL := f_put_Bag_Record_IRRRRRRRR_Type(BERICHT_LOKAL,B);
end loop;
  return BERICHT_LOKAL;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_UNGEPRUEFTE_IDS

function GIB_UNGEPRUEFTE_IDS( INHALT_VORGABE : in Bag_Record_IRIRRRRR_Type, INHALT_BERICHT : in Bag_Record_IRRRRRRRR_Type ) return Bag_I_Type is
declare 
  INHALT_V : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  INHALT_B : Bag_Record_IRRRRRRRR_Type := Bag_Record_IRRRRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  ENTHALTENE_IDS : Bag_I_Type := Bag_I_Type'();
  GEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
  INHALT_V := Bag_Record_IRIRRRRR_Type'();
  INHALT_B := Bag_Record_IRRRRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  ENTHALTENE_IDS := Bag_I_Type'();
  GEPRUEFTE_IDS := Bag_I_Type'();
  ENTHALTENE_IDS := Bag_I_Type'();
  INHALT_V := INHALT_VORGABE;
  while not ( length(INHALT_V) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT_V);
  ENTHALTENE_IDS := f_put_Bag_I_Type(ENTHALTENE_IDS,A.Rec_Elem_1);
end loop;
  GEPRUEFTE_IDS := Bag_I_Type'();
  INHALT_B := INHALT_BERICHT;
  while not ( length(INHALT_B) = 0 ) loop
  B := f_get_Bag_Record_IRRRRRRRR_Type(INHALT_B);
  GEPRUEFTE_IDS := f_put_Bag_I_Type(GEPRUEFTE_IDS,B.Rec_Elem_1);
end loop;
  return f_diff_Bag_I_Type(ENTHALTENE_IDS,GEPRUEFTE_IDS);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_FREMDE_ANFORDERUNGEN

function GIB_FREMDE_ANFORDERUNGEN( INHALT : in Bag_Record_IRIRRRRR_Type, AUTOR1_ID : in INTEGER, AUTOR2_ID : in INTEGER, AUTOR3_ID : in INTEGER ) return Bag_Record_IRIRRRRR_Type is
declare 
  ERGEBNIS : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  ERGEBNIS := Bag_Record_IRIRRRRR_Type'();
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  ERGEBNIS := Bag_Record_IRIRRRRR_Type'();
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  if (A.Rec_Elem_1 /= AUTOR1_ID ) and (A.Rec_Elem_1 /= AUTOR2_ID ) and (A.Rec_Elem_1 /= AUTOR3_ID ) then
  ERGEBNIS := f_put_Bag_Record_IRIRRRRR_Type(ERGEBNIS,A);
end if;
end loop;
  return ERGEBNIS;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_FREMDE_IDS

function GIB_FREMDE_IDS( ANF_IDS : in Bag_I_Type, INHALT : in Bag_Record_IRIRRRRR_Type, AUTOR1_ID : in INTEGER, AUTOR2_ID : in INTEGER, AUTOR3_ID : in INTEGER ) return Bag_I_Type is
declare 
  ERGEBNIS : Bag_I_Type := Bag_I_Type'();
  ANF_IDS_2 : Bag_I_Type := Bag_I_Type'();
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  ERGEBNIS := Bag_I_Type'();
  ANF_IDS_2 := Bag_I_Type'();
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANF_IDS_2 := ANF_IDS;
  ERGEBNIS := Bag_I_Type'();
  while not ( length(ANF_IDS_2) = 0 ) loop
  ID := f_get_Bag_I_Type(ANF_IDS_2);
  A := gib_anforderung_zu_id(INHALT,ID);
  if (A.Rec_Elem_3 /= AUTOR1_ID ) and (A.Rec_Elem_3 /= AUTOR2_ID ) and (A.Rec_Elem_3 /= AUTOR3_ID ) then
  ERGEBNIS := f_put_Bag_I_Type(ERGEBNIS,ID);
end if;
end loop;
  return ERGEBNIS;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_KORRIGIERTE_IDS

function GIB_KORRIGIERTE_IDS( INHALT_BERICHT : in Bag_Record_IRRRRRRRR_Type, UNKORRIGIERTE_IDS : in Bag_I_Type ) return Bag_I_Type is
declare 
  INHALT : Bag_Record_IRRRRRRRR_Type := Bag_Record_IRRRRRRRR_Type'();
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  ERGEBNIS : Bag_I_Type := Bag_I_Type'();
begin 
  INHALT := Bag_Record_IRRRRRRRR_Type'();
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  ERGEBNIS := Bag_I_Type'();
  INHALT := INHALT_BERICHT;
  ERGEBNIS := Bag_I_Type'();
  while not ( length(INHALT) = 0 ) loop
  B := f_get_Bag_Record_IRRRRRRRR_Type(INHALT);
  if not ( Get_Index(UNKORRIGIERTE_IDS,B.Rec_Elem_1) > 0 ) then
  ERGEBNIS := f_put_Bag_I_Type(ERGEBNIS,B.Rec_Elem_1);
end if;
end loop;
  return ERGEBNIS;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_EIGENE_IDS

function GIB_EIGENE_IDS( INHALT_BERICHT : in Bag_Record_IRRRRRRRR_Type, INHALT_DOKUMENT : in Bag_Record_IRIRRRRR_Type, AUTOR_ID : in INTEGER ) return Bag_I_Type is
declare 
  ERGEBNIS : Bag_I_Type := Bag_I_Type'();
  BEFUNDE : Bag_Record_IRRRRRRRR_Type := Bag_Record_IRRRRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
  ERGEBNIS := Bag_I_Type'();
  BEFUNDE := Bag_Record_IRRRRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  BEFUNDE := INHALT_BERICHT;
  ERGEBNIS := Bag_I_Type'();
  while not ( length(BEFUNDE) = 0 ) loop
  B := f_get_Bag_Record_IRRRRRRRR_Type(BEFUNDE);
  A := gib_anforderung_zu_id(INHALT_DOKUMENT,B.Rec_Elem_1);
  if A.Rec_Elem_3 = AUTOR_ID then
  ERGEBNIS := f_put_Bag_I_Type(ERGEBNIS,B.Rec_Elem_1);
end if;
end loop;
  return ERGEBNIS;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : SETZE_FEHLER

function SETZE_FEHLER( FEHLER : in REAL, QUOTE : in REAL ) return REAL is
declare 
  ENTDECKT : REAL := 0.0;
begin 
  ENTDECKT := 0.0;
  if QUOTE >= 0.0 then
  ENTDECKT := FEHLER * QUOTE / 100.0;
else
  ENTDECKT := -QUOTE;
end if;
  return ENTDECKT;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_KORRIGIERT

function GIB_KORRIGIERT( ANZAHL_FEHLER : in REAL, FEHLEREQ : in REAL, FEHLERBQ : in REAL ) return REAL is
begin 
  if FEHLEREQ >= 0.0 then
  return ANZAHL_FEHLER * (1.0 - (FEHLEREQ / 100.0 ) * (FEHLERBQ / 100.0 ) );
else
  return ANZAHL_FEHLER - FEHLEREQ * 80.0 / 100.0;
end if;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MAX_KORRIGIERT

function GIB_MAX_KORRIGIERT( ANZAHL_FEHLER : in REAL, FEHLEREQ : in REAL, FEHLERBQ : in REAL, MAXIMUM : in REAL ) return REAL is
declare 
  ENTDECKT : REAL := 0.0;
  KORRIGIERT : REAL := 0.0;
begin 
  ENTDECKT := 0.0;
  KORRIGIERT := 0.0;
  ENTDECKT := setze_fehler(ANZAHL_FEHLER,FEHLEREQ);
  KORRIGIERT := min(ENTDECKT,MAXIMUM);
  if FEHLEREQ >= 0.0 then
  return ANZAHL_FEHLER - (KORRIGIERT * FEHLERBQ / 100.0 );
else
  return ANZAHL_FEHLER + (KORRIGIERT * 80.0 / 100.0 );
end if;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : REDUZIERE

function REDUZIERE( FEHLER : in out REAL, FAKTOR : in REAL, MAXIMUM : in REAL ) return REAL is
begin 
  if (FEHLER * (-FAKTOR + 1.0 ) ) > MAXIMUM then
  FEHLER := FEHLER - MAXIMUM;
else
  FEHLER := FEHLER * FAKTOR;
end if;
  return FEHLER;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ANZAHL_ENTWICKLER

function GIB_ANZAHL_ENTWICKLER return REAL is
declare 
  RESULT : REAL := 0.0;
begin 
  RESULT := 0.0;
  RESULT := float(count_extended(BEARBEITET(*,*,*)));
  if RESULT = 0.0 then
  return 1.0;
else
  return RESULT;
end if;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_AUSWIRKUNG

function GIB_AUSWIRKUNG( ERFAHRUNG : in Set_Record_SI_Type, NAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type, AUSWIRKUNG : in INTEGER ) return REAL is
declare 
  ERF : Set_Record_SI_Type := Set_Record_SI_Type'();
  E : Record_SI_Type := Record_SI_Type'(" ",0);
  N : INTEGER := 0;
  EFF : Record_RRRRRRRRR_Type := Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
  ERF := Set_Record_SI_Type'();
  E := Record_SI_Type'(" ",0);
  N := 0;
  EFF := Record_RRRRRRRRR_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  ERF := ERFAHRUNG;
  N := 1;
  while not ( length(ERF) = 0 ) loop
  E := f_get_Set_Record_SI_Type(ERF);
  if E.Rec_Elem_1 = NAME then
  N := E.Rec_Elem_2;
end if;
end loop;
  EFF := nth_elem(EFFEKTE, N);
  if AUSWIRKUNG = 1 then
  return EFF.Rec_Elem_1;
end if;
  if AUSWIRKUNG = 2 then
  return EFF.Rec_Elem_2;
end if;
  if AUSWIRKUNG = 3 then
  return EFF.Rec_Elem_3;
end if;
  if AUSWIRKUNG = 4 then
  return EFF.Rec_Elem_4;
end if;
  if AUSWIRKUNG = 5 then
  return EFF.Rec_Elem_5;
end if;
  if AUSWIRKUNG = 6 then
  return EFF.Rec_Elem_6;
end if;
  if AUSWIRKUNG = 7 then
  return EFF.Rec_Elem_7;
end if;
  if AUSWIRKUNG = 8 then
  return EFF.Rec_Elem_8;
end if;
  return EFF.Rec_Elem_9;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MIT_MULTIPLIZIERTEN_FEHLERN

function GIB_MIT_MULTIPLIZIERTEN_FEHLERN( INHALT : in Bag_Record_IRIRRRRR_Type, FAKTOR : in REAL ) return Bag_Record_IRIRRRRR_Type is
declare 
  INHALT2 : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  ERGEBNIS : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
  INHALT2 := Bag_Record_IRIRRRRR_Type'();
  ERGEBNIS := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  INHALT2 := INHALT;
  ERGEBNIS := Bag_Record_IRIRRRRR_Type'();
  while not ( length(INHALT2) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(INHALT2);
  A.Rec_Elem_4 := FAKTOR * A.Rec_Elem_4;
  A.Rec_Elem_5 := FAKTOR * A.Rec_Elem_5;
  A.Rec_Elem_6 := FAKTOR * A.Rec_Elem_6;
  A.Rec_Elem_7 := FAKTOR * A.Rec_Elem_7;
  A.Rec_Elem_8 := FAKTOR * A.Rec_Elem_8;
  ERGEBNIS := f_put_Bag_Record_IRIRRRRR_Type(ERGEBNIS,A);
end loop;
  return ERGEBNIS;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MULTIPLIZIERTE_QUOTEN

function GIB_MULTIPLIZIERTE_QUOTEN( QUOTEN : in Record_RRRRR_Type, FAKTOR : in REAL ) return Record_RRRRR_Type is
begin 
  return Record_RRRRR_Type'(FAKTOR * QUOTEN.Rec_Elem_1,FAKTOR * QUOTEN.Rec_Elem_2,FAKTOR * QUOTEN.Rec_Elem_3,
FAKTOR * QUOTEN.Rec_Elem_4,FAKTOR * QUOTEN.Rec_Elem_5);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_WUNSCH

function GIB_WUNSCH( WUNSCH : in Bag_Record_IRIRRRRR_Type, VAF : in REAL, FAKTOREN : in Array_3_I_Type, FUNKTIONEN : in Array_3_I_Type ) return Bag_Record_IRIRRRRR_Type is
declare 
  W : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  ANZAHL_F : INTEGER := 0;
  I : INTEGER := 0;
begin 
  W := Bag_Record_IRIRRRRR_Type'();
  ANZAHL_F := 0;
  I := 0;
  W := WUNSCH;
  I := 1;
  while I <= 3 loop
  ANZAHL_F := nth_elem(FUNKTIONEN, I);
  while ANZAHL_F > 0 loop
  W := f_put_Bag_Record_IRIRRRRR_Type(W,Record_IRIRRRRR_Type'(length(W) + 1,VAF * float(nth_elem(FAKTOREN, I)),0,0.0,0.0,
0.0,0.0,0.0));
  ANZAHL_F := ANZAHL_F - 1;
end loop;
  I := I + 1;
end loop;
  return W;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : LOG10

function LOG10( X : in REAL ) return REAL is
begin 
  return log(X) / log(10.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : INTEGER_TO_STRING

function INTEGER_TO_STRING( I : in INTEGER ) return STRING is
begin 
  if I = 0 then
  return "0";
end if;
  if I = 1 then
  return "1";
end if;
  if I = 2 then
  return "2";
end if;
  if I = 3 then
  return "3";
end if;
  if I = 4 then
  return "4";
end if;
  if I = 5 then
  return "5";
end if;
  if I = 6 then
  return "6";
end if;
  if I = 7 then
  return "7";
end if;
  if I = 8 then
  return "8";
end if;
  if I = 9 then
  return "9";
end if;
  if I >= 10 then
  return integer_to_string(I div 10) & integer_to_string(I mod 10);
end if;
  return "-" & integer_to_string(-I);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_AUFZAEHLSTRING

function GIB_AUFZAEHLSTRING( ALTE_AUFZAEHLUNG : in STRING, NEUES_WORT : in STRING ) return STRING is
declare 
  U_POS : INTEGER := 0;
  STR : STRING := " ";
begin 
  U_POS := 0;
  STR := " ";
  if ALTE_AUFZAEHLUNG = "" then
  return NEUES_WORT;
else
  U_POS := is_substring(ALTE_AUFZAEHLUNG," and ");
  if U_POS = 0 then
  return ALTE_AUFZAEHLUNG & " and " & NEUES_WORT;
else
  return substring(ALTE_AUFZAEHLUNG,1,U_POS - 1) & ", " & substring(ALTE_AUFZAEHLUNG,U_POS + 5,1000) & " and " & NEUES_WORT;
end if;
end if;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : ADD_NEUE_CF

function ADD_NEUE_CF( CODEFEHLER : in REAL, A : in Record_IRIRRRRR_Type ) return REAL is
declare 
  CF_NEU : REAL := 0.0;
begin 
  CF_NEU := 0.0;
  CF_NEU := A.Rec_Elem_4 + A.Rec_Elem_5 + A.Rec_Elem_6 + A.Rec_Elem_7;
  CF_NEU := CODEFEHLER + CF_NEU;
  return CF_NEU;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : ADD_ERW_CF

function ADD_ERW_CF( CODEFEHLER : in REAL, A_ALT : in Record_IRIRRRRR_Type, A : in Record_IRIRRRRR_Type ) return REAL is
declare 
  CF_NEU : REAL := 0.0;
begin 
  CF_NEU := 0.0;
  CF_NEU := (A.Rec_Elem_4 - A_ALT.Rec_Elem_4 ) + (A.Rec_Elem_5 - A_ALT.Rec_Elem_5 ) + (A.Rec_Elem_6 - A_ALT.Rec_Elem_6 ) + (A.Rec_Elem_7 - A_ALT.Rec_Elem_7 );
  CF_NEU := CODEFEHLER + CF_NEU;
  return CF_NEU;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : ADD_KORR_CF

function ADD_KORR_CF( CODEFEHLER : in REAL, A : in Record_IRIRRRRR_Type, B : in Record_IRRRRRRRR_Type, FBQ : in Record_RRRRR_Type, R : in INTEGER ) return REAL is
declare 
  CF_NEU : REAL := 0.0;
begin 
  CF_NEU := 0.0;
  if R = 1 then
  CF_NEU := A.Rec_Elem_4 * B.Rec_Elem_9 / 100.0 * (1.0 - FBQ.Rec_Elem_1 / 100.0 );
end if;
  if R = 2 then
  CF_NEU := A.Rec_Elem_5 * B.Rec_Elem_9 / 100.0 * (1.0 - FBQ.Rec_Elem_2 / 100.0 );
end if;
  if R = 3 then
  CF_NEU := A.Rec_Elem_6 * B.Rec_Elem_9 / 100.0 * (1.0 - FBQ.Rec_Elem_3 / 100.0 );
else
  CF_NEU := 0.0;
end if;
  if B.Rec_Elem_2 > 0.0 then
  CF_NEU := CF_NEU + (A.Rec_Elem_4 * B.Rec_Elem_2 / 100.0 * (1.0 - FBQ.Rec_Elem_1 / 100.0 ) );
else
  CF_NEU := CF_NEU + (-B.Rec_Elem_2 * 80.0 / 100.0 );
end if;
  if B.Rec_Elem_3 > 0.0 then
  CF_NEU := CF_NEU + (A.Rec_Elem_5 * B.Rec_Elem_3 / 100.0 * (1.0 - FBQ.Rec_Elem_2 / 100.0 ) );
else
  CF_NEU := CF_NEU + (-B.Rec_Elem_3 * 80.0 / 100.0 );
end if;
  if B.Rec_Elem_4 > 0.0 then
  CF_NEU := CF_NEU + (A.Rec_Elem_6 * B.Rec_Elem_4 / 100.0 * (1.0 - FBQ.Rec_Elem_3 / 100.0 ) );
else
  CF_NEU := CF_NEU + (-B.Rec_Elem_4 * 80.0 / 100.0 );
end if;
  if B.Rec_Elem_5 > 0.0 then
  CF_NEU := CF_NEU + (A.Rec_Elem_7 * B.Rec_Elem_5 / 100.0 * (1.0 - FBQ.Rec_Elem_4 / 100.0 ) );
else
  CF_NEU := CF_NEU + (-B.Rec_Elem_5 * 80.0 / 100.0 );
end if;
  CF_NEU := CODEFEHLER + CF_NEU;
  return CF_NEU;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : ADD_KORR_MAX_CF

function ADD_KORR_MAX_CF( CODEFEHLER : in REAL, F : in REAL, MAX_F : in REAL, F_NEU : in REAL ) return REAL is
declare 
  CF_NEU : REAL := 0.0;
begin 
  CF_NEU := 0.0;
  if F > MAX_F then
  CF_NEU := MAX_F * F_NEU;
else
  CF_NEU := F * F_NEU;
end if;
  CF_NEU := CODEFEHLER + CF_NEU;
  return CF_NEU;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ANALYSEPRODUKTIVITAET

function GIB_ANALYSEPRODUKTIVITAET( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_P_ANALYSIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  RESULT : REAL := 0.0;
begin 
  RESULT := 0.0;
  ANWENDUNGSBEREICH_P_ANALYSIEREN := Array_4_R_Type'(0.8,1.0,1.2,1.4);
  RESULT := (7.08 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251) * nth_elem(ANWENDUNGSBEREICH_P_ANALYSIEREN, ERFAHRUNG.Rec_Elem_1);
  send_tutor_message PRINT_STRING("Current productivity:");
  send_tutor_message PRINT_REAL(RESULT);
  return RESULT;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SPEZPRODUKTIVITAET

function GIB_SPEZPRODUKTIVITAET( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_P_SPEZIFIZIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  SPEZIFIZIEREN_P_SPEZIFIZIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_P_SPEZIFIZIEREN := Array_4_R_Type'(0.9,1.0,1.1,1.2);
  SPEZIFIZIEREN_P_SPEZIFIZIEREN := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return (1.42 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251) * nth_elem(ANWENDUNGSBEREICH_P_SPEZIFIZIEREN, ERFAHRUNG.Rec_Elem_1) * nth_elem(SPEZIFIZIEREN_P_SPEZIFIZIEREN, ERFAHRUNG.Rec_Elem_2);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ENTWURFSPRODUKTIVITAET

function GIB_ENTWURFSPRODUKTIVITAET( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  ENTWURF_P_ENTWERFEN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_P_ENTWERFEN := Array_4_R_Type'(0.5,0.75,1.0,1.25);
  return (1.18 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251) * nth_elem(ENTWURF_P_ENTWERFEN, ERFAHRUNG.Rec_Elem_3);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MODULSPEZPRODUKTIVITAET

function GIB_MODULSPEZPRODUKTIVITAET( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
begin 
  return (1.01 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CODIERUNGSPRODUKTIVITAET

function GIB_CODIERUNGSPRODUKTIVITAET( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  PROGRAMMIERUNG_P_CODIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_P_CODIEREN := Array_4_R_Type'(0.8,0.9,1.0,1.05);
  return (0.47 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.192) * nth_elem(PROGRAMMIERUNG_P_CODIEREN, ERFAHRUNG.Rec_Elem_4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HANDBUCHPRODUKTIVITAET

function GIB_HANDBUCHPRODUKTIVITAET( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
begin 
  return (1.16 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.192);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ANALYSEFEHLERRATE

function GIB_ANALYSEFEHLERRATE( ERFAHRUNG : in Record_IIIII_Type, AFP_PROJEKT : in REAL ) return REAL is
declare 
  ANWENDUNGSBEREICH_FR_ANALYSIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  RESULT : REAL := 0.0;
begin 
  RESULT := 0.0;
  ANWENDUNGSBEREICH_FR_ANALYSIEREN := Array_4_R_Type'(1.2,1.0,0.9,0.8);
  RESULT := (0.0692 + 0.0462 * log10(AFP_PROJEKT) ) * nth_elem(ANWENDUNGSBEREICH_FR_ANALYSIEREN, ERFAHRUNG.Rec_Elem_1);
  send_tutor_message PRINT_STRING("Current error rate:");
  send_tutor_message PRINT_REAL(RESULT);
  return RESULT;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SPEZFEHLERRATE

function GIB_SPEZFEHLERRATE( ERFAHRUNG : in Record_IIIII_Type, AFP_PROJEKT : in REAL ) return REAL is
declare 
  ANWENDUNGSBEREICH_FR_SPEZIFIZIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  SPEZIFIZIEREN_FR_SPEZIFIZIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_FR_SPEZIFIZIEREN := Array_4_R_Type'(1.2,1.1,1.0,0.9);
  SPEZIFIZIEREN_FR_SPEZIFIZIEREN := Array_4_R_Type'(1.2,1.1,1.0,0.9);
  return (0.1781 + 0.1188 * log10(AFP_PROJEKT) ) * nth_elem(ANWENDUNGSBEREICH_FR_SPEZIFIZIEREN, ERFAHRUNG.Rec_Elem_1) * nth_elem(SPEZIFIZIEREN_FR_SPEZIFIZIEREN, ERFAHRUNG.Rec_Elem_2);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ENTWURFSFEHLERRATE

function GIB_ENTWURFSFEHLERRATE( ERFAHRUNG : in Record_IIIII_Type, AFP_PROJEKT : in REAL ) return REAL is
declare 
  ENTWURF_FR_ENTWERFEN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_FR_ENTWERFEN := Array_4_R_Type'(1.25,1.0,0.75,0.5);
  return (0.1645 + 0.1097 * log10(AFP_PROJEKT) ) * nth_elem(ENTWURF_FR_ENTWERFEN, ERFAHRUNG.Rec_Elem_3);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MODULSPEZFEHLERRATE

function GIB_MODULSPEZFEHLERRATE( ERFAHRUNG : in Record_IIIII_Type, AFP_PROJEKT : in REAL ) return REAL is
begin 
  return (0.1447 + 0.0965 * log10(AFP_PROJEKT) );
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CODIERUNGSFEHLERRATE

function GIB_CODIERUNGSFEHLERRATE( ERFAHRUNG : in Record_IIIII_Type, AFP_PROJEKT : in REAL ) return REAL is
declare 
  PROGRAMMIERUNG_FR_CODIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_FR_CODIEREN := Array_4_R_Type'(1.3,1.1,1.0,0.95);
  return (0.4329 + 0.2887 * log10(AFP_PROJEKT) ) * nth_elem(PROGRAMMIERUNG_FR_CODIEREN, ERFAHRUNG.Rec_Elem_4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HANDBUCHFEHLERRATE

function GIB_HANDBUCHFEHLERRATE( ERFAHRUNG : in Record_IIIII_Type, AFP_PROJEKT : in REAL ) return REAL is
begin 
  return (0.1237 + 0.0825 * log10(AFP_PROJEKT) );
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ANALYSEVERLUSTQUOTE

function GIB_ANALYSEVERLUSTQUOTE( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_VQ_ANALYSIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  RESULT : REAL := 0.0;
begin 
  RESULT := 0.0;
  ANWENDUNGSBEREICH_VQ_ANALYSIEREN := Array_4_R_Type'(1.4,1.0,0.7,0.6);
  RESULT := 8.0 * nth_elem(ANWENDUNGSBEREICH_VQ_ANALYSIEREN, ERFAHRUNG.Rec_Elem_1);
  send_tutor_message PRINT_STRING("Current loss rate:");
  send_tutor_message PRINT_REAL(RESULT);
  return RESULT;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SPEZVERLUSTQUOTE

function GIB_SPEZVERLUSTQUOTE( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_VQ_SPEZIFIZIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  SPEZIFIZIEREN_VQ_SPEZIFIZIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_VQ_SPEZIFIZIEREN := Array_4_R_Type'(1.3,1.0,0.8,0.75);
  SPEZIFIZIEREN_VQ_SPEZIFIZIEREN := Array_4_R_Type'(1.1,1.0,1.0,1.0);
  return 5.0 * nth_elem(ANWENDUNGSBEREICH_VQ_SPEZIFIZIEREN, ERFAHRUNG.Rec_Elem_1) * nth_elem(SPEZIFIZIEREN_VQ_SPEZIFIZIEREN, ERFAHRUNG.Rec_Elem_2);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ENTWURFSVERLUSTQUOTE

function GIB_ENTWURFSVERLUSTQUOTE( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  ENTWURF_VQ_ENTWERFEN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_VQ_ENTWERFEN := Array_4_R_Type'(1.3,1.0,0.9,0.75);
  return 4.0 * nth_elem(ENTWURF_VQ_ENTWERFEN, ERFAHRUNG.Rec_Elem_3);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MODULSPEZVERLUSTQUOTE

function GIB_MODULSPEZVERLUSTQUOTE( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
begin 
  return 4.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CODIERUNGSVERLUSTQUOTE

function GIB_CODIERUNGSVERLUSTQUOTE( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  PROGRAMMIERUNG_VQ_CODIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_VQ_CODIEREN := Array_4_R_Type'(1.01,1.0,0.99,0.97);
  return 3.0 * nth_elem(PROGRAMMIERUNG_VQ_CODIEREN, ERFAHRUNG.Rec_Elem_4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HANDBUCHVERLUSTQUOTE

function GIB_HANDBUCHVERLUSTQUOTE( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
begin 
  return 5.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SREVIEW_PRUEFLEISTUNG

function GIB_SREVIEW_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type, ANZAHL_GUTACHTER : in REAL ) return REAL is
declare 
  ANWENDUNGSBEREICH_P_SREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_P_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_P_SREVIEW := Array_4_R_Type'(0.9,1.0,1.0,1.0);
  REVIEWS_P_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.05);
  return (18.54 / 60.0 ) * power(ANZAHL_GUTACHTER - 0.75,-0.251) * nth_elem(ANWENDUNGSBEREICH_P_SREVIEW, ERFAHRUNG.Rec_Elem_1) * nth_elem(REVIEWS_P_REVIEW, ERFAHRUNG.Rec_Elem_5) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_EREVIEW_PRUEFLEISTUNG

function GIB_EREVIEW_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type, ANZAHL_GUTACHTER : in REAL ) return REAL is
declare 
  ENTWURF_P_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_P_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_P_EREVIEW := Array_4_R_Type'(0.9,1.0,1.0,1.0);
  REVIEWS_P_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.05);
  return (15.46 / 60.0 ) * power(ANZAHL_GUTACHTER - 0.75,-0.251) * nth_elem(ENTWURF_P_EREVIEW, ERFAHRUNG.Rec_Elem_3) * nth_elem(REVIEWS_P_REVIEW, ERFAHRUNG.Rec_Elem_5) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MSREVIEW_PRUEFLEISTUNG

function GIB_MSREVIEW_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type, ANZAHL_GUTACHTER : in REAL ) return REAL is
declare 
  ENTWURF_P_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_P_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_P_EREVIEW := Array_4_R_Type'(0.9,1.0,1.0,1.0);
  REVIEWS_P_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.05);
  return (10.6 / 60.0 ) * power(ANZAHL_GUTACHTER - 0.75,-0.251) * nth_elem(ENTWURF_P_EREVIEW, ERFAHRUNG.Rec_Elem_3) * nth_elem(REVIEWS_P_REVIEW, ERFAHRUNG.Rec_Elem_5) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CREVIEW_PRUEFLEISTUNG

function GIB_CREVIEW_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type, ANZAHL_GUTACHTER : in REAL ) return REAL is
declare 
  PROGRAMMIERUNG_P_CREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_P_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_P_CREVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  REVIEWS_P_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.05);
  return (3.68 / 60.0 ) * power(ANZAHL_GUTACHTER - 0.75,-0.251) * nth_elem(PROGRAMMIERUNG_P_CREVIEW, ERFAHRUNG.Rec_Elem_4) * nth_elem(REVIEWS_P_REVIEW, ERFAHRUNG.Rec_Elem_5) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HBREVIEW_PRUEFLEISTUNG

function GIB_HBREVIEW_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type, ANZAHL_GUTACHTER : in REAL ) return REAL is
declare 
  REVIEWS_P_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  REVIEWS_P_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.05);
  return (16.22 / 60.0 ) * power(ANZAHL_GUTACHTER - 0.75,-0.192) * nth_elem(REVIEWS_P_REVIEW, ERFAHRUNG.Rec_Elem_5) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SREVIEW_2_FEQ

function GIB_SREVIEW_2_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_FEQ_SREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_FEQ_SREVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 60.0 * (nth_elem(ANWENDUNGSBEREICH_FEQ_SREVIEW, E1.Rec_Elem_1) + nth_elem(ANWENDUNGSBEREICH_FEQ_SREVIEW, E2.Rec_Elem_1) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SREVIEW_3_FEQ

function GIB_SREVIEW_3_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_FEQ_SREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_FEQ_SREVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 65.0 * (nth_elem(ANWENDUNGSBEREICH_FEQ_SREVIEW, E1.Rec_Elem_1) + nth_elem(ANWENDUNGSBEREICH_FEQ_SREVIEW, E2.Rec_Elem_1) + nth_elem(ANWENDUNGSBEREICH_FEQ_SREVIEW, E3.Rec_Elem_1) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,6) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_EREVIEW_2_FEQ

function GIB_EREVIEW_2_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_FEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_FEQ_EREVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 60.0 * (nth_elem(ENTWURF_FEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_FEQ_EREVIEW, E2.Rec_Elem_3) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_EREVIEW_3_FEQ

function GIB_EREVIEW_3_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_FEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_FEQ_EREVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 65.0 * (nth_elem(ENTWURF_FEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_FEQ_EREVIEW, E2.Rec_Elem_3) + nth_elem(ENTWURF_FEQ_EREVIEW, E3.Rec_Elem_3) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,6) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MSREVIEW_2_FEQ

function GIB_MSREVIEW_2_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_FEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_FEQ_EREVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 60.0 * (nth_elem(ENTWURF_FEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_FEQ_EREVIEW, E2.Rec_Elem_3) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MSREVIEW_3_FEQ

function GIB_MSREVIEW_3_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_FEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_FEQ_EREVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 65.0 * (nth_elem(ENTWURF_FEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_FEQ_EREVIEW, E2.Rec_Elem_3) + nth_elem(ENTWURF_FEQ_EREVIEW, E3.Rec_Elem_3) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,6) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CREVIEW_2_FEQ

function GIB_CREVIEW_2_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  PROGRAMMIERUNG_FEQ_CREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_FEQ_CREVIEW := Array_4_R_Type'(0.95,0.98,1.0,1.02);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 60.0 * (nth_elem(PROGRAMMIERUNG_FEQ_CREVIEW, E1.Rec_Elem_4) + nth_elem(PROGRAMMIERUNG_FEQ_CREVIEW, E2.Rec_Elem_4) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CREVIEW_3_FEQ

function GIB_CREVIEW_3_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  PROGRAMMIERUNG_FEQ_CREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_FEQ_CREVIEW := Array_4_R_Type'(0.95,0.98,1.0,1.02);
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 65.0 * (nth_elem(PROGRAMMIERUNG_FEQ_CREVIEW, E1.Rec_Elem_4) + nth_elem(PROGRAMMIERUNG_FEQ_CREVIEW, E2.Rec_Elem_4) + nth_elem(PROGRAMMIERUNG_FEQ_CREVIEW, E3.Rec_Elem_4) ) * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,6) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HBREVIEW_2_FEQ

function GIB_HBREVIEW_2_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 60.0 * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) ) / 4.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HBREVIEW_3_FEQ

function GIB_HBREVIEW_3_FEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  REVIEWS_FEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  REVIEWS_FEQ_REVIEW := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  return 65.0 * (nth_elem(REVIEWS_FEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_FEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,6) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,6) ) / 9.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SREVIEW_2_VEQ

function GIB_SREVIEW_2_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_VEQ_SREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_VEQ_SREVIEW := Array_4_R_Type'(0.7,0.9,1.0,1.1);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 60.0 * (nth_elem(ANWENDUNGSBEREICH_VEQ_SREVIEW, E1.Rec_Elem_1) + nth_elem(ANWENDUNGSBEREICH_VEQ_SREVIEW, E2.Rec_Elem_1) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SREVIEW_3_VEQ

function GIB_SREVIEW_3_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_VEQ_SREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_VEQ_SREVIEW := Array_4_R_Type'(0.7,0.9,1.0,1.1);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 65.0 * (nth_elem(ANWENDUNGSBEREICH_VEQ_SREVIEW, E1.Rec_Elem_1) + nth_elem(ANWENDUNGSBEREICH_VEQ_SREVIEW, E2.Rec_Elem_1) + nth_elem(ANWENDUNGSBEREICH_VEQ_SREVIEW, E3.Rec_Elem_1) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,5) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_EREVIEW_2_VEQ

function GIB_EREVIEW_2_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_VEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_VEQ_EREVIEW := Array_4_R_Type'(0.7,0.9,1.0,1.1);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 60.0 * (nth_elem(ENTWURF_VEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_VEQ_EREVIEW, E2.Rec_Elem_3) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_EREVIEW_3_VEQ

function GIB_EREVIEW_3_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_VEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_VEQ_EREVIEW := Array_4_R_Type'(0.7,0.9,1.0,1.1);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 65.0 * (nth_elem(ENTWURF_VEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_VEQ_EREVIEW, E2.Rec_Elem_3) + nth_elem(ENTWURF_VEQ_EREVIEW, E3.Rec_Elem_3) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,5) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MSREVIEW_2_VEQ

function GIB_MSREVIEW_2_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_VEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_VEQ_EREVIEW := Array_4_R_Type'(0.7,0.9,1.0,1.1);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 60.0 * (nth_elem(ENTWURF_VEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_VEQ_EREVIEW, E2.Rec_Elem_3) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MSREVIEW_3_VEQ

function GIB_MSREVIEW_3_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_VEQ_EREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_VEQ_EREVIEW := Array_4_R_Type'(0.7,0.9,1.0,1.1);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 65.0 * (nth_elem(ENTWURF_VEQ_EREVIEW, E1.Rec_Elem_3) + nth_elem(ENTWURF_VEQ_EREVIEW, E2.Rec_Elem_3) + nth_elem(ENTWURF_VEQ_EREVIEW, E3.Rec_Elem_3) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,5) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CREVIEW_2_VEQ

function GIB_CREVIEW_2_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  PROGRAMMIERUNG_VEQ_CREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_VEQ_CREVIEW := Array_4_R_Type'(0.95,0.98,1.0,1.02);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 60.0 * (nth_elem(PROGRAMMIERUNG_VEQ_CREVIEW, E1.Rec_Elem_4) + nth_elem(PROGRAMMIERUNG_VEQ_CREVIEW, E2.Rec_Elem_4) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) ) / 8.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CREVIEW_3_VEQ

function GIB_CREVIEW_3_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  PROGRAMMIERUNG_VEQ_CREVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_VEQ_CREVIEW := Array_4_R_Type'(0.95,0.98,1.0,1.02);
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 65.0 * (nth_elem(PROGRAMMIERUNG_VEQ_CREVIEW, E1.Rec_Elem_4) + nth_elem(PROGRAMMIERUNG_VEQ_CREVIEW, E2.Rec_Elem_4) + nth_elem(PROGRAMMIERUNG_VEQ_CREVIEW, E3.Rec_Elem_4) ) * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,5) ) / 27.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HBREVIEW_2_VEQ

function GIB_HBREVIEW_2_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 60.0 * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) ) / 4.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HBREVIEW_3_VEQ

function GIB_HBREVIEW_3_VEQ( E1 : in Record_IIIII_Type, E2 : in Record_IIIII_Type, E3 : in Record_IIIII_Type, NOTATIONSERF1 : in Set_Record_SI_Type, NOTATIONSERF2 : in Set_Record_SI_Type, NOTATIONSERF3 : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  REVIEWS_VEQ_REVIEW : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  REVIEWS_VEQ_REVIEW := Array_4_R_Type'(0.8,0.9,1.0,1.1);
  return 65.0 * (nth_elem(REVIEWS_VEQ_REVIEW, E1.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E2.Rec_Elem_5) + nth_elem(REVIEWS_VEQ_REVIEW, E3.Rec_Elem_5) ) * (gib_auswirkung(NOTATIONSERF1,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF2,NOTATIONSNAME,EFFEKTE,5) + gib_auswirkung(NOTATIONSERF3,NOTATIONSNAME,EFFEKTE,5) ) / 9.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MTEST_PRUEFLEISTUNG

function GIB_MTEST_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return (2.11 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ITEST_PRUEFLEISTUNG

function GIB_ITEST_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return (2.88 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_STEST_PRUEFLEISTUNG

function GIB_STEST_PRUEFLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return (3.93 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ATEST_PRUEFLEISTUNG

function GIB_ATEST_PRUEFLEISTUNG return REAL is
begin 
  return (8.54 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MTEST_FEHLEREQ

function GIB_MTEST_FEHLEREQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 55.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ITEST_FEHLEREQ

function GIB_ITEST_FEHLEREQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 45.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_STEST_FEHLEREQ

function GIB_STEST_FEHLEREQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 38.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ATEST_FEHLEREQ

function GIB_ATEST_FEHLEREQ return REAL is
begin 
  return 25.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MTEST_VERLUSTEQ

function GIB_MTEST_VERLUSTEQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 55.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ITEST_VERLUSTEQ

function GIB_ITEST_VERLUSTEQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 45.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_STEST_VERLUSTEQ

function GIB_STEST_VERLUSTEQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 38.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ATEST_VERLUSTEQ

function GIB_ATEST_VERLUSTEQ return REAL is
begin 
  return 25.0;
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SPEZKORREKTURLEISTUNG

function GIB_SPEZKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_K_SKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_K_SKORR := Array_4_R_Type'(0.9,1.0,1.0,1.0);
  return (9.0 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.11) * nth_elem(ANWENDUNGSBEREICH_K_SKORR, ERFAHRUNG.Rec_Elem_1) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ENTWURFKORREKTURLEISTUNG

function GIB_ENTWURFKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  ENTWURF_K_EKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  ENTWURF_K_EKORR := Array_4_R_Type'(0.9,1.0,1.0,1.0);
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.11) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(4.0 * FAKTOR,5.0 * FAKTOR * nth_elem(ENTWURF_K_EKORR, ERFAHRUNG.Rec_Elem_3),
0.0,0.0,0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MODULSPEZKORREKTURLEISTUNG

function GIB_MODULSPEZKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  ENTWURF_K_EKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  ENTWURF_K_EKORR := Array_4_R_Type'(0.9,1.0,1.0,1.0);
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.11) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(1.5 * FAKTOR,3.0 * FAKTOR,4.5 * FAKTOR * nth_elem(ENTWURF_K_EKORR, ERFAHRUNG.Rec_Elem_3),
0.0,0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CODEKORREKTURLEISTUNG

function GIB_CODEKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  PROGRAMMIERUNG_K_CKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  PROGRAMMIERUNG_K_CKORR := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.11) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(0.16 * FAKTOR,0.33 * FAKTOR,0.42 * FAKTOR,7.07 * FAKTOR * nth_elem(PROGRAMMIERUNG_K_CKORR, ERFAHRUNG.Rec_Elem_4),
0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MTESTKORREKTURLEISTUNG

function GIB_MTESTKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  PROGRAMMIERUNG_K_CKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  PROGRAMMIERUNG_K_CKORR := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.11) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(0.16 * FAKTOR,0.33 * FAKTOR,0.42 * FAKTOR,2.85 * FAKTOR * nth_elem(PROGRAMMIERUNG_K_CKORR, ERFAHRUNG.Rec_Elem_4),
0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ITESTKORREKTURLEISTUNG

function GIB_ITESTKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  PROGRAMMIERUNG_K_CKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  PROGRAMMIERUNG_K_CKORR := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.11) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(0.16 * FAKTOR,0.33 * FAKTOR,0.42 * FAKTOR,2.0 * FAKTOR * nth_elem(PROGRAMMIERUNG_K_CKORR, ERFAHRUNG.Rec_Elem_4),
0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_STESTKORREKTURLEISTUNG

function GIB_STESTKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  PROGRAMMIERUNG_K_CKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  PROGRAMMIERUNG_K_CKORR := Array_4_R_Type'(0.9,0.95,1.0,1.05);
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.11) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(0.16 * FAKTOR,0.33 * FAKTOR,0.42 * FAKTOR,1.88 * FAKTOR * nth_elem(PROGRAMMIERUNG_K_CKORR, ERFAHRUNG.Rec_Elem_4),
0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HANDBUCHKORREKTURLEISTUNG

function GIB_HANDBUCHKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.086) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(7.0 * FAKTOR,0.0,0.0,0.0,8.89 * FAKTOR);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_INTEGRATIONSKORREKTURLEISTUNG

function GIB_INTEGRATIONSKORREKTURLEISTUNG( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  ENTWURF_K_EKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  FAKTOR : REAL := 0.0;
begin 
  FAKTOR := 0.0;
  ENTWURF_K_EKORR := Array_4_R_Type'(0.9,1.0,1.0,1.0);
  FAKTOR := (power(gib_anzahl_entwickler - 0.75,-0.11) / 60.0 ) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,7);
  return Record_RRRRR_Type'(0.0,0.21 * FAKTOR * nth_elem(ENTWURF_K_EKORR, ERFAHRUNG.Rec_Elem_3),
0.26 * FAKTOR * nth_elem(ENTWURF_K_EKORR, ERFAHRUNG.Rec_Elem_3),0.0,0.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_FBQ

function GIB_FBQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return Record_RRRRR_Type is
declare 
  ANWENDUNGSBEREICH_FBQ_SKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  ENTWURF_FBQ_EKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  PROGRAMMIERUNG_FBQ_CKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
  A : REAL := 0.0;
begin 
  A := 0.0;
  ANWENDUNGSBEREICH_FBQ_SKORR := Array_4_R_Type'(0.8,0.9,1.0,1.0);
  ENTWURF_FBQ_EKORR := Array_4_R_Type'(0.8,0.9,1.0,1.0);
  PROGRAMMIERUNG_FBQ_CKORR := Array_4_R_Type'(0.95,0.98,1.0,1.0);
  A := gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,9);
  return Record_RRRRR_Type'(92.0 * A * nth_elem(ANWENDUNGSBEREICH_FBQ_SKORR, ERFAHRUNG.Rec_Elem_1),
90.0 * A * nth_elem(ENTWURF_FBQ_EKORR, ERFAHRUNG.Rec_Elem_3),90.0 * A * nth_elem(ENTWURF_FBQ_EKORR, ERFAHRUNG.Rec_Elem_3),
88.0 * A * nth_elem(PROGRAMMIERUNG_FBQ_CKORR, ERFAHRUNG.Rec_Elem_4),90.0);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_SPEZVBQ

function GIB_SPEZVBQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ANWENDUNGSBEREICH_VBQ_SKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ANWENDUNGSBEREICH_VBQ_SKORR := Array_4_R_Type'(0.7,0.9,1.0,1.0);
  return 95.0 * nth_elem(ANWENDUNGSBEREICH_VBQ_SKORR, ERFAHRUNG.Rec_Elem_1) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,8);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ENTWURFVBQ

function GIB_ENTWURFVBQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_VBQ_EKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_VBQ_EKORR := Array_4_R_Type'(0.7,0.9,1.0,1.0);
  return 95.0 * nth_elem(ENTWURF_VBQ_EKORR, ERFAHRUNG.Rec_Elem_3) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,8);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_MODULSPEZVBQ

function GIB_MODULSPEZVBQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  ENTWURF_VBQ_EKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  ENTWURF_VBQ_EKORR := Array_4_R_Type'(0.7,0.9,1.0,1.0);
  return 95.0 * nth_elem(ENTWURF_VBQ_EKORR, ERFAHRUNG.Rec_Elem_3) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,8);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_CODEVBQ

function GIB_CODEVBQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
declare 
  PROGRAMMIERUNG_VBQ_CKORR : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_VBQ_CKORR := Array_4_R_Type'(0.95,0.98,1.0,1.0);
  return 95.0 * nth_elem(PROGRAMMIERUNG_VBQ_CKORR, ERFAHRUNG.Rec_Elem_4) * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,8);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_HANDBUCHVBQ

function GIB_HANDBUCHVBQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 95.0 * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,8);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_INTEGRATIONSPRODUKTIVITAET

function GIB_INTEGRATIONSPRODUKTIVITAET( ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  PROGRAMMIERUNG_P_CODIEREN : Array_4_R_Type := Array_4_R_Type'(0.0,0.0,0.0,0.0);
begin 
  PROGRAMMIERUNG_P_CODIEREN := Array_4_R_Type'(0.8,0.9,1.0,1.05);
  return (0.4 / 60.0 ) * power(gib_anzahl_entwickler - 0.75,-0.251) * nth_elem(PROGRAMMIERUNG_P_CODIEREN, ERFAHRUNG.Rec_Elem_4);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_INTEGRATIONS_FEQ

function GIB_INTEGRATIONS_FEQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 20.0 * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,6);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_INTEGRATIONS_VEQ

function GIB_INTEGRATIONS_VEQ( ERFAHRUNG : in Record_IIIII_Type, NOTATIONSERF : in Set_Record_SI_Type, NOTATIONSNAME : in STRING, EFFEKTE : in Array_4_Record_RRRRRRRRR_Type ) return REAL is
begin 
  return 5.0 * gib_auswirkung(NOTATIONSERF,NOTATIONSNAME,EFFEKTE,5);
end function;
-----------------------------------------------------------------------------
-- FUNKTION : GIB_ZEITDRUCK_CODIEREN

function GIB_ZEITDRUCK_CODIEREN( ANZAHL_MODULE : in INTEGER, BIS_TERMIN : in DATE, ERFAHRUNG : in Record_IIIII_Type ) return REAL is
declare 
  VERFUEGBARE_ZEIT : REAL := 0.0;
  NOETIGE_ZEIT : REAL := 0.0;
  P : REAL := 0.0;
  AFP : REAL := 0.0;
begin 
  VERFUEGBARE_ZEIT := 0.0;
  NOETIGE_ZEIT := 0.0;
  P := 0.0;
  AFP := 0.0;
  if BIS_TERMIN > current_date then
  VERFUEGBARE_ZEIT := float(BIS_TERMIN - current_date);
else
  return 10000.0;
end if;
  P := gib_codierungsproduktivitaet(ERFAHRUNG);
  AFP := float(ANZAHL_MODULE) * (8.0 + 2.0 );
  NOETIGE_ZEIT := AFP / P;
  return NOETIGE_ZEIT / VERFUEGBARE_ZEIT;
end function;
-----------------------------------------------------------------------------
-- Regel: LASSE_MIT_KUNDEN_SPRECHEN

command LASSE_MIT_KUNDEN_SPRECHEN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN));
begin 
send_debug_message "LASSE_MIT_KUNDEN_SPRECHEN";
  create entity The_Attribute_Role_Of_SOLL_PRODUZIEREN_1 : BASE2_SOLL_PRODUZIEREN_Entity aka new_unique_id(BASE2_SOLL_PRODUZIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_PRODUZIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    Attribute_Role := The_Attribute_Role_Of_SOLL_PRODUZIEREN_1;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_SPEZIFIZIEREN

command LASSE_SPEZIFIZIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION));
begin 
send_debug_message "LASSE_SPEZIFIZIEREN";
  create entity The_Attribute_Role_Of_SOLL_PRODUZIEREN_2 : BASE2_SOLL_PRODUZIEREN_Entity aka new_unique_id(BASE2_SOLL_PRODUZIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_PRODUZIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_SPEZIFIKATION;
    Attribute_Role := The_Attribute_Role_Of_SOLL_PRODUZIEREN_2;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_SYSTEM_ENTWERFEN

command LASSE_SYSTEM_ENTWERFEN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF));
begin 
send_debug_message "LASSE_SYSTEM_ENTWERFEN";
  create entity The_Attribute_Role_Of_SOLL_PRODUZIEREN_3 : BASE2_SOLL_PRODUZIEREN_Entity aka new_unique_id(BASE2_SOLL_PRODUZIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_PRODUZIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_ENTWURF;
    Attribute_Role := The_Attribute_Role_Of_SOLL_PRODUZIEREN_3;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_MODULE_SPEZIFIZIEREN

command LASSE_MODULE_SPEZIFIZIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ));
begin 
send_debug_message "LASSE_MODULE_SPEZIFIZIEREN";
  create entity The_Attribute_Role_Of_SOLL_PRODUZIEREN_4 : BASE2_SOLL_PRODUZIEREN_Entity aka new_unique_id(BASE2_SOLL_PRODUZIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_PRODUZIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_SOLL_PRODUZIEREN_4;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_CODIEREN

command LASSE_CODIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DER_CODE : CODE;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE));
begin 
send_debug_message "LASSE_CODIEREN";
  create entity The_Attribute_Role_Of_SOLL_PRODUZIEREN_5 : BASE2_SOLL_PRODUZIEREN_Entity aka new_unique_id(BASE2_SOLL_PRODUZIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_PRODUZIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_SOLL_PRODUZIEREN_5;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_INTEGRIEREN

command LASSE_INTEGRIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DER_CODE : CODE;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE));
begin 
send_debug_message "LASSE_INTEGRIEREN";
  create entity The_Attribute_Role_Of_SOLL_INTEGRIEREN_6 : BASE2_SOLL_INTEGRIEREN_Entity aka new_unique_id(BASE2_SOLL_INTEGRIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_INTEGRIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_SOLL_INTEGRIEREN_6;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_HANDBUCH_ERSTELLEN

command LASSE_HANDBUCH_ERSTELLEN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DAS_HANDBUCH : HANDBUCH;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH));
begin 
send_debug_message "LASSE_HANDBUCH_ERSTELLEN";
  create entity The_Attribute_Role_Of_SOLL_PRODUZIEREN_7 : BASE2_SOLL_PRODUZIEREN_Entity aka new_unique_id(BASE2_SOLL_PRODUZIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_PRODUZIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DAS_HANDBUCH;
    Attribute_Role := The_Attribute_Role_Of_SOLL_PRODUZIEREN_7;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_MODULE_TESTEN

command LASSE_MODULE_TESTEN( EIN_ENTWICKLER : ENTWICKLER ) taking 30 is
structure 
  DER_CODE : CODE;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE));
begin 
send_debug_message "LASSE_MODULE_TESTEN";
  create entity The_Attribute_Role_Of_SOLL_MODULE_TESTEN_8 : BASE2_SOLL_MODULE_TESTEN_Entity aka new_unique_id(BASE2_SOLL_MODULE_TESTEN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_MODULE_TESTEN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_SOLL_MODULE_TESTEN_8;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_INTEGRATIONSTEST_DURCHFUEHREN

command LASSE_INTEGRATIONSTEST_DURCHFUEHREN( EIN_ENTWICKLER : ENTWICKLER ) taking 30 is
structure 
  DER_CODE : CODE;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE));
begin 
send_debug_message "LASSE_INTEGRATIONSTEST_DURCHFUEHREN";
  create entity The_Attribute_Role_Of_SOLL_SUBSYSTEME_TESTEN_9 : BASE2_SOLL_SUBSYSTEME_TESTEN_Entity aka new_unique_id(BASE2_SOLL_SUBSYSTEME_TESTEN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_SUBSYSTEME_TESTEN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_SOLL_SUBSYSTEME_TESTEN_9;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_SYSTEMTEST_DURCHFUEHREN

command LASSE_SYSTEMTEST_DURCHFUEHREN( EIN_ENTWICKLER : ENTWICKLER ) taking 30 is
structure 
  DER_CODE : CODE;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE));
begin 
send_debug_message "LASSE_SYSTEMTEST_DURCHFUEHREN";
  create entity The_Attribute_Role_Of_SOLL_SYSTEM_TESTEN_10 : BASE2_SOLL_SYSTEM_TESTEN_Entity aka new_unique_id(BASE2_SOLL_SYSTEM_TESTEN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_SYSTEM_TESTEN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_SOLL_SYSTEM_TESTEN_10;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_KUNDE_ABNAHMETEST_DURCHFUEHREN

command LASSE_KUNDE_ABNAHMETEST_DURCHFUEHREN taking 150 is
structure 
  DER_KUNDE : KUNDE;
  DER_CODE : CODE;
constraints 
  not exists(SOLL_ABNEHMEN(*,DER_KUNDE,DER_CODE));
begin 
send_debug_message "LASSE_KUNDE_ABNAHMETEST_DURCHFUEHREN";
  create entity The_Attribute_Role_Of_SOLL_ABNEHMEN_11 : BASE2_SOLL_ABNEHMEN_Entity aka new_unique_id(BASE2_SOLL_ABNEHMEN_Entity)
 with
    Dummy := 0;
  end create;
  create relation SOLL_ABNEHMEN
  with
    WER := DER_KUNDE;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_SOLL_ABNEHMEN_11;
  end create;
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_REVIEWS_STATTFINDEN

command LASSE_REVIEWS_STATTFINDEN( EIN_DOKUMENT : DOKUMENT, GUTACHTER_1 : ENTWICKLER, GUTACHTER_2 : ENTWICKLER ) taking 60 is
constraints 
  GUTACHTER_1.AUTOR_ID /= GUTACHTER_2.AUTOR_ID;
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,EIN_DOKUMENT,GUTACHTER_1,GUTACHTER_2));
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,EIN_DOKUMENT,GUTACHTER_2,GUTACHTER_1));
begin 
send_debug_message "LASSE_REVIEWS_STATTFINDEN";
  create entity The_Attribute_Role_Of_REVIEW_SOLL_STATTFINDEN_12 : BASE2_REVIEW_SOLL_STATTFINDEN_Entity aka new_unique_id(BASE2_REVIEW_SOLL_STATTFINDEN_Entity)
 with
    ANZAHL_X := 10000;
  end create;
  create relation REVIEW_SOLL_STATTFINDEN
  with
    PRUEFLING := EIN_DOKUMENT;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_SOLL_STATTFINDEN_12;
  end create;
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_REVIEWS_3_STATTFINDEN

command LASSE_REVIEWS_3_STATTFINDEN( EIN_DOKUMENT : DOKUMENT, GUTACHTER_1 : ENTWICKLER, GUTACHTER_2 : ENTWICKLER, GUTACHTER_3 : ENTWICKLER ) taking 75 is
constraints 
  GUTACHTER_1.AUTOR_ID /= GUTACHTER_2.AUTOR_ID;
  GUTACHTER_1.AUTOR_ID /= GUTACHTER_3.AUTOR_ID;
  GUTACHTER_2.AUTOR_ID /= GUTACHTER_3.AUTOR_ID;
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,EIN_DOKUMENT,GUTACHTER_1,GUTACHTER_2));
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,EIN_DOKUMENT,GUTACHTER_2,GUTACHTER_1));
begin 
send_debug_message "LASSE_REVIEWS_3_STATTFINDEN";
  create entity The_Attribute_Role_Of_REVIEW_3_SOLL_STATTFINDEN_13 : BASE2_REVIEW_3_SOLL_STATTFINDEN_Entity aka new_unique_id(BASE2_REVIEW_3_SOLL_STATTFINDEN_Entity)
 with
    ANZAHL_X := 10000;
  end create;
  create relation REVIEW_3_SOLL_STATTFINDEN
  with
    PRUEFLING := EIN_DOKUMENT;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    GUTACHTER3 := GUTACHTER_3;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_3_SOLL_STATTFINDEN_13;
  end create;
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_SPEZREVIEWS_MIT_KUNDE_STATTFINDEN

command LASSE_SPEZREVIEWS_MIT_KUNDE_STATTFINDEN( GUTACHTER_1 : ENTWICKLER, GUTACHTER_2 : ENTWICKLER ) taking 75 is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
constraints 
  GUTACHTER_1.AUTOR_ID /= GUTACHTER_2.AUTOR_ID;
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2));
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_2,GUTACHTER_1));
begin 
send_debug_message "LASSE_SPEZREVIEWS_MIT_KUNDE_STATTFINDEN";
  create entity The_Attribute_Role_Of_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_14 : BASE2_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_Entity aka new_unique_id(BASE2_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_Entity)
 with
    ANZAHL_X := 10000;
  end create;
  create relation REVIEW_MIT_KUNDE_SOLL_STATTFINDEN
  with
    PRUEFLING := DIE_SPEZIFIKATION;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_14;
  end create;
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_HANDBUCHREVIEWS_MIT_KUNDE_STATTFINDEN

command LASSE_HANDBUCHREVIEWS_MIT_KUNDE_STATTFINDEN( GUTACHTER_1 : ENTWICKLER, GUTACHTER_2 : ENTWICKLER ) taking 75 is
structure 
  DAS_HANDBUCH : HANDBUCH;
constraints 
  GUTACHTER_1.AUTOR_ID /= GUTACHTER_2.AUTOR_ID;
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2));
  not exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_2,GUTACHTER_1));
begin 
send_debug_message "LASSE_HANDBUCHREVIEWS_MIT_KUNDE_STATTFINDEN";
  create entity The_Attribute_Role_Of_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_15 : BASE2_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_Entity aka new_unique_id(BASE2_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_Entity)
 with
    ANZAHL_X := 10000;
  end create;
  create relation REVIEW_MIT_KUNDE_SOLL_STATTFINDEN
  with
    PRUEFLING := DAS_HANDBUCH;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_MIT_KUNDE_SOLL_STATTFINDEN_15;
  end create;
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_SPEZIFIKATION_NACH_REVIEW_KORRIGIEREN

command LASSE_SPEZIFIKATION_NACH_REVIEW_KORRIGIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT));
  not exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT));
begin 
send_debug_message "LASSE_SPEZIFIKATION_NACH_REVIEW_KORRIGIEREN";
  create entity The_Attribute_Role_Of_SOLL_KORRIGIEREN_16 : BASE2_SOLL_KORRIGIEREN_Entity aka new_unique_id(BASE2_SOLL_KORRIGIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_KORRIGIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_SPEZIFIKATION;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_KORRIGIEREN_16;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_SYSTEMENTWURF_NACH_REVIEW_KORRIGIEREN

command LASSE_SYSTEMENTWURF_NACH_REVIEW_KORRIGIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT));
  not exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT));
begin 
send_debug_message "LASSE_SYSTEMENTWURF_NACH_REVIEW_KORRIGIEREN";
  create entity The_Attribute_Role_Of_SOLL_KORRIGIEREN_17 : BASE2_SOLL_KORRIGIEREN_Entity aka new_unique_id(BASE2_SOLL_KORRIGIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_KORRIGIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_ENTWURF;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_KORRIGIEREN_17;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_MODULSPEZ_NACH_REVIEW_KORRIGIEREN

command LASSE_MODULSPEZ_NACH_REVIEW_KORRIGIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT));
  not exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT));
begin 
send_debug_message "LASSE_MODULSPEZ_NACH_REVIEW_KORRIGIEREN";
  create entity The_Attribute_Role_Of_SOLL_KORRIGIEREN_18 : BASE2_SOLL_KORRIGIEREN_Entity aka new_unique_id(BASE2_SOLL_KORRIGIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_KORRIGIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_MODULSPEZ;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_KORRIGIEREN_18;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_CODE_NACH_REVIEW_KORRIGIEREN

command LASSE_CODE_NACH_REVIEW_KORRIGIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DER_CODE : CODE;
  DER_BERICHT : CODEREVIEWBERICHT;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT));
  not exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT));
begin 
send_debug_message "LASSE_CODE_NACH_REVIEW_KORRIGIEREN";
  create entity The_Attribute_Role_Of_SOLL_KORRIGIEREN_19 : BASE2_SOLL_KORRIGIEREN_Entity aka new_unique_id(BASE2_SOLL_KORRIGIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_KORRIGIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_KORRIGIEREN_19;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_HANDBUCH_NACH_REVIEW_KORRIGIEREN

command LASSE_HANDBUCH_NACH_REVIEW_KORRIGIEREN( EIN_ENTWICKLER : ENTWICKLER ) taking 60 is
structure 
  DAS_HANDBUCH : HANDBUCH;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT));
  not exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT));
begin 
send_debug_message "LASSE_HANDBUCH_NACH_REVIEW_KORRIGIEREN";
  create entity The_Attribute_Role_Of_SOLL_KORRIGIEREN_20 : BASE2_SOLL_KORRIGIEREN_Entity aka new_unique_id(BASE2_SOLL_KORRIGIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_KORRIGIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DAS_HANDBUCH;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_KORRIGIEREN_20;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_CODE_NACH_TEST_KORRIGIEREN

command LASSE_CODE_NACH_TEST_KORRIGIEREN( EIN_ENTWICKLER : ENTWICKLER, EIN_BERICHT : TESTBERICHT ) taking 60 is
structure 
  DER_CODE : CODE;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,EIN_BERICHT));
  not exists(SOLL_ALLES_KORRIGIEREN(*,*,*,EIN_BERICHT));
begin 
send_debug_message "LASSE_CODE_NACH_TEST_KORRIGIEREN";
  create entity The_Attribute_Role_Of_SOLL_KORRIGIEREN_21 : BASE2_SOLL_KORRIGIEREN_Entity aka new_unique_id(BASE2_SOLL_KORRIGIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_KORRIGIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := EIN_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_KORRIGIEREN_21;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_ALLE_DOKUMENTE_KORRIGIEREN

command LASSE_ALLE_DOKUMENTE_KORRIGIEREN( EIN_ENTWICKLER : ENTWICKLER, EIN_BERICHT : PRUEFBERICHT ) taking 75 is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  K : KAUSALITAETSFLUSS;
constraints 
  not exists(SOLL_KORRIGIEREN(*,*,*,EIN_BERICHT));
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,EIN_BERICHT));
begin 
send_debug_message "LASSE_ALLE_DOKUMENTE_KORRIGIEREN";
  create entity The_Attribute_Role_Of_SOLL_ALLES_KORRIGIEREN_22 : BASE2_SOLL_ALLES_KORRIGIEREN_Entity aka new_unique_id(BASE2_SOLL_ALLES_KORRIGIEREN_Entity)
 with
    ANZAHL_X := 10000;
    ZEITDRUCK := 1.0;
    STARTDATUM := current_date;
  end create;
  create relation SOLL_ALLES_KORRIGIEREN
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    AUFGRUND := EIN_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_ALLES_KORRIGIEREN_22;
  end create;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@lasse_xxx");
end command;
-----------------------------------------------------------------------------
-- Regel: STELLE_VERBRAUCHTE_RESSOURCEN_FEST

command STELLE_VERBRAUCHTE_RESSOURCEN_FEST taking 30 is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  ZIELE : PROJEKTZIELE;
declare 
  ANZAHL_TAGE : INTEGER := 0;
  AUFWAND : REAL := 0.0;
  GERUNDET : REAL := 0.0;
  GERUNDET1 : REAL := 0.0;
begin 
send_debug_message "STELLE_VERBRAUCHTE_RESSOURCEN_FEST";
  ANZAHL_TAGE := 0;
  AUFWAND := 0.0;
  GERUNDET := 0.0;
  GERUNDET1 := 0.0;
  ANZAHL_TAGE := ((current_date - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440;
  AUFWAND := (DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + DER_ZUSTAND.AUFWAND_TESTPHASE + DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG ) / 132.0;
  GERUNDET := float(round(AUFWAND * 100.0)) / 100.0;
  GERUNDET1 := float(round(DER_ZUSTAND.KOSTEN * 10.0)) / 10.0;
  send_player_message VERBRAUCHTE_RESSOURCEN_AUSGEBEN(ANZAHL_TAGE,GERUNDET,GERUNDET1,ZIELE.SOLL_TERMIN,ZIELE.SOLL_KOSTEN);
end command;
-----------------------------------------------------------------------------
-- Regel: INSPIZIERE_SPEZIFIKATION

command INSPIZIERE_SPEZIFIKATION taking 120 is
structure 
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
declare 
  UNTERER_WERT : REAL := 0.0;
  OBERER_WERT : REAL := 0.0;
  ERMITTELTE_AFP : REAL := 0.0;
  MAXIMALE_AFP : REAL := 0.0;
  UNTERE_GRENZE : INTEGER := 0;
  OBERE_GRENZE : INTEGER := 0;
  GERUNDET : REAL := 0.0;
begin 
send_debug_message "INSPIZIERE_SPEZIFIKATION";
  UNTERER_WERT := 0.0;
  OBERER_WERT := 0.0;
  ERMITTELTE_AFP := 0.0;
  MAXIMALE_AFP := 0.0;
  UNTERE_GRENZE := 0;
  OBERE_GRENZE := 0;
  GERUNDET := 0.0;
  ERMITTELTE_AFP := gib_afp(DIE_SPEZIFIKATION.INHALT);
  MAXIMALE_AFP := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  UNTERER_WERT := ERMITTELTE_AFP - random(20.0);
  OBERER_WERT := ERMITTELTE_AFP + random(20.0);
  UNTERER_WERT := (UNTERER_WERT / MAXIMALE_AFP ) * 100.0;
  OBERER_WERT := (OBERER_WERT / MAXIMALE_AFP ) * 100.0;
  if UNTERER_WERT < 0.0 then
  UNTERER_WERT := 0.0;
end if;
  if OBERER_WERT > 100.0 then
  OBERER_WERT := 100.0;
end if;
  UNTERE_GRENZE := round(UNTERER_WERT);
  OBERE_GRENZE := round(OBERER_WERT);
  if DIE_SPEZIFIKATION.SEITEN = 0 then
  send_player_message NULL_SEITEN_VON_DOKUMENT(DIE_SPEZIFIKATION);
else
  send_player_message ANZAHL_SEITEN_VON_DOKUMENT(DIE_SPEZIFIKATION,DIE_SPEZIFIKATION.SEITEN,UNTERE_GRENZE,OBERE_GRENZE);
end if;
  GERUNDET := float(round(DIE_SPEZIFIKATION.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_SPEZ_DOK(GERUNDET,trunc(DIE_SPEZIFIKATION.ANZ_AF),trunc(DIE_SPEZIFIKATION.ANZ_FEHLER_GES));
end command;
-----------------------------------------------------------------------------
-- Regel: INSPIZIERE_SYSTEMENTWURF

command INSPIZIERE_SYSTEMENTWURF taking 180 is
structure 
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DER_ENTWURF : SYSTEMENTWURF;
declare 
  UNTERER_WERT : REAL := 0.0;
  OBERER_WERT : REAL := 0.0;
  ERMITTELTE_AFP : REAL := 0.0;
  MAXIMALE_AFP : REAL := 0.0;
  UNTERE_GRENZE : INTEGER := 0;
  OBERE_GRENZE : INTEGER := 0;
  GERUNDET : REAL := 0.0;
begin 
send_debug_message "INSPIZIERE_SYSTEMENTWURF";
  UNTERER_WERT := 0.0;
  OBERER_WERT := 0.0;
  ERMITTELTE_AFP := 0.0;
  MAXIMALE_AFP := 0.0;
  UNTERE_GRENZE := 0;
  OBERE_GRENZE := 0;
  GERUNDET := 0.0;
  ERMITTELTE_AFP := gib_afp(DER_ENTWURF.INHALT);
  MAXIMALE_AFP := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  UNTERER_WERT := ERMITTELTE_AFP - random(20.0);
  OBERER_WERT := ERMITTELTE_AFP + random(20.0);
  UNTERER_WERT := (UNTERER_WERT / MAXIMALE_AFP ) * 100.0;
  OBERER_WERT := (OBERER_WERT / MAXIMALE_AFP ) * 100.0;
  if UNTERER_WERT < 0.0 then
  UNTERER_WERT := 0.0;
end if;
  if OBERER_WERT > 100.0 then
  OBERER_WERT := 100.0;
end if;
  UNTERE_GRENZE := round(UNTERER_WERT);
  OBERE_GRENZE := round(OBERER_WERT);
  if DER_ENTWURF.SEITEN = 0 then
  send_player_message NULL_SEITEN_VON_DOKUMENT(DER_ENTWURF);
else
  send_player_message ANZAHL_SEITEN_VON_DOKUMENT(DER_ENTWURF,DER_ENTWURF.SEITEN,UNTERE_GRENZE,OBERE_GRENZE);
end if;
  GERUNDET := float(round(DER_ENTWURF.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_ENTW_DOK(GERUNDET,trunc(DER_ENTWURF.ANZ_AF),trunc(DER_ENTWURF.ANZ_GF),trunc(DER_ENTWURF.ANZ_FEHLER_GES));
end command;
-----------------------------------------------------------------------------
-- Regel: INSPIZIERE_MODULSPEZIFIKATION

command INSPIZIERE_MODULSPEZIFIKATION taking 180 is
structure 
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
declare 
  UNTERER_WERT : REAL := 0.0;
  OBERER_WERT : REAL := 0.0;
  ERMITTELTE_AFP : REAL := 0.0;
  MAXIMALE_AFP : REAL := 0.0;
  UNTERE_GRENZE : INTEGER := 0;
  OBERE_GRENZE : INTEGER := 0;
  GERUNDET : REAL := 0.0;
begin 
send_debug_message "INSPIZIERE_MODULSPEZIFIKATION";
  UNTERER_WERT := 0.0;
  OBERER_WERT := 0.0;
  ERMITTELTE_AFP := 0.0;
  MAXIMALE_AFP := 0.0;
  UNTERE_GRENZE := 0;
  OBERE_GRENZE := 0;
  GERUNDET := 0.0;
  ERMITTELTE_AFP := gib_afp(DIE_MODULSPEZ.INHALT);
  MAXIMALE_AFP := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  UNTERER_WERT := ERMITTELTE_AFP - random(20.0);
  OBERER_WERT := ERMITTELTE_AFP + random(20.0);
  UNTERER_WERT := (UNTERER_WERT / MAXIMALE_AFP ) * 100.0;
  OBERER_WERT := (OBERER_WERT / MAXIMALE_AFP ) * 100.0;
  if UNTERER_WERT < 0.0 then
  UNTERER_WERT := 0.0;
end if;
  if OBERER_WERT > 100.0 then
  OBERER_WERT := 100.0;
end if;
  UNTERE_GRENZE := round(UNTERER_WERT);
  OBERE_GRENZE := round(OBERER_WERT);
  if DIE_MODULSPEZ.SEITEN = 0 then
  send_player_message NULL_SEITEN_VON_DOKUMENT(DIE_MODULSPEZ);
else
  send_player_message ANZAHL_SEITEN_VON_DOKUMENT(DIE_MODULSPEZ,DIE_MODULSPEZ.SEITEN,UNTERE_GRENZE,OBERE_GRENZE);
end if;
  GERUNDET := float(round(DIE_MODULSPEZ.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_MSPEZ_DOK(GERUNDET,trunc(DIE_MODULSPEZ.ANZ_AF),trunc(DIE_MODULSPEZ.ANZ_GF),trunc(DIE_MODULSPEZ.ANZ_FF),trunc(DIE_MODULSPEZ.ANZ_FEHLER_GES));
end command;
-----------------------------------------------------------------------------
-- Regel: INSPIZIERE_HANDBUCH

command INSPIZIERE_HANDBUCH taking 120 is
structure 
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DAS_HANDBUCH : HANDBUCH;
declare 
  UNTERER_WERT : REAL := 0.0;
  OBERER_WERT : REAL := 0.0;
  ERMITTELTE_AFP : REAL := 0.0;
  MAXIMALE_AFP : REAL := 0.0;
  UNTERE_GRENZE : INTEGER := 0;
  OBERE_GRENZE : INTEGER := 0;
  GERUNDET : REAL := 0.0;
begin 
send_debug_message "INSPIZIERE_HANDBUCH";
  UNTERER_WERT := 0.0;
  OBERER_WERT := 0.0;
  ERMITTELTE_AFP := 0.0;
  MAXIMALE_AFP := 0.0;
  UNTERE_GRENZE := 0;
  OBERE_GRENZE := 0;
  GERUNDET := 0.0;
  ERMITTELTE_AFP := gib_afp(DAS_HANDBUCH.INHALT);
  MAXIMALE_AFP := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  UNTERER_WERT := ERMITTELTE_AFP - random(20.0);
  OBERER_WERT := ERMITTELTE_AFP + random(20.0);
  UNTERER_WERT := (UNTERER_WERT / MAXIMALE_AFP ) * 100.0;
  OBERER_WERT := (OBERER_WERT / MAXIMALE_AFP ) * 100.0;
  if UNTERER_WERT < 0.0 then
  UNTERER_WERT := 0.0;
end if;
  if OBERER_WERT > 100.0 then
  OBERER_WERT := 100.0;
end if;
  UNTERE_GRENZE := round(UNTERER_WERT);
  OBERE_GRENZE := round(OBERER_WERT);
  if DAS_HANDBUCH.SEITEN = 0 then
  send_player_message NULL_SEITEN_VON_DOKUMENT(DAS_HANDBUCH);
else
  send_player_message ANZAHL_SEITEN_VON_DOKUMENT(DAS_HANDBUCH,DAS_HANDBUCH.SEITEN,UNTERE_GRENZE,OBERE_GRENZE);
end if;
  GERUNDET := float(round(DAS_HANDBUCH.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_HB_DOK(GERUNDET,trunc(DAS_HANDBUCH.ANZ_AF),trunc(DAS_HANDBUCH.ANZ_HF),trunc(DAS_HANDBUCH.ANZ_FEHLER_GES));
end command;
-----------------------------------------------------------------------------
-- Regel: INSPIZIERE_CODE

command INSPIZIERE_CODE taking 240 is
structure 
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DER_CODE : CODE;
declare 
  UNTERER_WERT : REAL := 0.0;
  OBERER_WERT : REAL := 0.0;
  ERMITTELTE_AFP : REAL := 0.0;
  MAXIMALE_AFP : REAL := 0.0;
  UNTERE_GRENZE : INTEGER := 0;
  OBERE_GRENZE : INTEGER := 0;
  GERUNDET : REAL := 0.0;
begin 
send_debug_message "INSPIZIERE_CODE";
  UNTERER_WERT := 0.0;
  OBERER_WERT := 0.0;
  ERMITTELTE_AFP := 0.0;
  MAXIMALE_AFP := 0.0;
  UNTERE_GRENZE := 0;
  OBERE_GRENZE := 0;
  GERUNDET := 0.0;
  ERMITTELTE_AFP := gib_afp(DER_CODE.INHALT);
  MAXIMALE_AFP := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  UNTERER_WERT := ERMITTELTE_AFP - random(20.0);
  OBERER_WERT := ERMITTELTE_AFP + random(20.0);
  UNTERER_WERT := (UNTERER_WERT / MAXIMALE_AFP ) * 100.0;
  OBERER_WERT := (OBERER_WERT / MAXIMALE_AFP ) * 100.0;
  if UNTERER_WERT < 0.0 then
  UNTERER_WERT := 0.0;
end if;
  if OBERER_WERT > 100.0 then
  OBERER_WERT := 100.0;
end if;
  UNTERE_GRENZE := round(UNTERER_WERT);
  OBERE_GRENZE := round(OBERER_WERT);
  if DER_CODE.ZEILEN = 0 then
  send_player_message NULL_ZEILEN_CODE;
else
  send_player_message ANZAHL_ZEILEN_DES_CODES(DER_CODE.ZEILEN,DER_CODE.MODULE,UNTERE_GRENZE,OBERE_GRENZE);
end if;
  GERUNDET := float(round(DER_CODE.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_CODE_DOK(GERUNDET,trunc(DER_CODE.ANZ_AF),trunc(DER_CODE.ANZ_GF),trunc(DER_CODE.ANZ_FF),trunc(DER_CODE.ANZ_IF),trunc(DER_CODE.ANZ_FEHLER_GES));
end command;
-----------------------------------------------------------------------------
-- Regel: INSPIZIERE_PRUEFBERICHT

command INSPIZIERE_PRUEFBERICHT( EIN_BERICHT : PRUEFBERICHT ) taking 60 is
declare 
  GERUNDET : REAL := 0.0;
  GERUNDET1 : INTEGER := 0;
  GERUNDET1V : REAL := 0.0;
begin 
send_debug_message "INSPIZIERE_PRUEFBERICHT";
  GERUNDET := 0.0;
  GERUNDET1 := 0;
  GERUNDET1V := 0.0;
  if (EIN_BERICHT.IST_LEER = true ) and (EIN_BERICHT.NUMMER = 1 ) then
  send_player_message KEINE_PRUEFUNG_STATTGEFUNDEN;
else
  GERUNDET := float(round(EIN_BERICHT.VERLUSTE * 10.0)) / 10.0;
  send_player_message BEFUNDE_IN_PRUEFBERICHT(EIN_BERICHT,trunc(EIN_BERICHT.FEHLER + 0.9),GERUNDET);
  if (EIN_BERICHT.IST_LEER = true ) and (EIN_BERICHT.NUMMER > 1 ) then
  GERUNDET1 := trunc(nth_elem(EIN_BERICHT.ANZ_FEHLER_PRO_PRF, EIN_BERICHT.NUMMER - 1) + 0.9);
  GERUNDET1V := float(round(nth_elem(EIN_BERICHT.ANZ_VERLUSTE_PRO_PRF, EIN_BERICHT.NUMMER - 1) * 10.0)) / 10.0;
  send_player_message FEHLER_UND_VERLUSTE_IN_PRUEFBERICHT_OHNE_RESTFEHLER(EIN_BERICHT,GERUNDET1,GERUNDET1V);
end if;
  if (EIN_BERICHT.IST_LEER = false ) then
  GERUNDET1 := trunc(nth_elem(EIN_BERICHT.ANZ_FEHLER_PRO_PRF, EIN_BERICHT.NUMMER) + 0.9);
  GERUNDET1V := float(round(nth_elem(EIN_BERICHT.ANZ_VERLUSTE_PRO_PRF, EIN_BERICHT.NUMMER) * 10.0)) / 10.0;
  send_player_message FEHLER_UND_VERLUSTE_IN_PRUEFBERICHT_MIT_RESTFEHLER(EIN_BERICHT,GERUNDET1,GERUNDET1V);
end if;
end if;
end command;
-----------------------------------------------------------------------------
-- Regel: ZEIGE_VERFUEGBARE_ENTWICKLER

command ZEIGE_VERFUEGBARE_ENTWICKLER taking 15 is
structure 
  K : KAUSALITAETSFLUSS;
begin 
send_debug_message "ZEIGE_VERFUEGBARE_ENTWICKLER";
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@zeige_verfuegbare_Entwickler");
end command;
-----------------------------------------------------------------------------
-- Regel: ZEIGE_ZUGETEILTE_MITARBEITER

command ZEIGE_ZUGETEILTE_MITARBEITER taking 15 is
structure 
  K : KAUSALITAETSFLUSS;
begin 
send_debug_message "ZEIGE_ZUGETEILTE_MITARBEITER";
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"@zeige_zugeteilte_Entwickler");
end command;
-----------------------------------------------------------------------------
-- Regel: ERFRAGE_INFORMATIONEN_ZU_ENTWICKLER

command ERFRAGE_INFORMATIONEN_ZU_ENTWICKLER( EIN_ENTWICKLER : ENTWICKLER ) taking 30 is
declare 
  HOHE_E : STRING := " ";
  MITTLERE_E : STRING := " ";
  GERINGE_E : STRING := " ";
  I : INTEGER := 0;
  S : STRING := " ";
  E : INTEGER := 0;
  NE : Record_SI_Type := Record_SI_Type'(" ",0);
  NOTATIONSERF : Set_Record_SI_Type := Set_Record_SI_Type'();
  HB_STRING : STRING := " ";
begin 
send_debug_message "ERFRAGE_INFORMATIONEN_ZU_ENTWICKLER";
  HOHE_E := " ";
  MITTLERE_E := " ";
  GERINGE_E := " ";
  I := 0;
  S := " ";
  E := 0;
  NE := Record_SI_Type'(" ",0);
  NOTATIONSERF := Set_Record_SI_Type'();
  HB_STRING := " ";
  HB_STRING := "manual";
  NOTATIONSERF := EIN_ENTWICKLER.NOTATIONSERFAHRUNG;
  HOHE_E := "";
  MITTLERE_E := "";
  GERINGE_E := "";
  I := 1;
  while (I <= 5 ) or not ( length(NOTATIONSERF) = 0 ) loop
  if I = 1 then
  S := "in the application domain";
  E := EIN_ENTWICKLER.ERFAHRUNG.Rec_Elem_1;
else
  if I = 2 then
  S := "in specifying";
  E := EIN_ENTWICKLER.ERFAHRUNG.Rec_Elem_2;
else
  if I = 3 then
  S := "in design";
  E := EIN_ENTWICKLER.ERFAHRUNG.Rec_Elem_3;
else
  if I = 4 then
  S := "in programming";
  E := EIN_ENTWICKLER.ERFAHRUNG.Rec_Elem_4;
else
  if I = 5 then
  S := "in reviewing";
  E := EIN_ENTWICKLER.ERFAHRUNG.Rec_Elem_5;
else
  NE := f_get_Set_Record_SI_Type(NOTATIONSERF);
  if is_substring(to_uppercase(NE.Rec_Elem_1),to_uppercase(HB_STRING)) /= 0 then
  S := "with " & NE.Rec_Elem_1;
  E := NE.Rec_Elem_2;
else
  S := "";
end if;
end if;
end if;
end if;
end if;
end if;
  if S /= "" then
  if E = 4 then
  HOHE_E := gib_aufzaehlstring(HOHE_E,S);
else
  if E = 3 then
  MITTLERE_E := gib_aufzaehlstring(MITTLERE_E,S);
else
  if E = 2 then
  GERINGE_E := gib_aufzaehlstring(GERINGE_E,S);
end if;
end if;
end if;
end if;
  I := I + 1;
end loop;
  if HOHE_E = "" then
  HOHE_E := "none";
end if;
  if MITTLERE_E = "" then
  MITTLERE_E := "with nothing";
end if;
  if GERINGE_E = "" then
  GERINGE_E := "in no respect at all";
end if;
  HOHE_E := HOHE_E & ".";
  MITTLERE_E := MITTLERE_E & ".";
  GERINGE_E := GERINGE_E & ".";
  send_player_message INFORMATIONEN_ZU_ENTWICKLER_AUSGEBEN(EIN_ENTWICKLER,EIN_ENTWICKLER.KOSTEN,HOHE_E,MITTLERE_E,GERINGE_E);
end command;
-----------------------------------------------------------------------------
-- Regel: ERFRAGE_TAETIGKEIT_VON_ENTWICKLER

command ERFRAGE_TAETIGKEIT_VON_ENTWICKLER( EIN_ENTWICKLER : ENTWICKLER ) taking 30 is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
constraints 
  EIN_ENTWICKLER.IST_EINGESTELLT;
begin 
send_debug_message "ERFRAGE_TAETIGKEIT_VON_ENTWICKLER";
  if not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*)) and not exists_extended(BEGUTACHTET(*,EIN_ENTWICKLER,*)) then
  send_player_message ENTWICKLER_MACHT_NICHTS(EIN_ENTWICKLER);
end if;
  if (exists_extended(REVIEW_SOLL_STATTFINDEN(*,*,EIN_ENTWICKLER,*)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,*,*,EIN_ENTWICKLER)) or exists_extended(REVIEW_3_SOLL_STATTFINDEN(*,*,*,*,EIN_ENTWICKLER)) ) and not exists_extended(BEGUTACHTET(*,EIN_ENTWICKLER,*)) then
  send_player_message ENTWICKLER_WIRD_BEGUTACHTEN(EIN_ENTWICKLER);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_NOTIZEN)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DIE_NOTIZEN);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_ENTWURF)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) and not exists(INTEGRIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_WIRD_INTEGR(EIN_ENTWICKLER);
end if;
  if (exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) ) and not exists_extended(TESTET(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_WIRD_TESTEN(EIN_ENTWICKLER);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_ENTWURF,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_CODE,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,*,*)) and not exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,*,*)) then
  send_player_message ENTWICKLER_WIRD_ALLES_KORRIGIEREN(EIN_ENTWICKLER);
end if;
  if exists_extended(BEGUTACHTET(*,EIN_ENTWICKLER,*)) then
  send_player_message ENTWICKLER_BEGUTACHTET(EIN_ENTWICKLER);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_NOTIZEN)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DIE_NOTIZEN);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_ENTWURF)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(INTEGRIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_INTEGR(EIN_ENTWICKLER);
end if;
  if exists_extended(TESTET(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_TESTET(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_ENTWURF,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_CODE,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DER_ENTWURF,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DER_CODE,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
end command;
-----------------------------------------------------------------------------
-- Regel: ERFRAGE_ALLE_TAETIGKEITEN

command ERFRAGE_ALLE_TAETIGKEITEN( EIN_ENTWICKLER : ENTWICKLER ) taking 120 is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST_IN : BASE2_ERFASST_ZEIT_Entity;
  ERFASST_IN : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST_IN,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  EIN_ENTWICKLER.IST_EINGESTELLT;
declare 
  GESAMTAUFWAND_ERSTELLEN : REAL := 0.0;
  GESAMTAUFWAND_KORRIGIEREN : REAL := 0.0;
  GESAMTAUFWAND_REVIEW : REAL := 0.0;
  GESAMTAUFWAND_TEST : REAL := 0.0;
begin 
send_debug_message "ERFRAGE_ALLE_TAETIGKEITEN";
  GESAMTAUFWAND_ERSTELLEN := 0.0;
  GESAMTAUFWAND_KORRIGIEREN := 0.0;
  GESAMTAUFWAND_REVIEW := 0.0;
  GESAMTAUFWAND_TEST := 0.0;
  GESAMTAUFWAND_ERSTELLEN := SEIN_LOG.ANALYSE.Rec_Elem_1 + SEIN_LOG.SPEZIFIKATION.Rec_Elem_1 + SEIN_LOG.GROBENTWURF.Rec_Elem_1 + SEIN_LOG.FEINENTWURF.Rec_Elem_1 + SEIN_LOG.CODE.Rec_Elem_1 + SEIN_LOG.HANDBUCH.Rec_Elem_1;
  if GESAMTAUFWAND_ERSTELLEN > 0.0 then
  send_player_message ENTWICKLER_HAT_ERSTELLT(EIN_ENTWICKLER);
  if SEIN_LOG.ANALYSE.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_ERSTELLUNGSAUFWAND(DIE_NOTIZEN,round(SEIN_LOG.ANALYSE.Rec_Elem_1));
end if;
  if SEIN_LOG.SPEZIFIKATION.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_ERSTELLUNGSAUFWAND(DIE_SPEZIFIKATION,round(SEIN_LOG.SPEZIFIKATION.Rec_Elem_1));
end if;
  if SEIN_LOG.GROBENTWURF.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_ERSTELLUNGSAUFWAND(DER_ENTWURF,round(SEIN_LOG.GROBENTWURF.Rec_Elem_1));
end if;
  if SEIN_LOG.FEINENTWURF.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_ERSTELLUNGSAUFWAND(DIE_MODULSPEZ,round(SEIN_LOG.FEINENTWURF.Rec_Elem_1));
end if;
  if SEIN_LOG.CODE.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_ERSTELLUNGSAUFWAND(DER_CODE,round(SEIN_LOG.CODE.Rec_Elem_1));
end if;
  if SEIN_LOG.HANDBUCH.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_ERSTELLUNGSAUFWAND(DAS_HANDBUCH,round(SEIN_LOG.HANDBUCH.Rec_Elem_1));
end if;
end if;
  GESAMTAUFWAND_KORRIGIEREN := SEIN_LOG.ANALYSE_K.Rec_Elem_1 + SEIN_LOG.SPEZ_K.Rec_Elem_1 + SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + SEIN_LOG.CODE_K.Rec_Elem_1 + SEIN_LOG.HANDBUCH_K.Rec_Elem_1;
  if GESAMTAUFWAND_KORRIGIEREN > 0.0 then
  send_player_message ENTWICKLER_HAT_KORRIGIERT(EIN_ENTWICKLER);
  if SEIN_LOG.ANALYSE_K.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_KORREKTURAUFWAND(DIE_NOTIZEN,round(SEIN_LOG.ANALYSE_K.Rec_Elem_1));
end if;
  if SEIN_LOG.SPEZ_K.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_KORREKTURAUFWAND(DIE_SPEZIFIKATION,round(SEIN_LOG.SPEZ_K.Rec_Elem_1));
end if;
  if SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_KORREKTURAUFWAND(DER_ENTWURF,round(SEIN_LOG.GROBENTWURF_K.Rec_Elem_1));
end if;
  if SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_KORREKTURAUFWAND(DIE_MODULSPEZ,round(SEIN_LOG.FEINENTWURF_K.Rec_Elem_1));
end if;
  if SEIN_LOG.CODE_K.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_KORREKTURAUFWAND(DER_CODE,round(SEIN_LOG.CODE_K.Rec_Elem_1));
end if;
  if SEIN_LOG.HANDBUCH_K.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_KORREKTURAUFWAND(DAS_HANDBUCH,round(SEIN_LOG.HANDBUCH_K.Rec_Elem_1));
end if;
end if;
  GESAMTAUFWAND_REVIEW := SEIN_LOG.SPEZREVIEW.Rec_Elem_1 + SEIN_LOG.GROBENTWURFSREVIEW.Rec_Elem_1 + SEIN_LOG.FEINENTWURFSREVIEW.Rec_Elem_1 + SEIN_LOG.CODEREVIEW.Rec_Elem_1 + SEIN_LOG.HANDBUCHREVIEW.Rec_Elem_1;
  if GESAMTAUFWAND_REVIEW > 0.0 then
  send_player_message ENTWICKLER_HAT_BEGUTACHTET(EIN_ENTWICKLER);
  if SEIN_LOG.SPEZREVIEW.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_REVIEWAUFWAND(DIE_SPEZIFIKATION,round(SEIN_LOG.SPEZREVIEW.Rec_Elem_1));
end if;
  if SEIN_LOG.GROBENTWURFSREVIEW.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_REVIEWAUFWAND(DER_ENTWURF,round(SEIN_LOG.GROBENTWURFSREVIEW.Rec_Elem_1));
end if;
  if SEIN_LOG.FEINENTWURFSREVIEW.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_REVIEWAUFWAND(DIE_MODULSPEZ,round(SEIN_LOG.FEINENTWURFSREVIEW.Rec_Elem_1));
end if;
  if SEIN_LOG.CODEREVIEW.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_REVIEWAUFWAND(DER_CODE,round(SEIN_LOG.CODEREVIEW.Rec_Elem_1));
end if;
  if SEIN_LOG.HANDBUCHREVIEW.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_HAT_REVIEWAUFWAND(DAS_HANDBUCH,round(SEIN_LOG.HANDBUCHREVIEW.Rec_Elem_1));
end if;
end if;
  GESAMTAUFWAND_TEST := SEIN_LOG.MODULTEST.Rec_Elem_1 + SEIN_LOG.INTTEST.Rec_Elem_1 + SEIN_LOG.SYSTEMTEST.Rec_Elem_1;
  if GESAMTAUFWAND_TEST > 0.0 then
  send_player_message ENTWICKLER_HAT_GETESTET(EIN_ENTWICKLER);
  if SEIN_LOG.MODULTEST.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_TESTETE_MODULE(round(SEIN_LOG.MODULTEST.Rec_Elem_1));
end if;
  if SEIN_LOG.INTTEST.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_TESTETE_INTEGRATION(round(SEIN_LOG.INTTEST.Rec_Elem_1));
end if;
  if SEIN_LOG.SYSTEMTEST.Rec_Elem_1 > 0.0 then
  send_player_message ENTWICKLER_TESTETE_SYSTEM(round(SEIN_LOG.SYSTEMTEST.Rec_Elem_1));
end if;
end if;
  if not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*)) and not exists_extended(BEGUTACHTET(*,EIN_ENTWICKLER,*)) then
  send_player_message ENTWICKLER_MACHT_NICHTS(EIN_ENTWICKLER);
end if;
  if (exists_extended(REVIEW_SOLL_STATTFINDEN(*,*,EIN_ENTWICKLER,*)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,*,*,EIN_ENTWICKLER)) or exists_extended(REVIEW_3_SOLL_STATTFINDEN(*,*,*,*,EIN_ENTWICKLER)) ) and not exists_extended(BEGUTACHTET(*,EIN_ENTWICKLER,*)) then
  send_player_message ENTWICKLER_WIRD_BEGUTACHTEN(EIN_ENTWICKLER);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_NOTIZEN)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DIE_NOTIZEN);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_ENTWURF)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) and not exists(PRODUZIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH)) then
  send_player_message ENTWICKLER_WIRD_PRODUZIEREN(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) and not exists(INTEGRIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_WIRD_INTEGR(EIN_ENTWICKLER);
end if;
  if (exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) ) and not exists_extended(TESTET(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_WIRD_TESTEN(EIN_ENTWICKLER);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_ENTWURF,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_CODE,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) and not exists(KORRIGIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) then
  send_player_message ENTWICKLER_WIRD_KORRIGIEREN(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,*,*)) and not exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,*,*)) then
  send_player_message ENTWICKLER_WIRD_ALLES_KORRIGIEREN(EIN_ENTWICKLER);
end if;
  if exists_extended(BEGUTACHTET(*,EIN_ENTWICKLER,*)) then
  send_player_message ENTWICKLER_BEGUTACHTET(EIN_ENTWICKLER);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_NOTIZEN)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DIE_NOTIZEN);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_ENTWURF)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(PRODUZIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH)) then
  send_player_message ENTWICKLER_PRODUZIERT(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(INTEGRIERT(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_INTEGR(EIN_ENTWICKLER);
end if;
  if exists_extended(TESTET(*,EIN_ENTWICKLER,DER_CODE)) then
  send_player_message ENTWICKLER_TESTET(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DIE_SPEZIFIKATION);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_ENTWURF,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DER_ENTWURF);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DIE_MODULSPEZ);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DER_CODE,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DER_CODE);
end if;
  if exists(KORRIGIERT(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) then
  send_player_message ENTWICKLER_KORRIGIERT(EIN_ENTWICKLER,DAS_HANDBUCH);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DER_ENTWURF,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DIE_MODULSPEZ,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DER_CODE,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
  if exists(KORRIGIERT_ALLES(*,EIN_ENTWICKLER,DAS_HANDBUCH,*)) then
  send_player_message ENTWICKLER_KORRIGIERT_ALLES(EIN_ENTWICKLER);
end if;
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_TAETIGKEIT_BEENDEN

command LASSE_TAETIGKEIT_BEENDEN( EIN_ENTWICKLER : ENTWICKLER ) taking 15 is
structure 
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_AKTUELLER_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  AKTUELLER_AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_AKTUELLER_AUFTRAG,EIN_ENTWICKLER,EIN_DOKUMENT);
begin 
send_debug_message "LASSE_TAETIGKEIT_BEENDEN";
  delete(AKTUELLER_AUFTRAG);
delete(The_Attribute_Role_Of_AKTUELLER_AUFTRAG);
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_TAETIGKEIT_ABBRECHEN

command LASSE_TAETIGKEIT_ABBRECHEN( EIN_ENTWICKLER : ENTWICKLER ) taking 15 is
structure 
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_AKTUELLE_TAETIGKEIT : BASE2_BEARBEITET_Entity;
  AKTUELLE_TAETIGKEIT : BEARBEITET(THE_ATTRIBUTE_ROLE_OF_AKTUELLE_TAETIGKEIT,EIN_ENTWICKLER,EIN_DOKUMENT);
constraints 
  not exists(SOLL_BEARBEITUNG_ABBRECHEN(*,EIN_ENTWICKLER,EIN_DOKUMENT));
begin 
send_debug_message "LASSE_TAETIGKEIT_ABBRECHEN";
  create entity The_Attribute_Role_Of_SOLL_BEARBEITUNG_ABBRECHEN_23 : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity aka new_unique_id(BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity)
 with
    Dummy := 0;
  end create;
  create relation SOLL_BEARBEITUNG_ABBRECHEN
  with
    WER := EIN_ENTWICKLER;
    VON_WAS := EIN_DOKUMENT;
    Attribute_Role := The_Attribute_Role_Of_SOLL_BEARBEITUNG_ABBRECHEN_23;
  end create;
end command;
-----------------------------------------------------------------------------
-- Regel: LASSE_REVIEWS_BEENDEN

command LASSE_REVIEWS_BEENDEN( EIN_DOKUMENT : DOKUMENT ) taking 15 is
structure 
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  AUFTRAG : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_DOKUMENT,GUTACHTER_1,GUTACHTER_2);
begin 
send_debug_message "LASSE_REVIEWS_BEENDEN";
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end command;
-----------------------------------------------------------------------------
-- Regel: TEILE_DEM_PROJEKT_ZU

command TEILE_DEM_PROJEKT_ZU( EIN_ENTWICKLER : ENTWICKLER ) taking 30 is
structure 
  DAS_PROJEKT : PROJEKT;
constraints 
  not EIN_ENTWICKLER.IST_EINGESTELLT;
  EIN_ENTWICKLER.VERFUEGBAR_AB <= current_date;
  not exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,DAS_PROJEKT));
begin 
send_debug_message "TEILE_DEM_PROJEKT_ZU";
  EIN_ENTWICKLER.IST_EINGESTELLT := true;
  create entity The_Attribute_Role_Of_ARBEITET_SICH_EIN_24 : BASE2_ARBEITET_SICH_EIN_Entity aka new_unique_id(BASE2_ARBEITET_SICH_EIN_Entity)
 with
    BIS := current_date + 30240;
  end create;
  create relation ARBEITET_SICH_EIN
  with
    WER := EIN_ENTWICKLER;
    IN_WAS := DAS_PROJEKT;
    Attribute_Role := The_Attribute_Role_Of_ARBEITET_SICH_EIN_24;
  end create;
  send_player_message ENTWICKLER_WURDE_EINGESTELLT(EIN_ENTWICKLER);
end command;
-----------------------------------------------------------------------------
-- Regel: ENTLASSE_AUS_PROJEKT

command ENTLASSE_AUS_PROJEKT( EIN_ENTWICKLER : ENTWICKLER ) taking 90 is
constraints 
  EIN_ENTWICKLER.IST_EINGESTELLT;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  not exists_extended(BEGUTACHTET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTLASSE_AUS_PROJEKT";
  EIN_ENTWICKLER.IST_EINGESTELLT := false;
  EIN_ENTWICKLER.VERFUEGBAR_AB := current_date + days_to_minutes(round(random(39.0)) + 21);
  if date_weekday(EIN_ENTWICKLER.VERFUEGBAR_AB) = 6 then
  EIN_ENTWICKLER.VERFUEGBAR_AB := EIN_ENTWICKLER.VERFUEGBAR_AB + 2 * 1440;
end if;
  if date_weekday(EIN_ENTWICKLER.VERFUEGBAR_AB) = 7 then
  EIN_ENTWICKLER.VERFUEGBAR_AB := EIN_ENTWICKLER.VERFUEGBAR_AB + 1440;
end if;
  send_player_message ENTWICKLER_WURDE_ENTLASSEN(EIN_ENTWICKLER);
end command;
-----------------------------------------------------------------------------
-- Regel: SETZE_NOTATION_EIN_FUER

command SETZE_NOTATION_EIN_FUER( EINE_NOTATION : NOTATION, EIN_DOKUMENT : DOKUMENT ) taking 120 is
constraints 
  not exists(SOLL_GESCHRIEBEN_WERDEN_IN(*,EIN_DOKUMENT,EINE_NOTATION));
begin 
send_debug_message "SETZE_NOTATION_EIN_FUER";
  create entity The_Attribute_Role_Of_SOLL_GESCHRIEBEN_WERDEN_IN_25 : BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity aka new_unique_id(BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation SOLL_GESCHRIEBEN_WERDEN_IN
  with
    WAS := EIN_DOKUMENT;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_SOLL_GESCHRIEBEN_WERDEN_IN_25;
  end create;
end command;
-----------------------------------------------------------------------------
-- Regel: BEENDE_PROJEKT

command BEENDE_PROJEKT taking 240 is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "BEENDE_PROJEKT";
  DER_ZUSTAND.PROJEKT_IST_BEENDET := true;
  if date_weekday(current_date) <= 3 then
  DER_ZUSTAND.PROJEKTENDE := current_date + 2880;
else
  DER_ZUSTAND.PROJEKTENDE := current_date + 5760;
end if;
end command;
-----------------------------------------------------------------------------
-- Regel: UEBERGIB_SYSTEM_AN_KUNDEN

command UEBERGIB_SYSTEM_AN_KUNDEN taking 480 is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DER_WUNSCH : KUNDENWUNSCH;
  DER_CODE : CODE;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "UEBERGIB_SYSTEM_AN_KUNDEN";
  if length(DER_CODE.INTEGRIERTE_IDS) <= (length(DER_WUNSCH.SOLL_ANFORDERUNGEN) div 2 ) then
  send_player_message SYSTEM_NOCH_NICHT_AUSLIEFERBAR;
else
  DER_ZUSTAND.PROJEKT_IST_BEENDET := true;
  DER_ZUSTAND.SYSTEM_AUSGELIEFERT := true;
  if date_weekday(current_date) <= 3 then
  DER_ZUSTAND.PROJEKTENDE := current_date + 2880;
else
  DER_ZUSTAND.PROJEKTENDE := current_date + 5760;
end if;
end if;
end command;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_IST_NICHT_EINGESTELLT

rule ENTWICKLER_IST_NICHT_EINGESTELLT[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,EIN_DOKUMENT);
constraints 
  not EIN_ENTWICKLER.IST_EINGESTELLT;
begin 
send_debug_message "ENTWICKLER_IST_NICHT_EINGESTELLT";
  send_player_message NICHT_EINGESTELLT(EIN_ENTWICKLER);
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: GUTACHTER_IST_NICHT_EINGESTELLT

rule GUTACHTER_IST_NICHT_EINGESTELLT[1000] taking 0  is
structure 
  DER_PRUEFLING : DOKUMENT;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  AUFTRAG : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,DER_PRUEFLING,GUTACHTER_1,GUTACHTER_2);
constraints 
  not (GUTACHTER_1.IST_EINGESTELLT and GUTACHTER_2.IST_EINGESTELLT );
begin 
send_debug_message "GUTACHTER_IST_NICHT_EINGESTELLT";
  if GUTACHTER_1.IST_EINGESTELLT = false then
  send_player_message NICHT_EINGESTELLT(GUTACHTER_1);
end if;
  if GUTACHTER_2.IST_EINGESTELLT = false then
  send_player_message NICHT_EINGESTELLT(GUTACHTER_2);
end if;
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: GUTACHTER3_IST_NICHT_EINGESTELLT

rule GUTACHTER3_IST_NICHT_EINGESTELLT[1000] taking 0  is
structure 
  DER_PRUEFLING : DOKUMENT;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  GUTACHTER_3 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_REVIEW_3_SOLL_STATTFINDEN_Entity;
  AUFTRAG : REVIEW_3_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,DER_PRUEFLING,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3);
constraints 
  not GUTACHTER_3.IST_EINGESTELLT;
begin 
send_debug_message "GUTACHTER3_IST_NICHT_EINGESTELLT";
  send_player_message NICHT_EINGESTELLT(GUTACHTER_3);
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_INITIALIZE

rule Deactivating_1_INITIALIZE[1220] taking 0  is
structure 
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
constraints 
  THE_BASE2_1_INITIALIZE_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_INITIALIZE";
  delete(THE_BASE2_1_INITIALIZE_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_INITIALIZE

rule Activating_INITIALIZE[2000] taking 0  is
structure 
  DUMMY : KUNDE;
constraints 
  not exists(BASE2_1_INITIALIZE_Relation(DUMMY,*));
begin 
send_debug_message "Activating_INITIALIZE";
  create entity THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity aka new_unique_id(BASE2_1_INITIALIZE_Entity)
 with
    LCD := current_date;
  end create;
  create relation BASE2_1_INITIALIZE_Relation
  with
    RL_DUMMY := DUMMY;
    RL_THE_BASE2_1_INITIALIZE_Entity := THE_BASE2_1_INITIALIZE_Entity;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_INITIALIZE

rule Active_INITIALIZE[1800] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
begin 
send_debug_message "Active_INITIALIZE";
  THE_BASE2_1_INITIALIZE_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_GLOBALE_INITIALISIERUNG

rule Deactivating_1_GLOBALE_INITIALISIERUNG[1240] taking 0  is
structure 
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
constraints 
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_GLOBALE_INITIALISIERUNG";
  delete(THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_GLOBALE_INITIALISIERUNG

rule Activating_GLOBALE_INITIALISIERUNG[1990] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
constraints 
  not exists(BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,*));
begin 
send_debug_message "Activating_GLOBALE_INITIALISIERUNG";
  create entity THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity aka new_unique_id(BASE2_2_GLOBALE_INITIALISIERUNG_Entity)
 with
    LCD := current_date;
  end create;
  create relation BASE2_2_GLOBALE_INITIALISIERUNG_Relation
  with
    RL_DUMMY := DUMMY;
    RL_THE_BASE2_1_INITIALIZE_Entity := THE_BASE2_1_INITIALIZE_Entity;
    RL_DIE_ANFORDERUNGEN := DIE_ANFORDERUNGEN;
    RL_THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity := THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_GLOBALE_INITIALISIERUNG

rule Active_GLOBALE_INITIALISIERUNG[1790] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
begin 
send_debug_message "Active_GLOBALE_INITIALISIERUNG";
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: GLOBALE_INITIALISIERUNG_BEENDEN

rule GLOBALE_INITIALISIERUNG_BEENDEN[1000] taking 0  is
structure 
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  DIE_VOREINSTELLUNG : NOTATIONSVOREINSTELLUNG;
begin 
send_debug_message "GLOBALE_INITIALISIERUNG_BEENDEN";
  delete(DIE_ANFORDERUNGEN);
  delete(DIE_VOREINSTELLUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTITAET_FUER_KAUSALITAETSFLUSS_ERZEUGEN

rule ENTITAET_FUER_KAUSALITAETSFLUSS_ERZEUGEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
begin 
send_debug_message "ENTITAET_FUER_KAUSALITAETSFLUSS_ERZEUGEN";
  create entity K : KAUSALITAETSFLUSS aka "flow_of_causality"
 with
    REGELMENGE := Set_S_Type'();
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTITAET_FUER_DELTA_T_ERZEUGEN

rule ENTITAET_FUER_DELTA_T_ERZEUGEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
begin 
send_debug_message "ENTITAET_FUER_DELTA_T_ERZEUGEN";
  create entity D : DELTAT aka "delta_t"
 with
    T := 0;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: INFORMATIONEN_UEBER_PROJEKT_AUSGEBEN

rule INFORMATIONEN_UEBER_PROJEKT_AUSGEBEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  ZIELE : PROJEKTZIELE;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
begin 
send_debug_message "INFORMATIONEN_UEBER_PROJEKT_AUSGEBEN";
  send_player_message AUFGABENSTELLUNG_BESCHREIBEN(float(trunc(DER_KUNDENWUNSCH.UMFANG_AFP)),ZIELE.SOLL_TERMIN,ZIELE.SOLL_KOSTEN);
  if ZIELE.SOLL_VOLLSTAENDIGKEIT_SPEZIFIKATION > 0.0 then
  send_player_message MINDESTENS_PROZENT_AFP(DIE_SPEZIFIKATION,ZIELE.SOLL_VOLLSTAENDIGKEIT_SPEZIFIKATION);
end if;
  if ZIELE.SOLL_KORREKTHEIT_SPEZIFIKATION <= 900.0 then
  send_player_message MAX_FEHLER_PRO_SEITE(DIE_SPEZIFIKATION,ZIELE.SOLL_KORREKTHEIT_SPEZIFIKATION);
end if;
  if ZIELE.SOLL_VOLLSTAENDIGKEIT_SYSTEMENTWURF > 0.0 then
  send_player_message MINDESTENS_PROZENT_AFP(DER_ENTWURF,ZIELE.SOLL_VOLLSTAENDIGKEIT_SYSTEMENTWURF);
end if;
  if ZIELE.SOLL_KORREKTHEIT_SYSTEMENTWURF <= 900.0 then
  send_player_message MAX_FEHLER_PRO_SEITE(DER_ENTWURF,ZIELE.SOLL_KORREKTHEIT_SYSTEMENTWURF);
end if;
  if ZIELE.SOLL_VOLLSTAENDIGKEIT_MODULSPEZ > 0.0 then
  send_player_message MINDESTENS_PROZENT_AFP(DIE_MODULSPEZ,ZIELE.SOLL_VOLLSTAENDIGKEIT_MODULSPEZ);
end if;
  if ZIELE.SOLL_KORREKTHEIT_MODULSPEZ <= 900.0 then
  send_player_message MAX_FEHLER_PRO_SEITE(DIE_MODULSPEZ,ZIELE.SOLL_KORREKTHEIT_MODULSPEZ);
end if;
  if ZIELE.SOLL_VOLLSTAENDIGKEIT_CODE > 0.0 then
  send_player_message MINDESTENS_PROZENT_AFP(DER_CODE,ZIELE.SOLL_VOLLSTAENDIGKEIT_CODE);
end if;
  if ZIELE.SOLL_KORREKTHEIT_CODE <= 900.0 then
  send_player_message MAX_FEHLER_IM_CODE_PRO_KLOC(ZIELE.SOLL_KORREKTHEIT_CODE);
end if;
  if ZIELE.SOLL_VOLLSTAENDIGKEIT_HANDBUCH > 0.0 then
  send_player_message MINDESTENS_PROZENT_AFP(DAS_HANDBUCH,ZIELE.SOLL_VOLLSTAENDIGKEIT_HANDBUCH);
end if;
  if ZIELE.SOLL_KORREKTHEIT_HANDBUCH <= 900.0 then
  send_player_message MAX_FEHLER_PRO_SEITE(DAS_HANDBUCH,ZIELE.SOLL_KORREKTHEIT_HANDBUCH);
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: DOKUMENTE_INITIALISIEREN

rule DOKUMENTE_INITIALISIEREN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
begin 
send_debug_message "DOKUMENTE_INITIALISIEREN";
  create entity D1 : ANALYSENOTIZEN aka "Analysis"
 with
    INHALT := Bag_Record_IRIRRRRR_Type'();
    UNBEARBEITETE_IDS := Bag_I_Type'();
    UNBEARBEITETE_HB_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_SPEZ_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_ENTW_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_MSPEZ_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_CODE_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_HB_IDS := Bag_I_Type'();
    ANZ_AFP := 0.0;
    ANZ_FEHLER_GES := 0.0;
    FEHLER_PRO_AFP := 0.0;
    PROZENT_AFP_100 := 0.0;
    PROZENT_AFP_ZV := 0.0;
    ANZ_AF := 0.0;
    AF_PRO_AFP := 0.0;
    PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
  end create;
  create entity D2 : SPEZIFIKATION aka "Specification"
 with
    INHALT := Bag_Record_IRIRRRRR_Type'();
    UNBEARBEITETE_IDS := Bag_I_Type'();
    UNBEARBEITETE_HB_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_ENTW_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_MSPEZ_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_CODE_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_HB_IDS := Bag_I_Type'();
    SEITEN := 0;
    ANZ_AFP := 0.0;
    ANZ_FEHLER_GES := 0.0;
    FEHLER_PRO_AFP := 0.0;
    PROZENT_AFP_100 := 0.0;
    PROZENT_AFP_ZV := 0.0;
    ANZ_AF := 0.0;
    AF_PRO_AFP := 0.0;
    PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
    FEHLER_PRO_SEITE := 0.0;
    KONS_SC_AF := 0.0;
  end create;
  create entity D3 : SYSTEMENTWURF aka "Systemdesign"
 with
    INHALT := Bag_Record_IRIRRRRR_Type'();
    UNBEARBEITETE_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_MSPEZ_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_CODE_IDS := Bag_I_Type'();
    SEITEN := 0;
    SUBSYSTEME := 0;
    ANZ_AFP := 0.0;
    ANZ_FEHLER_GES := 0.0;
    FEHLER_PRO_AFP := 0.0;
    PROZENT_AFP_100 := 0.0;
    PROZENT_AFP_ZV := 0.0;
    ANZ_AF := 0.0;
    AF_PRO_AFP := 0.0;
    PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
    FEHLER_PRO_SEITE := 0.0;
    ANZ_GF := 0.0;
    GF_PRO_AFP := 0.0;
    KONS_GC_AF := 0.0;
    KONS_GC_GF := 0.0;
  end create;
  create entity D4 : MODULSPEZIFIKATION aka "Moduledesign"
 with
    INHALT := Bag_Record_IRIRRRRR_Type'();
    UNBEARBEITETE_IDS := Bag_I_Type'();
    IN_ARBEIT_FUER_CODE_IDS := Bag_I_Type'();
    SEITEN := 0;
    MODULE := 0;
    PROZEDUREN := 0;
    ANZ_AFP := 0.0;
    ANZ_FEHLER_GES := 0.0;
    FEHLER_PRO_AFP := 0.0;
    PROZENT_AFP_100 := 0.0;
    PROZENT_AFP_ZV := 0.0;
    ANZ_AF := 0.0;
    AF_PRO_AFP := 0.0;
    PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
    FEHLER_PRO_SEITE := 0.0;
    ANZ_GF := 0.0;
    GF_PRO_AFP := 0.0;
    ANZ_FF := 0.0;
    FF_PRO_AFP := 0.0;
    KONS_MC_AF := 0.0;
    KONS_MC_GF := 0.0;
    KONS_MC_FF := 0.0;
  end create;
  create entity D5 : CODE aka "Code"
 with
    INHALT := Bag_Record_IRIRRRRR_Type'();
    UNBEARBEITETE_IDS := Bag_I_Type'();
    INTEGRIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    ZEILEN := 0;
    MODULE := 0;
    SUBSYSTEME := 0;
    PROZEDUREN := 0;
    ANZ_AFP := 0.0;
    ANZ_FEHLER_GES := 0.0;
    FEHLER_PRO_AFP := 0.0;
    PROZENT_AFP_100 := 0.0;
    PROZENT_AFP_ZV := 0.0;
    ANZ_AF := 0.0;
    AF_PRO_AFP := 0.0;
    ANZ_GF := 0.0;
    GF_PRO_AFP := 0.0;
    ANZ_FF := 0.0;
    FF_PRO_AFP := 0.0;
    ANZ_IF := 0.0;
    IF_PRO_AFP := 0.0;
    FEHLER_PRO_KLOC := 0.0;
    PROZENT_FEHLER_PRO_KLOC_ZV := 0.0;
  end create;
  create entity D6 : HANDBUCH aka "Manuals"
 with
    INHALT := Bag_Record_IRIRRRRR_Type'();
    UNBEARBEITETE_IDS := Bag_I_Type'();
    SEITEN := 0;
    ANZ_AFP := 0.0;
    ANZ_FEHLER_GES := 0.0;
    FEHLER_PRO_AFP := 0.0;
    PROZENT_AFP_100 := 0.0;
    PROZENT_AFP_ZV := 0.0;
    ANZ_AF := 0.0;
    AF_PRO_AFP := 0.0;
    PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
    FEHLER_PRO_SEITE := 0.0;
    ANZ_HF := 0.0;
    HF_PRO_AFP := 0.0;
    KONS_HC_AF := 0.0;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: ANALYSENOTIZEN_MIT_ANFORDERUNGEN_FUELLEN

rule ANALYSENOTIZEN_MIT_ANFORDERUNGEN_FUELLEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DAS_PROJEKT : PROJEKT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
declare 
  ID : INTEGER := 0;
  GESAMTE_AFP : REAL := 0.0;
  NOCH_AFP : REAL := 0.0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ANALYSENOTIZEN_MIT_ANFORDERUNGEN_FUELLEN";
  ID := 0;
  GESAMTE_AFP := 0.0;
  NOCH_AFP := 0.0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  GESAMTE_AFP := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  NOCH_AFP := GESAMTE_AFP * (DAS_PROJEKT.VOLLSTAENDIGKEIT_DER_ANALYSENOTIZEN / 100.0 );
  while NOCH_AFP > 0.01 loop
  ID := f_get_Bag_I_Type(DER_KUNDENWUNSCH.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN,ID);
  if A.Rec_Elem_2 > NOCH_AFP then
  A.Rec_Elem_2 := NOCH_AFP;
end if;
  A.Rec_Elem_4 := A.Rec_Elem_2 * (0.0692 + 0.0462 * log10(GESAMTE_AFP) );
  DIE_NOTIZEN.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_NOTIZEN.INHALT,A);
  DIE_NOTIZEN.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS,ID);
  DIE_NOTIZEN.UNBEARBEITETE_HB_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS,ID);
  NOCH_AFP := NOCH_AFP - A.Rec_Elem_2;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFBERICHTE_INITIALISIEREN

rule PRUEFBERICHTE_INITIALISIEREN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
begin 
send_debug_message "PRUEFBERICHTE_INITIALISIEREN";
  create entity R1 : SPEZIFIKATIONSREVIEWBERICHT aka "Specificationreviewreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity R2 : SYSTEMENTWURFSREVIEWBERICHT aka "Systemdesignreviewreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity R3 : MODULSPEZREVIEWBERICHT aka "Moduledesignreviewreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity R4 : CODEREVIEWBERICHT aka "Codereviewreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity R5 : HANDBUCHREVIEWBERICHT aka "Manualsreviewreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity T1 : MODULTESTBERICHT aka "Moduletestreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity T2 : INTEGRATIONSTESTBERICHT aka "Integrationtestreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity T3 : SYSTEMTESTBERICHT aka "Systemtestreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create entity T4 : ABNAHMETESTBERICHT aka "Acceptancetestreport"
 with
    INHALT := Bag_Record_IRRRRRRRR_Type'();
    NICHT_KORRIGIERTE_IDS := Bag_I_Type'();
    FEHLER := 0.0;
    VERLUSTE := 0.0;
    IST_LEER := true;
    ANZ_ANF := 0.0;
    ANZ_NICHT_KORR_ANF := 0.0;
    NUMMER := 1;
    ANZ_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_KORR_FEHLER_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    ANZ_VERLUSTE_PRO_PRF := Array_10_R_Type'(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: PROJEKTZUSTAND_INITIALISIEREN

rule PROJEKTZUSTAND_INITIALISIEREN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DAS_PROJEKT : PROJEKT;
begin 
send_debug_message "PROJEKTZUSTAND_INITIALISIEREN";
  create entity PZ : PROJEKTZUSTAND aka "Projectstatus"
 with
    KOSTEN := DAS_PROJEKT.FIX_KOSTEN;
    AUFWAND_SPEZIFIKATIONSPHASE := 0.0;
    AUFWAND_ENTWURFSPHASE := 0.0;
    AUFWAND_CODIERUNGSPHASE := 0.0;
    AUFWAND_TESTPHASE := 0.0;
    AUFWAND_HANDBUCHERSTELLUNG := 0.0;
    AUFWAND_REVIEWS := 0.0;
    AUFWAND_TESTS := 0.0;
    AUFWAND_KORREKTUR_REVIEWS := 0.0;
    AUFWAND_KORREKTUR_TESTS := 0.0;
    AUFWAND_FUER_KUNDE := 0.0;
    GESAMTAUFWAND := 0.0;
    KOSTEN_PRO_MM := 0.0;
    AUFWANDSVERTEILUNG_PHASEN := Array_5_R_Type'(0.0,0.0,0.0,0.0,0.0);
    MITTELWERT_VOLLSTAENDIGKEIT := 0.0;
    MITTELWERT_VOLLSTAENDIGKEIT_ZV := 0.0;
    MITTELWERT_KORREKTHEIT_ZV := 0.0;
    PROZENT_DAUER_ZV := 0.0;
    PROZENT_KOSTEN_ZV := 0.0;
    BEHOBENE_FEHLER := 0.0;
    PROJEKTBEGINN := current_date;
    PROJEKTENDE := 2099/12/31/23:59;
    PROJEKT_IST_BEENDET := false;
    SYSTEM_AUSGELIEFERT := false;
    ANZAHL_ABNAHMETESTS := 1;
  end create;
  create entity PLOGBUCH : PROJEKTLOGBUCH aka "Projectlog"
 with
    ANALYSE_AUFWAND := 0.0;
    ANALYSE_BEGINN := 1901/01/01/00:00;
    ANALYSE_ENDE := 1901/01/01/00:00;
    ANALYSE_DAUER := 0;
    SPEZIFIKATION_AUFWAND := 0.0;
    SPEZIFIKATION_BEGINN := 1901/01/01/00:00;
    SPEZIFIKATION_ENDE := 1901/01/01/00:00;
    SPEZIFIKATION_DAUER := 0;
    ENTWURF_AUFWAND := 0.0;
    ENTWURF_BEGINN := 1901/01/01/00:00;
    ENTWURF_ENDE := 1901/01/01/00:00;
    ENTWURF_DAUER := 0;
    MODSPEZ_AUFWAND := 0.0;
    MODSPEZ_BEGINN := 1901/01/01/00:00;
    MODSPEZ_ENDE := 1901/01/01/00:00;
    MODSPEZ_DAUER := 0;
    CODE_AUFWAND := 0.0;
    CODE_BEGINN := 1901/01/01/00:00;
    CODE_ENDE := 1901/01/01/00:00;
    CODE_DAUER := 0;
    INTEGRATION_AUFWAND := 0.0;
    INTEGRATION_BEGINN := 1901/01/01/00:00;
    INTEGRATION_ENDE := 1901/01/01/00:00;
    INTEGRATION_DAUER := 0;
    HANDBUCH_AUFWAND := 0.0;
    HANDBUCH_BEGINN := 1901/01/01/00:00;
    HANDBUCH_ENDE := 1901/01/01/00:00;
    HANDBUCH_DAUER := 0;
  end create;
  create entity RLOGBUCH : REVIEWLOGBUCH aka "Reviewlog"
 with
    SREVIEW_AUFWAND := 0.0;
    SREVIEW_BEGINN := 1901/01/01/00:00;
    SREVIEW_ENDE := 1901/01/01/00:00;
    SREVIEW_DAUER := 0;
    SREVIEW_K_AUFWAND := 0.0;
    SREVIEW_K_BEGINN := 1901/01/01/00:00;
    SREVIEW_K_ENDE := 1901/01/01/00:00;
    SREVIEW_K_DAUER := 0;
    EREVIEW_AUFWAND := 0.0;
    EREVIEW_BEGINN := 1901/01/01/00:00;
    EREVIEW_ENDE := 1901/01/01/00:00;
    EREVIEW_DAUER := 0;
    EREVIEW_K_AUFWAND := 0.0;
    EREVIEW_K_BEGINN := 1901/01/01/00:00;
    EREVIEW_K_ENDE := 1901/01/01/00:00;
    EREVIEW_K_DAUER := 0;
    MREVIEW_AUFWAND := 0.0;
    MREVIEW_BEGINN := 1901/01/01/00:00;
    MREVIEW_ENDE := 1901/01/01/00:00;
    MREVIEW_DAUER := 0;
    MREVIEW_K_AUFWAND := 0.0;
    MREVIEW_K_BEGINN := 1901/01/01/00:00;
    MREVIEW_K_ENDE := 1901/01/01/00:00;
    MREVIEW_K_DAUER := 0;
    CREVIEW_AUFWAND := 0.0;
    CREVIEW_BEGINN := 1901/01/01/00:00;
    CREVIEW_ENDE := 1901/01/01/00:00;
    CREVIEW_DAUER := 0;
    CREVIEW_K_AUFWAND := 0.0;
    CREVIEW_K_BEGINN := 1901/01/01/00:00;
    CREVIEW_K_ENDE := 1901/01/01/00:00;
    CREVIEW_K_DAUER := 0;
    HREVIEW_AUFWAND := 0.0;
    HREVIEW_BEGINN := 1901/01/01/00:00;
    HREVIEW_ENDE := 1901/01/01/00:00;
    HREVIEW_DAUER := 0;
    HREVIEW_K_AUFWAND := 0.0;
    HREVIEW_K_BEGINN := 1901/01/01/00:00;
    HREVIEW_K_ENDE := 1901/01/01/00:00;
    HREVIEW_K_DAUER := 0;
  end create;
  create entity TLOGBUCH : TESTLOGBUCH aka "Testlog"
 with
    MTEST_AUFWAND := 0.0;
    MTEST_BEGINN := 1901/01/01/00:00;
    MTEST_ENDE := 1901/01/01/00:00;
    MTEST_DAUER := 0;
    MTEST_K_AUFWAND := 0.0;
    MTEST_K_BEGINN := 1901/01/01/00:00;
    MTEST_K_ENDE := 1901/01/01/00:00;
    MTEST_K_DAUER := 0;
    ITEST_AUFWAND := 0.0;
    ITEST_BEGINN := 1901/01/01/00:00;
    ITEST_ENDE := 1901/01/01/00:00;
    ITEST_DAUER := 0;
    ITEST_K_AUFWAND := 0.0;
    ITEST_K_BEGINN := 1901/01/01/00:00;
    ITEST_K_ENDE := 1901/01/01/00:00;
    ITEST_K_DAUER := 0;
    STEST_AUFWAND := 0.0;
    STEST_BEGINN := 1901/01/01/00:00;
    STEST_ENDE := 1901/01/01/00:00;
    STEST_DAUER := 0;
    STEST_K_AUFWAND := 0.0;
    STEST_K_BEGINN := 1901/01/01/00:00;
    STEST_K_ENDE := 1901/01/01/00:00;
    STEST_K_DAUER := 0;
    ATEST_AUFWAND := 0.0;
    ATEST_BEGINN := 1901/01/01/00:00;
    ATEST_ENDE := 1901/01/01/00:00;
    ATEST_DAUER := 0;
    ATEST_K_AUFWAND := 0.0;
    ATEST_K_BEGINN := 1901/01/01/00:00;
    ATEST_K_ENDE := 1901/01/01/00:00;
    ATEST_K_DAUER := 0;
  end create;
  create entity PE : PRUEFUNGSEFFEKTIVITAET aka "Inspectionefficiency"
 with
    SPEZREVIEWEFFEKTIVITAET := 1.0;
    ENTWURFSREVIEWEFFEKTIVITAET := 1.0;
    MODULSPEZREVIEWEFFEKTIVITAET := 1.0;
    CODEREVIEWEFFEKTIVITAET := 1.0;
    HANDBUCHREVIEWEFFEKTIVITAET := 1.0;
    MODULTESTEFFEKTIVITAET := 1.0;
    INTEGRATIONSTESTEFFEKTIVITAET := 1.0;
    SYSTEMTESTEFFEKTIVITAET := 1.0;
    ABNAHMETESTEFFEKTIVITAET := 1.0;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: KUNDENWUNSCH_INITIALISIEREN

rule KUNDENWUNSCH_INITIALISIEREN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
declare 
  TDI : REAL := 0.0;
  VAF : REAL := 0.0;
  WUNSCH : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  I : INTEGER := 0;
begin 
send_debug_message "KUNDENWUNSCH_INITIALISIEREN";
  TDI := 0.0;
  VAF := 0.0;
  WUNSCH := Bag_Record_IRIRRRRR_Type'();
  I := 0;
  TDI := float(DIE_ANFORDERUNGEN.DATA_COMMUNICATIONS + DIE_ANFORDERUNGEN.TRANSACTION_RATE + DIE_ANFORDERUNGEN.ONLINE_DATA_ENTRY + DIE_ANFORDERUNGEN.MULTIPLE_SITES + DIE_ANFORDERUNGEN.END_USER_EFFICIENCY + DIE_ANFORDERUNGEN.ONLINE_UPDATE + DIE_ANFORDERUNGEN.COMPLEX_PROCESSING + DIE_ANFORDERUNGEN.FACILITATE_CHANGE + DIE_ANFORDERUNGEN.INSTALLATION_EASE + DIE_ANFORDERUNGEN.OPERATIONAL_EASE + DIE_ANFORDERUNGEN.DISTRIBUTED_DATA_PROCESSING + DIE_ANFORDERUNGEN.PERFORMANCE + DIE_ANFORDERUNGEN.HEAVILY_USED_CONFIGURATION + DIE_ANFORDERUNGEN.REUSABILITY);
  VAF := (TDI * 0.01 ) + 0.65;
  WUNSCH := gib_wunsch(Bag_Record_IRIRRRRR_Type'(),VAF,Array_3_I_Type'(7,10,15),DIE_ANFORDERUNGEN.INTERNAL_LOGICAL_FILES);
  WUNSCH := gib_wunsch(WUNSCH,VAF,Array_3_I_Type'(5,7,10),DIE_ANFORDERUNGEN.EXTERNAL_INTERFACE_FILES);
  WUNSCH := gib_wunsch(WUNSCH,VAF,Array_3_I_Type'(3,4,6),DIE_ANFORDERUNGEN.EXTERNAL_INPUTS);
  WUNSCH := gib_wunsch(WUNSCH,VAF,Array_3_I_Type'(4,5,7),DIE_ANFORDERUNGEN.EXTERNAL_OUTPUTS);
  WUNSCH := gib_wunsch(WUNSCH,VAF,Array_3_I_Type'(3,4,6),DIE_ANFORDERUNGEN.EXTERNAL_INQUIRIES);
  create entity K1 : KUNDENWUNSCH aka "Customerrequirements"
 with
    SOLL_ANFORDERUNGEN := WUNSCH;
    UNBEARBEITETE_IDS := Bag_I_Type'();
    UMFANG_AFP := gib_afp(WUNSCH);
  end create;
  I := 1;
  while I <= length(WUNSCH) loop
  K1.UNBEARBEITETE_IDS := f_put_Bag_I_Type(K1.UNBEARBEITETE_IDS,I);
  I := I + 1;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERMELDUNG_AUSGEBEN_WEGEN_GLEICHER_AUTORIDS

rule FEHLERMELDUNG_AUSGEBEN_WEGEN_GLEICHER_AUTORIDS[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  ERSTER_ENTWICKLER : ENTWICKLER;
  ZWEITER_ENTWICKLER : ENTWICKLER;
constraints 
  ERSTER_ENTWICKLER.AUTOR_ID = ZWEITER_ENTWICKLER.AUTOR_ID;
begin 
send_debug_message "FEHLERMELDUNG_AUSGEBEN_WEGEN_GLEICHER_AUTORIDS";
  send_player_message FEHLERMELDUNG_GLEICHE_AUTOR_IDS(ERSTER_ENTWICKLER,ZWEITER_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERMELDUNG_AUSGEBEN_WENN_UNERLAUBTE_AUTORID

rule FEHLERMELDUNG_AUSGEBEN_WENN_UNERLAUBTE_AUTORID[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
constraints 
  EIN_ENTWICKLER.AUTOR_ID = 0;
begin 
send_debug_message "FEHLERMELDUNG_AUSGEBEN_WENN_UNERLAUBTE_AUTORID";
  send_player_message FEHLERMELDUNG_ILLEGALE_AUTOR_ID(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATIONEN_ERZEUGEN

rule NOTATIONEN_ERZEUGEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZ : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
begin 
send_debug_message "NOTATIONEN_ERZEUGEN";
  create entity DAS_ADA95 : NOTATION aka "Ada 95"
 with
    NAME := "Ada 95";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_26 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 49.0;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.7,1.05,1.2,0.7,1.0,0.9,0.6,0.9,0.8),
Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,1.0,0.95,0.8,0.95,0.9),Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0),
Record_RRRRRRRRR_Type'(1.1,1.0,0.9,1.1,1.0,1.05,1.2,1.0,1.05));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_ADA95;
    FUER := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_26;
  end create;
  create entity DAS_C : NOTATION aka "C"
 with
    NAME := "C";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_27 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 128.0;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.7,1.05,1.5,0.7,1.0,0.7,0.6,0.85,0.7),
Record_RRRRRRRRR_Type'(0.9,1.0,1.3,0.9,1.0,0.8,0.8,0.9,0.8),Record_RRRRRRRRR_Type'(1.0,1.0,1.2,1.0,1.0,0.9,1.0,0.95,0.9),
Record_RRRRRRRRR_Type'(1.1,1.0,1.0,1.1,1.0,1.0,1.2,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_C;
    FUER := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_27;
  end create;
  create entity DAS_C_PLUSPLUS : NOTATION aka "C++"
 with
    NAME := "C++";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_28 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 55.0;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.7,1.05,1.4,0.7,1.0,0.85,0.5,0.9,0.7),
Record_RRRRRRRRR_Type'(0.9,1.0,1.2,0.9,1.0,0.9,0.7,0.95,0.8),Record_RRRRRRRRR_Type'(1.0,1.0,1.1,1.0,1.0,0.95,0.9,1.0,0.95),
Record_RRRRRRRRR_Type'(1.1,1.0,1.0,1.1,1.0,1.0,1.1,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_C_PLUSPLUS;
    FUER := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_28;
  end create;
  create entity DEUTSCH_FUER_NOTIZEN : NOTATION aka "German_in_Analysis"
 with
    NAME := "German_in_Analysis";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_29 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.44;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0),Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DEUTSCH_FUER_NOTIZEN;
    FUER := DIE_NOTIZEN;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_29;
  end create;
  create entity DEUTSCH_FUER_SPEZ : NOTATION aka "German_in_Spec"
 with
    NAME := "German_in_Spec";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_30 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.44;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.8,0.7,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.9,0.8,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,0.95,0.9,0.9,0.9,1.0),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DEUTSCH_FUER_SPEZ;
    FUER := DIE_SPEZ;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_30;
  end create;
  create entity DEUTSCH_FUER_ENTWURF : NOTATION aka "German_in_System_design"
 with
    NAME := "German_in_System_design";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_31 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.44;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.9,0.8,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.95,0.9,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,1.0,0.95,0.9,0.9,1.0),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DEUTSCH_FUER_ENTWURF;
    FUER := DER_ENTWURF;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_31;
  end create;
  create entity DEUTSCH_FUER_MODULSPEZ : NOTATION aka "German_in_Module_design"
 with
    NAME := "German_in_Module_design";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_32 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.66;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.9,0.8,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.95,0.9,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,1.0,0.95,0.9,0.9,1.0),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DEUTSCH_FUER_MODULSPEZ;
    FUER := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_32;
  end create;
  create entity DEUTSCH_FUER_HANDBUCH : NOTATION aka "German_in_Manuals"
 with
    NAME := "German_in_Manuals";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_33 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 1.32;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.9,0.8,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.95,0.9,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,1.0,0.95,0.9,0.9,1.0),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DEUTSCH_FUER_HANDBUCH;
    FUER := DAS_HANDBUCH;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_33;
  end create;
  create entity DAS_ENGLISCH : NOTATION aka "English"
 with
    NAME := "English";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_34 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.4;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.8,0.7,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.9,0.8,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,0.95,0.9,0.9,0.9,0.9),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_ENGLISCH;
    FUER := DIE_SPEZ;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_34;
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_35 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.4;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.9,0.8,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.95,0.9,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,1.0,0.95,0.9,0.9,0.9),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_ENGLISCH;
    FUER := DER_ENTWURF;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_35;
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_36 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.6;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.9,0.8,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.95,0.9,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,1.0,0.95,0.9,0.9,0.9),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_ENGLISCH;
    FUER := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_36;
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_37 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 1.2;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,1.1,1.4,0.3,0.9,0.8,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.7,1.0,1.2,0.7,0.95,0.9,0.7,0.8,0.8),Record_RRRRRRRRR_Type'(0.9,1.0,1.1,0.9,1.0,0.95,0.9,0.9,0.9),
Record_RRRRRRRRR_Type'(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_ENGLISCH;
    FUER := DAS_HANDBUCH;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_37;
  end create;
  create entity DAS_SA : NOTATION aka "SA"
 with
    NAME := "SA";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_38 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.5;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.6,1.1,1.3,0.7,0.9,0.8,0.6,0.8,0.8),
Record_RRRRRRRRR_Type'(0.8,1.0,1.1,0.9,0.95,0.9,0.8,0.9,0.9),Record_RRRRRRRRR_Type'(0.9,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0),
Record_RRRRRRRRR_Type'(1.0,1.0,0.9,1.1,1.05,1.1,1.1,1.0,1.1));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_SA;
    FUER := DIE_SPEZ;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_38;
  end create;
  create entity DAS_Z : NOTATION aka "Z"
 with
    NAME := "Z";
  end create;
  create entity The_Attribute_Role_Of_GEEIGNET_FUER_39 : BASE2_GEEIGNET_FUER_Entity aka new_unique_id(BASE2_GEEIGNET_FUER_Entity)
 with
    X_PRO_AFP := 0.6;
    AUSWIRKUNG := Array_4_Record_RRRRRRRRR_Type'(Record_RRRRRRRRR_Type'(0.3,0.7,1.5,0.3,1.0,0.9,0.5,0.7,0.7),
Record_RRRRRRRRR_Type'(0.5,0.6,1.3,0.7,1.5,1.1,0.7,0.8,0.9),Record_RRRRRRRRR_Type'(0.7,0.5,1.1,0.9,2.0,1.3,0.9,0.9,1.0),
Record_RRRRRRRRR_Type'(0.8,0.4,1.0,1.0,3.0,1.4,1.0,1.0,1.1));
  end create;
  create relation GEEIGNET_FUER
  with
    WAS := DAS_Z;
    FUER := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_GEEIGNET_FUER_39;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_FUER_ANALYSENOTIZEN_VOREINSTELLEN

rule NOTATION_FUER_ANALYSENOTIZEN_VOREINSTELLEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DIE_NOTIZEN);
  DIE_VOREINSTELLUNG : NOTATIONSVOREINSTELLUNG;
constraints 
  DIE_VOREINSTELLUNG.FUER_NOTIZEN = EINE_NOTATION.NAME;
begin 
send_debug_message "NOTATION_FUER_ANALYSENOTIZEN_VOREINSTELLEN";
  create entity The_Attribute_Role_Of_GESCHRIEBEN_IN_40 : BASE2_GESCHRIEBEN_IN_Entity aka new_unique_id(BASE2_GESCHRIEBEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation GESCHRIEBEN_IN
  with
    WAS := DIE_NOTIZEN;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_GESCHRIEBEN_IN_40;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_FUER_SPEZIFIKATION_VOREINSTELLEN

rule NOTATION_FUER_SPEZIFIKATION_VOREINSTELLEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DIE_SPEZIFIKATION);
  DIE_VOREINSTELLUNG : NOTATIONSVOREINSTELLUNG;
constraints 
  DIE_VOREINSTELLUNG.FUER_SPEZIFIKATION = EINE_NOTATION.NAME;
begin 
send_debug_message "NOTATION_FUER_SPEZIFIKATION_VOREINSTELLEN";
  create entity The_Attribute_Role_Of_GESCHRIEBEN_IN_41 : BASE2_GESCHRIEBEN_IN_Entity aka new_unique_id(BASE2_GESCHRIEBEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation GESCHRIEBEN_IN
  with
    WAS := DIE_SPEZIFIKATION;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_GESCHRIEBEN_IN_41;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_FUER_SYSTEMENTWURF_VOREINSTELLEN

rule NOTATION_FUER_SYSTEMENTWURF_VOREINSTELLEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DER_SYSTEMENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DER_SYSTEMENTWURF);
  DIE_VOREINSTELLUNG : NOTATIONSVOREINSTELLUNG;
constraints 
  DIE_VOREINSTELLUNG.FUER_SYSTEMENTWURF = EINE_NOTATION.NAME;
begin 
send_debug_message "NOTATION_FUER_SYSTEMENTWURF_VOREINSTELLEN";
  create entity The_Attribute_Role_Of_GESCHRIEBEN_IN_42 : BASE2_GESCHRIEBEN_IN_Entity aka new_unique_id(BASE2_GESCHRIEBEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation GESCHRIEBEN_IN
  with
    WAS := DER_SYSTEMENTWURF;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_GESCHRIEBEN_IN_42;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_FUER_MODULSPEZ_VOREINSTELLEN

rule NOTATION_FUER_MODULSPEZ_VOREINSTELLEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DIE_MODULSPEZ);
  DIE_VOREINSTELLUNG : NOTATIONSVOREINSTELLUNG;
constraints 
  DIE_VOREINSTELLUNG.FUER_MODULSPEZ = EINE_NOTATION.NAME;
begin 
send_debug_message "NOTATION_FUER_MODULSPEZ_VOREINSTELLEN";
  create entity The_Attribute_Role_Of_GESCHRIEBEN_IN_43 : BASE2_GESCHRIEBEN_IN_Entity aka new_unique_id(BASE2_GESCHRIEBEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation GESCHRIEBEN_IN
  with
    WAS := DIE_MODULSPEZ;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_GESCHRIEBEN_IN_43;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_FUER_CODE_VOREINSTELLEN

rule NOTATION_FUER_CODE_VOREINSTELLEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DER_CODE);
  DIE_VOREINSTELLUNG : NOTATIONSVOREINSTELLUNG;
constraints 
  DIE_VOREINSTELLUNG.FUER_CODE = EINE_NOTATION.NAME;
begin 
send_debug_message "NOTATION_FUER_CODE_VOREINSTELLEN";
  create entity The_Attribute_Role_Of_GESCHRIEBEN_IN_44 : BASE2_GESCHRIEBEN_IN_Entity aka new_unique_id(BASE2_GESCHRIEBEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation GESCHRIEBEN_IN
  with
    WAS := DER_CODE;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_GESCHRIEBEN_IN_44;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_FUER_HANDBUCH_VOREINSTELLEN

rule NOTATION_FUER_HANDBUCH_VOREINSTELLEN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DAS_HANDBUCH);
  DIE_VOREINSTELLUNG : NOTATIONSVOREINSTELLUNG;
constraints 
  DIE_VOREINSTELLUNG.FUER_HANDBUCH = EINE_NOTATION.NAME;
begin 
send_debug_message "NOTATION_FUER_HANDBUCH_VOREINSTELLEN";
  create entity The_Attribute_Role_Of_GESCHRIEBEN_IN_45 : BASE2_GESCHRIEBEN_IN_Entity aka new_unique_id(BASE2_GESCHRIEBEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation GESCHRIEBEN_IN
  with
    WAS := DAS_HANDBUCH;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_GESCHRIEBEN_IN_45;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: ZEITERFASSUNG_INITIALISIEREN

rule ZEITERFASSUNG_INITIALISIEREN[1980] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DIE_ANFORDERUNGEN : ANFORDERUNGEN_NACH_IFPUG_4;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity : BASE2_2_GLOBALE_INITIALISIERUNG_Entity;
  THE_BASE2_2_GLOBALE_INITIALISIERUNG_Relation : BASE2_2_GLOBALE_INITIALISIERUNG_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity,DIE_ANFORDERUNGEN,THE_BASE2_2_GLOBALE_INITIALISIERUNG_Entity);
  DER_ENTWICKLER : ENTWICKLER;
constraints 
  not exists(ERFASST_ZEIT(*,DER_ENTWICKLER,*));
declare 
  NICHTS_GETAN : Record_R_Type := Record_R_Type'(0.0);
begin 
send_debug_message "ZEITERFASSUNG_INITIALISIEREN";
  NICHTS_GETAN := Record_R_Type'(0.0);
  NICHTS_GETAN := Record_R_Type'(0.0);
  create entity DER_BOGEN : ZEITERFASSUNGSBOGEN aka new_unique_id(ZEITERFASSUNGSBOGEN)
 with
    ANALYSE := NICHTS_GETAN;
    SPEZIFIKATION := NICHTS_GETAN;
    GROBENTWURF := NICHTS_GETAN;
    FEINENTWURF := NICHTS_GETAN;
    CODE := NICHTS_GETAN;
    HANDBUCH := NICHTS_GETAN;
    SPEZREVIEW := NICHTS_GETAN;
    GROBENTWURFSREVIEW := NICHTS_GETAN;
    FEINENTWURFSREVIEW := NICHTS_GETAN;
    CODEREVIEW := NICHTS_GETAN;
    HANDBUCHREVIEW := NICHTS_GETAN;
    MODULTEST := NICHTS_GETAN;
    INTTEST := NICHTS_GETAN;
    SYSTEMTEST := NICHTS_GETAN;
    ANALYSE_K := NICHTS_GETAN;
    SPEZ_K := NICHTS_GETAN;
    GROBENTWURF_K := NICHTS_GETAN;
    FEINENTWURF_K := NICHTS_GETAN;
    CODE_K := NICHTS_GETAN;
    HANDBUCH_K := NICHTS_GETAN;
  end create;
  create entity The_Attribute_Role_Of_ERFASST_ZEIT_46 : BASE2_ERFASST_ZEIT_Entity aka new_unique_id(BASE2_ERFASST_ZEIT_Entity)
 with
    Dummy := 0;
  end create;
  create relation ERFASST_ZEIT
  with
    WER := DER_ENTWICKLER;
    BOGEN := DER_BOGEN;
    Attribute_Role := The_Attribute_Role_Of_ERFASST_ZEIT_46;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: REGELMENGE_LOESCHEN

rule REGELMENGE_LOESCHEN[1990] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  K : KAUSALITAETSFLUSS;
declare 
  SM : Set_S_Type := Set_S_Type'();
  S : STRING := " ";
begin 
send_debug_message "REGELMENGE_LOESCHEN";
  SM := Set_S_Type'();
  S := " ";
  SM := Set_S_Type'();
  while not ( length(K.REGELMENGE) = 0 ) loop
  S := f_get_Set_S_Type(K.REGELMENGE);
  if substring(S,1,1) = "@" then
  SM := f_put_Set_S_Type(SM,substring(S,2,100));
end if;
end loop;
  K.REGELMENGE := SM;
end rule;
-----------------------------------------------------------------------------
-- Regel: DELTA_T_BERECHNEN

rule DELTA_T_BERECHNEN[1990] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  DEL_TA : DELTAT;
begin 
send_debug_message "DELTA_T_BERECHNEN";
  if date_weekday(current_date) <= 5 then
  DEL_TA.T := delta_t div 3;
else
  DEL_TA.T := 0;
end if;
  send_tutor_message PRINT_DATE(current_date);
end rule;
-----------------------------------------------------------------------------
-- Regel: WOCHENENDE_UEBERSPRINGEN

rule WOCHENENDE_UEBERSPRINGEN[1990] taking 2880 is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
constraints 
  date_weekday(current_date) = 5;
declare 
  DUMMY2 : INTEGER := 0;
begin 
send_debug_message "WOCHENENDE_UEBERSPRINGEN";
  DUMMY2 := 0;
  DUMMY2 := 0;
end rule;
-----------------------------------------------------------------------------
-- Regel: NACHT_UEBERSPRINGEN

rule NACHT_UEBERSPRINGEN[1990] taking 960 is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
constraints 
  date_weekday(current_date) < 6;
declare 
  DUMMY2 : INTEGER := 0;
begin 
send_debug_message "NACHT_UEBERSPRINGEN";
  DUMMY2 := 0;
  DUMMY2 := 0;
end rule;
-----------------------------------------------------------------------------
-- Regel: WOCHENTAG_AUSGEBEN

rule WOCHENTAG_AUSGEBEN[1990] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
begin 
send_debug_message "WOCHENTAG_AUSGEBEN";
  if date_weekday(current_date) <= 5 then
  send_player_message PRINT_DATE(current_date);
end if;
  if date_weekday(current_date) = 1 then
  send_tutor_message PRINT_STRING("Today is Monday");
end if;
  if date_weekday(current_date) = 2 then
  send_tutor_message PRINT_STRING("Today is Tuesday");
end if;
  if date_weekday(current_date) = 3 then
  send_tutor_message PRINT_STRING("Today is Wednesday");
end if;
  if date_weekday(current_date) = 4 then
  send_tutor_message PRINT_STRING("Today is Thursday");
end if;
  if date_weekday(current_date) = 5 then
  send_tutor_message PRINT_STRING("Today is Friday");
end if;
  if date_weekday(current_date) = 6 then
  send_tutor_message PRINT_STRING("Today is Saturday");
end if;
  if date_weekday(current_date) = 7 then
  send_tutor_message PRINT_STRING("Today is Sunday");
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KOSTEN_FUER_MITARBEITER_BEI_5_TAGE_WOCHE_8H_TAG

rule KOSTEN_FUER_MITARBEITER_BEI_5_TAGE_WOCHE_8H_TAG[1990] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  EIN_MITARBEITER : MITARBEITER;
  DER_ZUSTAND : PROJEKTZUSTAND;
constraints 
  EIN_MITARBEITER.IST_EINGESTELLT = true;
  date_weekday(current_date) < 6;
begin 
send_debug_message "KOSTEN_FUER_MITARBEITER_BEI_5_TAGE_WOCHE_8H_TAG";
  DER_ZUSTAND.KOSTEN := DER_ZUSTAND.KOSTEN + EIN_MITARBEITER.KOSTEN * float(delta_t) / 180.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: AUFWAND_FUER_BEGUTACHTUNG_BEI_5_TAGE_WOCHE_8H_TAG_MITZAEHLEN

rule AUFWAND_FUER_BEGUTACHTUNG_BEI_5_TAGE_WOCHE_8H_TAG_MITZAEHLEN[1990] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT : BASE2_BEGUTACHTET_Entity;
  REVIEWT : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT,EIN_ENTWICKLER,EIN_DOKUMENT);
  DER_ZUSTAND : PROJEKTZUSTAND;
constraints 
  date_weekday(current_date) < 6;
begin 
send_debug_message "AUFWAND_FUER_BEGUTACHTUNG_BEI_5_TAGE_WOCHE_8H_TAG_MITZAEHLEN";
  DER_ZUSTAND.AUFWAND_REVIEWS := DER_ZUSTAND.AUFWAND_REVIEWS + float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT.ZEITANTEIL / 18000.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: BERECHNE_GESAMTAUFWAND_UND_KOSTEN

rule BERECHNE_GESAMTAUFWAND_UND_KOSTEN[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
begin 
send_debug_message "BERECHNE_GESAMTAUFWAND_UND_KOSTEN";
  DER_ZUSTAND.GESAMTAUFWAND := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE / 132.0 + DER_ZUSTAND.AUFWAND_ENTWURFSPHASE / 132.0 + DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE / 132.0 + DER_ZUSTAND.AUFWAND_TESTPHASE / 132.0 + DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG / 132.0;
  if DER_ZUSTAND.GESAMTAUFWAND /= 0.0 then
  DER_ZUSTAND.KOSTEN_PRO_MM := DER_ZUSTAND.KOSTEN / DER_ZUSTAND.GESAMTAUFWAND;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: EINARBEITUNG_BEENDEN

rule EINARBEITUNG_BEENDEN[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  EIN_ENTWICKLER : ENTWICKLER;
  DAS_PROJEKT : PROJEKT;
  THE_ATTRIBUTE_ROLE_OF_EINARBEITEN : BASE2_ARBEITET_SICH_EIN_Entity;
  EINARBEITEN : ARBEITET_SICH_EIN(THE_ATTRIBUTE_ROLE_OF_EINARBEITEN,EIN_ENTWICKLER,DAS_PROJEKT);
constraints 
  current_date < DER_ZUSTAND.PROJEKTBEGINN + 14400 or current_date >= THE_ATTRIBUTE_ROLE_OF_EINARBEITEN.BIS;
begin 
send_debug_message "EINARBEITUNG_BEENDEN";
  send_tutor_message PRINT_STRING("Project coaching done" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
  delete(EINARBEITEN);
delete(The_Attribute_Role_Of_EINARBEITEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALTE_TAETIGKEIT_BEENDEN

rule ALTE_TAETIGKEIT_BEENDEN[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  ALTES_DOKUMENT : DOKUMENT;
  NEUES_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_ALTER_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  ALTER_AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_ALTER_AUFTRAG,EIN_ENTWICKLER,ALTES_DOKUMENT);
  THE_ATTRIBUTE_ROLE_OF_NEUER_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  NEUER_AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_NEUER_AUFTRAG,EIN_ENTWICKLER,NEUES_DOKUMENT);
  K : KAUSALITAETSFLUSS;
constraints 
  THE_ATTRIBUTE_ROLE_OF_NEUER_AUFTRAG.STARTDATUM > THE_ATTRIBUTE_ROLE_OF_ALTER_AUFTRAG.STARTDATUM;
  ( Get_Index(K.REGELMENGE,"lasse_xxx") > 0 );
begin 
send_debug_message "ALTE_TAETIGKEIT_BEENDEN";
  send_player_message NEUE_AUFGABE_AKZEPTIERT(EIN_ENTWICKLER,ALTES_DOKUMENT,NEUES_DOKUMENT);
  delete(ALTER_AUFTRAG);
delete(The_Attribute_Role_Of_ALTER_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALTE_TAETIGKEIT_BEI_GLEICHEM_DOKUMENT_BEENDEN

rule ALTE_TAETIGKEIT_BEI_GLEICHEM_DOKUMENT_BEENDEN[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_ALTER_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  ALTER_AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_ALTER_AUFTRAG,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_ATTRIBUTE_ROLE_OF_NEUER_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  NEUER_AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_NEUER_AUFTRAG,EIN_ENTWICKLER,EIN_DOKUMENT);
  K : KAUSALITAETSFLUSS;
constraints 
  THE_ATTRIBUTE_ROLE_OF_NEUER_AUFTRAG.STARTDATUM > THE_ATTRIBUTE_ROLE_OF_ALTER_AUFTRAG.STARTDATUM;
  ( Get_Index(K.REGELMENGE,"lasse_xxx") > 0 );
begin 
send_debug_message "ALTE_TAETIGKEIT_BEI_GLEICHEM_DOKUMENT_BEENDEN";
  send_player_message NEUE_AUFGABE_GLEICHES_DOK_AKZEPTIERT(EIN_ENTWICKLER,EIN_DOKUMENT);
  delete(ALTER_AUFTRAG);
delete(The_Attribute_Role_Of_ALTER_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: AUFTRAG_LOESCHEN_BEI_ABBRUCH_VON_TAETIGKEIT

rule AUFTRAG_LOESCHEN_BEI_ABBRUCH_VON_TAETIGKEIT[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,EIN_DOKUMENT);
begin 
send_debug_message "AUFTRAG_LOESCHEN_BEI_ABBRUCH_VON_TAETIGKEIT";
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ABBRUCH_DUMMY_REGEL

rule Deactivating_1_ABBRUCH_DUMMY_REGEL[220] taking 0  is
structure 
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
constraints 
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ABBRUCH_DUMMY_REGEL";
  delete(THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ABBRUCH_DUMMY_REGEL

rule Activating_ABBRUCH_DUMMY_REGEL[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
constraints 
  not exists(BASE2_1_ABBRUCH_DUMMY_REGEL_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,*));
begin 
send_debug_message "Activating_ABBRUCH_DUMMY_REGEL";
  create entity THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity aka new_unique_id(BASE2_1_ABBRUCH_DUMMY_REGEL_Entity)
 with
    LCD := current_date;
  end create;
  create relation BASE2_1_ABBRUCH_DUMMY_REGEL_Relation
  with
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_EIN_DOKUMENT := EIN_DOKUMENT;
    RL_THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN := THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN;
    RL_THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity := THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ABBRUCH_DUMMY_REGEL

rule Active_ABBRUCH_DUMMY_REGEL[800] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Relation : BASE2_1_ABBRUCH_DUMMY_REGEL_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity);
begin 
send_debug_message "Active_ABBRUCH_DUMMY_REGEL";
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS

rule Deactivating_1_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS[240] taking 0  is
structure 
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
constraints 
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS";
  delete(THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS

rule Activating_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS[990] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Relation : BASE2_1_ABBRUCH_DUMMY_REGEL_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity);
constraints 
  not exists(BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,*));
begin 
send_debug_message "Activating_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS";
  create entity THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity aka new_unique_id(BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity)
 with
    LCD := current_date;
  end create;
  create relation BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation
  with
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_EIN_DOKUMENT := EIN_DOKUMENT;
    RL_THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN := THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN;
    RL_THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity := THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
    RL_THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity := THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS

rule Active_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS[790] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Relation : BASE2_1_ABBRUCH_DUMMY_REGEL_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity);
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity);
begin 
send_debug_message "Active_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS";
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI

rule Deactivating_1_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI[260] taking 0  is
structure 
  THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity : BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity;
constraints 
  THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI";
  delete(THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI

rule Activating_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI[980] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Relation : BASE2_1_ABBRUCH_DUMMY_REGEL_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity);
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity);
constraints 
  not exists(BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity,*));
begin 
send_debug_message "Activating_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI";
  create entity THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity : BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity aka new_unique_id(BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity)
 with
    LCD := current_date;
  end create;
  create relation BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation
  with
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_EIN_DOKUMENT := EIN_DOKUMENT;
    RL_THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN := THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN;
    RL_THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity := THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
    RL_THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity := THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
    RL_THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity := THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI

rule Active_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI[780] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Relation : BASE2_1_ABBRUCH_DUMMY_REGEL_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity);
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity);
  THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity : BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity;
  THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation : BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity,THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity);
begin 
send_debug_message "Active_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI";
  THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_DREI

rule ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_DREI[970] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,EIN_DOKUMENT);
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity : BASE2_1_ABBRUCH_DUMMY_REGEL_Entity;
  THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Relation : BASE2_1_ABBRUCH_DUMMY_REGEL_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity);
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity;
  THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation : BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity);
  THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity : BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity;
  THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation : BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Relation(EIN_ENTWICKLER,EIN_DOKUMENT,THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,THE_BASE2_1_ABBRUCH_DUMMY_REGEL_Entity,THE_BASE2_2_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_EINS_Entity,THE_BASE2_3_ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_ZWEI_Entity);
begin 
send_debug_message "ABBRUCH_DUMMY_REGEL_SCHACHTELUNG_DREI";
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: BEGUTACHTUNG_BEENDEN

rule BEGUTACHTUNG_BEENDEN[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT : BASE2_BEGUTACHTET_Entity;
  REVIEWT : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT,EIN_ENTWICKLER,EIN_DOKUMENT);
constraints 
  not (exists_extended(REVIEW_FINDET_STATT(*,EIN_DOKUMENT,EIN_ENTWICKLER,*)) or exists_extended(REVIEW_FINDET_STATT(*,EIN_DOKUMENT,*,EIN_ENTWICKLER)) or exists(REVIEW_3_FINDET_STATT(*,EIN_DOKUMENT,*,*,EIN_ENTWICKLER)) );
begin 
send_debug_message "BEGUTACHTUNG_BEENDEN";
  send_player_message AUFGEHOERT_DOKUMENT_ZU_BEGUTACHTEN(EIN_ENTWICKLER,EIN_DOKUMENT);
  delete(REVIEWT);
delete(The_Attribute_Role_Of_REVIEWT);
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_SPEZIFIKATIONSREVIEWBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_SPEZIFIKATIONSREVIEWBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : ANALYSENOTIZEN;
  DAS_DOKUMENT : SPEZIFIKATION;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DIE_VORGABE.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not (exists(REVIEW_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) );
  not (exists_extended(REVIEW_FINDET_STATT(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DAS_DOKUMENT,*,*,*)) or exists_extended(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_DOKUMENT,*,*)) );
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_SPEZIFIKATIONSREVIEWBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.SPEZREVIEWEFFEKTIVITAET := DIE_PRFEFF.SPEZREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_SYSTEMENTWURFSREVIEWBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_SYSTEMENTWURFSREVIEWBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : SPEZIFIKATION;
  DAS_DOKUMENT : SYSTEMENTWURF;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not (exists(REVIEW_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) );
  not (exists_extended(REVIEW_FINDET_STATT(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DAS_DOKUMENT,*,*,*)) );
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_SYSTEMENTWURFSREVIEWBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.ENTWURFSREVIEWEFFEKTIVITAET := DIE_PRFEFF.ENTWURFSREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_MODULSPEZREVIEWBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_MODULSPEZREVIEWBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : SYSTEMENTWURF;
  DAS_DOKUMENT : MODULSPEZIFIKATION;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not (exists(REVIEW_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) );
  not (exists_extended(REVIEW_FINDET_STATT(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DAS_DOKUMENT,*,*,*)) );
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_MODULSPEZREVIEWBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.MODULSPEZREVIEWEFFEKTIVITAET := DIE_PRFEFF.MODULSPEZREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_CODEREVIEWBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_CODEREVIEWBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : MODULSPEZIFIKATION;
  DAS_DOKUMENT : CODE;
  DER_BERICHT : CODEREVIEWBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not (exists(REVIEW_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) );
  not (exists_extended(REVIEW_FINDET_STATT(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DAS_DOKUMENT,*,*,*)) );
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_CODEREVIEWBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.CODEREVIEWEFFEKTIVITAET := DIE_PRFEFF.CODEREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_HANDBUCHREVIEWBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_HANDBUCHREVIEWBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : SPEZIFIKATION;
  DAS_DOKUMENT : HANDBUCH;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not (exists(REVIEW_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DAS_DOKUMENT,*,*)) );
  not (exists_extended(REVIEW_FINDET_STATT(*,DAS_DOKUMENT,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DAS_DOKUMENT,*,*,*)) or exists_extended(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_DOKUMENT,*,*)) );
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_HANDBUCHREVIEWBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.HANDBUCHREVIEWEFFEKTIVITAET := DIE_PRFEFF.HANDBUCHREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_MODULTESTBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_MODULTESTBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : MODULSPEZIFIKATION;
  DAS_DOKUMENT : CODE;
  DER_BERICHT : MODULTESTBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not exists(SOLL_MODULE_TESTEN(*,*,DAS_DOKUMENT));
  not exists_extended(TESTET_MODULE(*,*,DAS_DOKUMENT));
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_MODULTESTBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.MODULTESTEFFEKTIVITAET := DIE_PRFEFF.MODULTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_SYSTEMTESTBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_SYSTEMTESTBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : SPEZIFIKATION;
  DAS_DOKUMENT : CODE;
  DER_BERICHT : SYSTEMTESTBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not exists(SOLL_SYSTEM_TESTEN(*,*,DAS_DOKUMENT));
  not exists_extended(TESTET_SYSTEM(*,*,DAS_DOKUMENT));
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_SYSTEMTESTBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.SYSTEMTESTEFFEKTIVITAET := DIE_PRFEFF.SYSTEMTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_INTEGRATIONSTESTBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_INTEGRATIONSTESTBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : SYSTEMENTWURF;
  DAS_DOKUMENT : CODE;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not exists(SOLL_SUBSYSTEME_TESTEN(*,*,DAS_DOKUMENT));
  not exists_extended(TESTET_SUBSYSTEME(*,*,DAS_DOKUMENT));
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_INTEGRATIONSTESTBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.INTEGRATIONSTESTEFFEKTIVITAET := DIE_PRFEFF.INTEGRATIONSTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_AUF_BASIS_VON_ABNAHMETESTBERICHT_FERTIG_SEIN

rule MIT_KORREKTUR_AUF_BASIS_VON_ABNAHMETESTBERICHT_FERTIG_SEIN[1000] taking 0  is
structure 
  DIE_VORGABE : SPEZIFIKATION;
  DAS_DOKUMENT : CODE;
  DER_BERICHT : ABNAHMETESTBERICHT;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  not ( length(DER_BERICHT.INHALT) = 0 );
  ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 );
  not exists(KORRIGIERT(*,*,*,DER_BERICHT));
  not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT));
  not exists(SOLL_ABNEHMEN(*,*,DAS_DOKUMENT));
  not exists_extended(NIMMT_AB(*,*,DAS_DOKUMENT));
  not ( length(DAS_DOKUMENT.INHALT) = 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_AUF_BASIS_VON_ABNAHMETESTBERICHT_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_VORGABE.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.ABNAHMETESTEFFEKTIVITAET := DIE_PRFEFF.ABNAHMETESTEFFEKTIVITAET * (1.0 - 20.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: ZEITANTEIL_BERECHNEN

rule ZEITANTEIL_BERECHNEN[1990] taking 0  is
structure 
  DUMMY : KUNDE;
  THE_BASE2_1_INITIALIZE_Entity : BASE2_1_INITIALIZE_Entity;
  THE_BASE2_1_INITIALIZE_Relation : BASE2_1_INITIALIZE_Relation(DUMMY,THE_BASE2_1_INITIALIZE_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_PRODUKT : DOKUMENT;
  EIN_PRUEFLING : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_ARBEITET : BASE2_BEARBEITET_Entity;
  ARBEITET : BEARBEITET(THE_ATTRIBUTE_ROLE_OF_ARBEITET,EIN_ENTWICKLER,EIN_PRODUKT);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT : BASE2_BEGUTACHTET_Entity;
  REVIEWT : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT,EIN_ENTWICKLER,EIN_PRUEFLING);
begin 
send_debug_message "ZEITANTEIL_BERECHNEN";
  if THE_ATTRIBUTE_ROLE_OF_REVIEWT.ZEITANTEIL <= THE_ATTRIBUTE_ROLE_OF_ARBEITET.ZEITANTEIL then
  THE_ATTRIBUTE_ROLE_OF_ARBEITET.ZEITANTEIL := THE_ATTRIBUTE_ROLE_OF_ARBEITET.ZEITANTEIL - THE_ATTRIBUTE_ROLE_OF_REVIEWT.ZEITANTEIL;
else
  THE_ATTRIBUTE_ROLE_OF_REVIEWT.ZEITANTEIL := 0.0;
  send_player_message GUTACHTER_BEREITET_SICH_NICHT_VOR(EIN_ENTWICKLER);
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: GUTACHTER1_BEREITET_SICH_NICHT_VOR

rule GUTACHTER1_BEREITET_SICH_NICHT_VOR[1000] taking 0  is
structure 
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  EIN_PRUEFLING : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,EIN_PRUEFLING,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT1 : BASE2_BEGUTACHTET_Entity;
  REVIEWT1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT1,GUTACHTER_1,EIN_PRUEFLING);
constraints 
  THE_ATTRIBUTE_ROLE_OF_REVIEWT1.ZEITANTEIL = 0.0;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT1.PRUEFLEISTUNG > 0.0;
begin 
send_debug_message "GUTACHTER1_BEREITET_SICH_NICHT_VOR";
  if exists(REVIEW_3_FINDET_STATT(*,EIN_PRUEFLING,GUTACHTER_1,GUTACHTER_2,*)) then
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ := gib_multiplizierte_quoten(THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ,0.8);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := 0.8 * THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
else
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ := gib_multiplizierte_quoten(THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ,0.7);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := 0.7 * THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT1.PRUEFLEISTUNG := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: GUTACHTER2_BEREITET_SICH_NICHT_VOR

rule GUTACHTER2_BEREITET_SICH_NICHT_VOR[1000] taking 0  is
structure 
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  EIN_PRUEFLING : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,EIN_PRUEFLING,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT2 : BASE2_BEGUTACHTET_Entity;
  REVIEWT2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT2,GUTACHTER_2,EIN_PRUEFLING);
constraints 
  THE_ATTRIBUTE_ROLE_OF_REVIEWT2.ZEITANTEIL = 0.0;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT2.PRUEFLEISTUNG > 0.0;
begin 
send_debug_message "GUTACHTER2_BEREITET_SICH_NICHT_VOR";
  if exists(REVIEW_3_FINDET_STATT(*,EIN_PRUEFLING,GUTACHTER_1,GUTACHTER_2,*)) then
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ := gib_multiplizierte_quoten(THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ,0.8);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := 0.8 * THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
else
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ := gib_multiplizierte_quoten(THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ,0.7);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := 0.7 * THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT2.PRUEFLEISTUNG := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: GUTACHTER3_BEREITET_SICH_NICHT_VOR

rule GUTACHTER3_BEREITET_SICH_NICHT_VOR[1000] taking 0  is
structure 
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  GUTACHTER_3 : ENTWICKLER;
  EIN_PRUEFLING : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_3_FINDET_STATT_Entity;
  REVIEW : REVIEW_3_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,EIN_PRUEFLING,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3 : BASE2_BEGUTACHTET_Entity;
  REVIEWT3 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT3,GUTACHTER_3,EIN_PRUEFLING);
constraints 
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL = 0.0;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.PRUEFLEISTUNG > 0.0;
begin 
send_debug_message "GUTACHTER3_BEREITET_SICH_NICHT_VOR";
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ := gib_multiplizierte_quoten(THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ,0.8);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := 0.8 * THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.PRUEFLEISTUNG := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: MELDE_WIEDER_VERFUEGBAREN_ENTWICKLER

rule MELDE_WIEDER_VERFUEGBAREN_ENTWICKLER[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
constraints 
  EIN_ENTWICKLER.VERFUEGBAR_AB = current_date;
begin 
send_debug_message "MELDE_WIEDER_VERFUEGBAREN_ENTWICKLER";
  send_player_message WIEDER_VERFUEGBAREN_ENTWICKLER_AUSGEBEN(EIN_ENTWICKLER,EIN_ENTWICKLER.VERFUEGBAR_AB);
end rule;
-----------------------------------------------------------------------------
-- Regel: ZEIGE_VERFUEGBAREN_ENTWICKLER

rule ZEIGE_VERFUEGBAREN_ENTWICKLER[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  K : KAUSALITAETSFLUSS;
constraints 
  not EIN_ENTWICKLER.IST_EINGESTELLT;
  ( Get_Index(K.REGELMENGE,"zeige_verfuegbare_Entwickler") > 0 );
begin 
send_debug_message "ZEIGE_VERFUEGBAREN_ENTWICKLER";
  send_player_message VERFUEGBAREN_ENTWICKLER_AUSGEBEN(EIN_ENTWICKLER,EIN_ENTWICKLER.VERFUEGBAR_AB);
end rule;
-----------------------------------------------------------------------------
-- Regel: ZEIGE_ZUGETEILTEN_ENTWICKLER

rule ZEIGE_ZUGETEILTEN_ENTWICKLER[1000] taking 0  is
structure 
  EIN_ENTWICKLER : ENTWICKLER;
  K : KAUSALITAETSFLUSS;
constraints 
  EIN_ENTWICKLER.IST_EINGESTELLT;
  ( Get_Index(K.REGELMENGE,"zeige_zugeteilte_Entwickler") > 0 );
begin 
send_debug_message "ZEIGE_ZUGETEILTEN_ENTWICKLER";
  send_player_message ZUGETEILTEN_ENTWICKLER_AUSGEBEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: ES_IST_KEINE_NOTATION_VORGEGEBEN

rule ES_IST_KEINE_NOTATION_VORGEGEBEN[1000] taking 0  is
structure 
  EIN_DOKUMENT : DOKUMENT;
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,EIN_DOKUMENT);
constraints 
  not exists(GESCHRIEBEN_IN(*,EIN_DOKUMENT,*));
begin 
send_debug_message "ES_IST_KEINE_NOTATION_VORGEGEBEN";
  send_player_message KEINE_NOTATION_VORGEGEBEN(EIN_DOKUMENT);
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: KEINE_PROGRAMMIERSPRACHE_BEIM_SPEZIFIZIEREN_DER_MODULE_VORGEGEBEN

rule KEINE_PROGRAMMIERSPRACHE_BEIM_SPEZIFIZIEREN_DER_MODULE_VORGEGEBEN[1000] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DER_CODE : CODE;
constraints 
  not exists(GESCHRIEBEN_IN(*,DER_CODE,*));
begin 
send_debug_message "KEINE_PROGRAMMIERSPRACHE_BEIM_SPEZIFIZIEREN_DER_MODULE_VORGEGEBEN";
  send_player_message KEINE_NOTATION_VORGEGEBEN(DER_CODE);
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_VORGEBEN

rule NOTATION_VORGEBEN[1000] taking 0  is
structure 
  EINE_NOTATION : NOTATION;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_NOTIERT_WERDEN : BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity;
  SOLL_NOTIERT_WERDEN : SOLL_GESCHRIEBEN_WERDEN_IN(THE_ATTRIBUTE_ROLE_OF_SOLL_NOTIERT_WERDEN,EIN_DOKUMENT,EINE_NOTATION);
  THE_ATTRIBUTE_ROLE_OF_IST_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  IST_GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_IST_GEEIGNET,EINE_NOTATION,EIN_DOKUMENT);
constraints 
  not exists(GESCHRIEBEN_IN(*,EIN_DOKUMENT,*));
begin 
send_debug_message "NOTATION_VORGEBEN";
  delete(SOLL_NOTIERT_WERDEN);
delete(The_Attribute_Role_Of_SOLL_NOTIERT_WERDEN);
  create entity The_Attribute_Role_Of_GESCHRIEBEN_IN_47 : BASE2_GESCHRIEBEN_IN_Entity aka new_unique_id(BASE2_GESCHRIEBEN_IN_Entity)
 with
    Dummy := 0;
  end create;
  create relation GESCHRIEBEN_IN
  with
    WAS := EIN_DOKUMENT;
    IN_WAS := EINE_NOTATION;
    Attribute_Role := The_Attribute_Role_Of_GESCHRIEBEN_IN_47;
  end create;
  send_player_message NOTATION_WURDE_VORGEGEBEN(EINE_NOTATION,EIN_DOKUMENT);
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_WECHSELN

rule NOTATION_WECHSELN[1000] taking 0  is
structure 
  ALTE_NOTATION : NOTATION;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_ALTE_VORGABE : BASE2_GESCHRIEBEN_IN_Entity;
  ALTE_VORGABE : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_ALTE_VORGABE,EIN_DOKUMENT,ALTE_NOTATION);
  NEUE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NEUE_VORGABE : BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity;
  NEUE_VORGABE : SOLL_GESCHRIEBEN_WERDEN_IN(THE_ATTRIBUTE_ROLE_OF_NEUE_VORGABE,EIN_DOKUMENT,NEUE_NOTATION);
  THE_ATTRIBUTE_ROLE_OF_IST_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  IST_GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_IST_GEEIGNET,NEUE_NOTATION,EIN_DOKUMENT);
constraints 
  gib_afp(EIN_DOKUMENT.INHALT) = 0.0;
  not exists(PRODUZIERT(*,*,EIN_DOKUMENT));
begin 
send_debug_message "NOTATION_WECHSELN";
  delete(ALTE_VORGABE);
delete(The_Attribute_Role_Of_ALTE_VORGABE);
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_IST_FUER_DAS_DOKUMENT_UNGEEIGNET

rule NOTATION_IST_FUER_DAS_DOKUMENT_UNGEEIGNET[1000] taking 0  is
structure 
  EINE_NOTATION : NOTATION;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_NOTIERT_WERDEN : BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity;
  SOLL_NOTIERT_WERDEN : SOLL_GESCHRIEBEN_WERDEN_IN(THE_ATTRIBUTE_ROLE_OF_SOLL_NOTIERT_WERDEN,EIN_DOKUMENT,EINE_NOTATION);
constraints 
  not exists(GEEIGNET_FUER(*,EINE_NOTATION,EIN_DOKUMENT));
begin 
send_debug_message "NOTATION_IST_FUER_DAS_DOKUMENT_UNGEEIGNET";
  delete(SOLL_NOTIERT_WERDEN);
delete(The_Attribute_Role_Of_SOLL_NOTIERT_WERDEN);
  send_player_message NOTATION_IST_UNGEEIGNET(EINE_NOTATION,EIN_DOKUMENT);
end rule;
-----------------------------------------------------------------------------
-- Regel: NOTATION_DARF_NICHT_VERAENDERT_WERDEN

rule NOTATION_DARF_NICHT_VERAENDERT_WERDEN[1000] taking 0  is
structure 
  EINE_NOTATION : NOTATION;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_NOTIERT_WERDEN : BASE2_SOLL_GESCHRIEBEN_WERDEN_IN_Entity;
  SOLL_NOTIERT_WERDEN : SOLL_GESCHRIEBEN_WERDEN_IN(THE_ATTRIBUTE_ROLE_OF_SOLL_NOTIERT_WERDEN,EIN_DOKUMENT,EINE_NOTATION);
constraints 
  gib_afp(EIN_DOKUMENT.INHALT) > 0.0 or exists(PRODUZIERT(*,*,EIN_DOKUMENT));
begin 
send_debug_message "NOTATION_DARF_NICHT_VERAENDERT_WERDEN";
  delete(SOLL_NOTIERT_WERDEN);
delete(The_Attribute_Role_Of_SOLL_NOTIERT_WERDEN);
  send_player_message NOTATION_DARF_NICHT_MEHR_GEAENDERT_WERDEN(EIN_DOKUMENT);
end rule;
-----------------------------------------------------------------------------
-- Regel: PROJEKT_STOPPEN_BEI_BUDGET_OVERRUN

rule PROJEKT_STOPPEN_BEI_BUDGET_OVERRUN[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DIE_ZIELE : PROJEKTZIELE;
constraints 
  not DER_ZUSTAND.PROJEKT_IST_BEENDET;
  DER_ZUSTAND.KOSTEN > DIE_ZIELE.SOLL_KOSTEN * 2.0;
begin 
send_debug_message "PROJEKT_STOPPEN_BEI_BUDGET_OVERRUN";
  DER_ZUSTAND.PROJEKT_IST_BEENDET := true;
  DER_ZUSTAND.PROJEKTENDE := current_date;
  send_player_message PROJEKTABBRUCH_BEI_KOSTENUEBERLAUF;
end rule;
-----------------------------------------------------------------------------
-- Regel: PROJEKT_STOPPEN_BEI_SCHEDULE_OVERRUN

rule PROJEKT_STOPPEN_BEI_SCHEDULE_OVERRUN[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DIE_ZIELE : PROJEKTZIELE;
constraints 
  not DER_ZUSTAND.PROJEKT_IST_BEENDET;
  (current_date - DER_ZUSTAND.PROJEKTBEGINN ) > (DIE_ZIELE.SOLL_TERMIN - DER_ZUSTAND.PROJEKTBEGINN ) * 2;
begin 
send_debug_message "PROJEKT_STOPPEN_BEI_SCHEDULE_OVERRUN";
  DER_ZUSTAND.PROJEKT_IST_BEENDET := true;
  DER_ZUSTAND.PROJEKTENDE := current_date;
  send_player_message PROJEKTABBRUCH_BEI_TERMINUEBERLAUF;
end rule;
-----------------------------------------------------------------------------
-- Regel: AUFTRAG_LOESCHEN_AM_PROJEKTENDE

rule AUFTRAG_LOESCHEN_AM_PROJEKTENDE[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_BEARBEITEN_Entity;
  AUFTRAG : SOLL_BEARBEITEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,EIN_DOKUMENT);
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET = true;
begin 
send_debug_message "AUFTRAG_LOESCHEN_AM_PROJEKTENDE";
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: BEGUTACHTUNG_BEENDEN_AM_PROJEKTENDE

rule BEGUTACHTUNG_BEENDEN_AM_PROJEKTENDE[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  EIN_ENTWICKLER : ENTWICKLER;
  EIN_DOKUMENT : DOKUMENT;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT : BASE2_BEGUTACHTET_Entity;
  REVIEWT : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT,EIN_ENTWICKLER,EIN_DOKUMENT);
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET = true;
begin 
send_debug_message "BEGUTACHTUNG_BEENDEN_AM_PROJEKTENDE";
  send_player_message AUFGEHOERT_DOKUMENT_ZU_BEGUTACHTEN(EIN_ENTWICKLER,EIN_DOKUMENT);
  delete(REVIEWT);
delete(The_Attribute_Role_Of_REVIEWT);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_FREIGEBEN_AM_PROJEKTENDE

rule ENTWICKLER_FREIGEBEN_AM_PROJEKTENDE[1000] taking 45 is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  EIN_ENTWICKLER : ENTWICKLER;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  EIN_ENTWICKLER.IST_EINGESTELLT;
begin 
send_debug_message "ENTWICKLER_FREIGEBEN_AM_PROJEKTENDE";
  EIN_ENTWICKLER.IST_EINGESTELLT := false;
  send_player_message ENTWICKLER_WURDE_ENTLASSEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: SIMULATION_IST_BEENDET

rule SIMULATION_IST_BEENDET[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  current_date > DER_ZUSTAND.PROJEKTENDE;
begin 
send_debug_message "SIMULATION_IST_BEENDET";
  send_player_message SIMULATION_BEENDET;
end rule;
-----------------------------------------------------------------------------
-- Regel: RESULTATE_AUSGEBEN

rule RESULTATE_AUSGEBEN[1000] taking 0  is
structure 
  DIE_ZIELE : PROJEKTZIELE;
  DER_ZUSTAND : PROJEKTZUSTAND;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  DEL_TA : DELTAT;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  DER_ZUSTAND.PROJEKTENDE = current_date;
  DER_ZUSTAND.GESAMTAUFWAND /= 0.0;
declare 
  ANZAHL_TAGE : INTEGER := 0;
  AUFWAND_MM_S : REAL := 0.0;
  AUFWAND_MM_E : REAL := 0.0;
  AUFWAND_MM_C : REAL := 0.0;
  AUFWAND_MM_T : REAL := 0.0;
  AUFWAND_MM_H : REAL := 0.0;
  AUFWAND_MM_PR : REAL := 0.0;
  AUFWAND_MM_PT : REAL := 0.0;
  AUFWAND_MM_KR : REAL := 0.0;
  AUFWAND_MM_KT : REAL := 0.0;
  AFP_KUNDENWUNSCH : REAL := 0.0;
  ZIELERREICHUNG : REAL := 0.0;
  AFP_KUNDE : REAL := 0.0;
  V_CODE : REAL := 0.0;
  K_CODE : REAL := 0.0;
  V_HBUCH : REAL := 0.0;
  K_HBUCH : REAL := 0.0;
  GERUNDET : REAL := 0.0;
  GERUNDET1 : REAL := 0.0;
  GERUNDET2 : REAL := 0.0;
  GERUNDET3 : REAL := 0.0;
  GERUNDET4 : REAL := 0.0;
begin 
send_debug_message "RESULTATE_AUSGEBEN";
  ANZAHL_TAGE := 0;
  AUFWAND_MM_S := 0.0;
  AUFWAND_MM_E := 0.0;
  AUFWAND_MM_C := 0.0;
  AUFWAND_MM_T := 0.0;
  AUFWAND_MM_H := 0.0;
  AUFWAND_MM_PR := 0.0;
  AUFWAND_MM_PT := 0.0;
  AUFWAND_MM_KR := 0.0;
  AUFWAND_MM_KT := 0.0;
  AFP_KUNDENWUNSCH := 0.0;
  ZIELERREICHUNG := 0.0;
  AFP_KUNDE := 0.0;
  V_CODE := 0.0;
  K_CODE := 0.0;
  V_HBUCH := 0.0;
  K_HBUCH := 0.0;
  GERUNDET := 0.0;
  GERUNDET1 := 0.0;
  GERUNDET2 := 0.0;
  GERUNDET3 := 0.0;
  GERUNDET4 := 0.0;
  ANZAHL_TAGE := ((current_date - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440;
  AUFWAND_MM_S := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE / 132.0;
  AUFWAND_MM_E := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE / 132.0;
  AUFWAND_MM_C := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE / 132.0;
  AUFWAND_MM_T := DER_ZUSTAND.AUFWAND_TESTPHASE / 132.0;
  AUFWAND_MM_H := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG / 132.0;
  AUFWAND_MM_PR := DER_ZUSTAND.AUFWAND_REVIEWS / 132.0;
  AUFWAND_MM_PT := DER_ZUSTAND.AUFWAND_TESTS / 132.0;
  AUFWAND_MM_KR := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS / 132.0;
  AUFWAND_MM_KT := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS / 132.0;
  AFP_KUNDENWUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  GERUNDET := float(round(DER_ZUSTAND.GESAMTAUFWAND * 100.0)) / 100.0;
  send_player_message DATEN_UEBER_PROJEKT(ANZAHL_TAGE,GERUNDET,DER_ZUSTAND.KOSTEN);
  if float(DIE_SPEZIFIKATION.SEITEN) > 0.0 then
  GERUNDET := float(round(DIE_SPEZIFIKATION.ANZ_AFP * 100.0)) / 100.0;
  GERUNDET1 := float(round(100.0 * DIE_SPEZIFIKATION.ANZ_AFP / AFP_KUNDENWUNSCH * 100.0)) / 100.0;
  GERUNDET2 := float(round(DIE_SPEZIFIKATION.FEHLER_PRO_SEITE * 100.0)) / 100.0;
  send_player_message ENDZUSTAND_VON_DOKUMENT(DIE_SPEZIFIKATION,DIE_SPEZIFIKATION.SEITEN,GERUNDET,GERUNDET1,trunc(DIE_SPEZIFIKATION.ANZ_FEHLER_GES),GERUNDET2);
end if;
  if float(DER_ENTWURF.SEITEN) > 0.0 then
  GERUNDET := float(round(DER_ENTWURF.ANZ_AFP * 100.0)) / 100.0;
  GERUNDET1 := float(round(100.0 * DER_ENTWURF.ANZ_AFP / AFP_KUNDENWUNSCH * 100.0)) / 100.0;
  GERUNDET2 := float(round(DER_ENTWURF.FEHLER_PRO_SEITE * 100.0)) / 100.0;
  send_player_message ENDZUSTAND_VON_DOKUMENT(DER_ENTWURF,DER_ENTWURF.SEITEN,GERUNDET,GERUNDET1,trunc(DER_ENTWURF.ANZ_FEHLER_GES),GERUNDET2);
end if;
  if float(DIE_MODULSPEZ.SEITEN) > 0.0 then
  GERUNDET := float(round(DIE_MODULSPEZ.ANZ_AFP * 100.0)) / 100.0;
  GERUNDET1 := float(round(100.0 * DIE_MODULSPEZ.ANZ_AFP / AFP_KUNDENWUNSCH * 100.0)) / 100.0;
  GERUNDET2 := float(round(DIE_MODULSPEZ.FEHLER_PRO_SEITE * 100.0)) / 100.0;
  send_player_message ENDZUSTAND_VON_DOKUMENT(DIE_MODULSPEZ,DIE_MODULSPEZ.SEITEN,GERUNDET,GERUNDET1,trunc(DIE_MODULSPEZ.ANZ_FEHLER_GES),GERUNDET2);
end if;
  if float(DER_CODE.ZEILEN) > 0.0 then
  GERUNDET := float(round(DER_CODE.ANZ_AFP * 100.0)) / 100.0;
  GERUNDET1 := float(round(100.0 * DER_CODE.ANZ_AFP / AFP_KUNDENWUNSCH * 100.0)) / 100.0;
  GERUNDET2 := float(round(DER_CODE.FEHLER_PRO_KLOC * 100.0)) / 100.0;
  send_player_message ENDZUSTAND_DES_CODES(DER_CODE.ZEILEN,GERUNDET,GERUNDET1,trunc(DER_CODE.ANZ_AF),trunc(DER_CODE.ANZ_GF),trunc(DER_CODE.ANZ_FF),trunc(DER_CODE.ANZ_IF),GERUNDET2);
end if;
  if float(DAS_HANDBUCH.SEITEN) > 0.0 then
  GERUNDET := float(round(DAS_HANDBUCH.ANZ_AFP * 100.0)) / 100.0;
  GERUNDET1 := float(round(100.0 * DAS_HANDBUCH.ANZ_AFP / AFP_KUNDENWUNSCH * 100.0)) / 100.0;
  GERUNDET2 := float(round(DAS_HANDBUCH.FEHLER_PRO_SEITE * 100.0)) / 100.0;
  send_player_message ENDZUSTAND_VON_DOKUMENT(DAS_HANDBUCH,DAS_HANDBUCH.SEITEN,GERUNDET,GERUNDET1,trunc(DAS_HANDBUCH.ANZ_FEHLER_GES),GERUNDET2);
end if;
  GERUNDET := float(round(AUFWAND_MM_S * 100.0)) / 100.0;
  GERUNDET1 := float(round(AUFWAND_MM_E * 100.0)) / 100.0;
  GERUNDET2 := float(round(AUFWAND_MM_C * 100.0)) / 100.0;
  GERUNDET3 := float(round(AUFWAND_MM_T * 100.0)) / 100.0;
  GERUNDET4 := float(round(AUFWAND_MM_H * 100.0)) / 100.0;
  send_player_message AUFWAND_FUER_PHASEN(GERUNDET,GERUNDET1,GERUNDET2,GERUNDET3,GERUNDET4);
  GERUNDET := float(round(AUFWAND_MM_PR * 100.0)) / 100.0;
  GERUNDET1 := float(round(AUFWAND_MM_PT * 100.0)) / 100.0;
  GERUNDET2 := float(round(AUFWAND_MM_KR * 100.0)) / 100.0;
  GERUNDET3 := float(round(AUFWAND_MM_KT * 100.0)) / 100.0;
  send_player_message AUFWAND_FUER_PRUEFUNG_U_KORREKTUR(GERUNDET,GERUNDET1,GERUNDET2,GERUNDET3);
end rule;
-----------------------------------------------------------------------------
-- Regel: Z_AUFWANDSDATEN_AUSGEBEN

rule Z_AUFWANDSDATEN_AUSGEBEN[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  DER_ZUSTAND.PROJEKTENDE = current_date;
  DER_ZUSTAND.GESAMTAUFWAND /= 0.0;
declare 
  GERUNDET : REAL := 0.0;
  GERUNDET1 : REAL := 0.0;
  GERUNDET2 : REAL := 0.0;
  GERUNDET3 : REAL := 0.0;
  GERUNDET4 : REAL := 0.0;
  GERUNDET5 : REAL := 0.0;
begin 
send_debug_message "Z_AUFWANDSDATEN_AUSGEBEN";
  GERUNDET := 0.0;
  GERUNDET1 := 0.0;
  GERUNDET2 := 0.0;
  GERUNDET3 := 0.0;
  GERUNDET4 := 0.0;
  GERUNDET5 := 0.0;
  replace_nth(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, (DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE / 132.0 ) / DER_ZUSTAND.GESAMTAUFWAND * 100.0, 1);
  replace_nth(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, (DER_ZUSTAND.AUFWAND_ENTWURFSPHASE / 132.0 ) / DER_ZUSTAND.GESAMTAUFWAND * 100.0, 2);
  replace_nth(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, (DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE / 132.0 ) / DER_ZUSTAND.GESAMTAUFWAND * 100.0, 3);
  replace_nth(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, (DER_ZUSTAND.AUFWAND_TESTPHASE / 132.0 ) / DER_ZUSTAND.GESAMTAUFWAND * 100.0, 4);
  replace_nth(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, (DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG / 132.0 ) / DER_ZUSTAND.GESAMTAUFWAND * 100.0, 5);
  GERUNDET := float(round(DER_ZUSTAND.GESAMTAUFWAND * 100.0)) / 100.0;
  GERUNDET1 := float(round(nth_elem(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, 1) * 10.0)) / 10.0;
  GERUNDET2 := float(round(nth_elem(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, 2) * 10.0)) / 10.0;
  GERUNDET3 := float(round(nth_elem(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, 3) * 10.0)) / 10.0;
  GERUNDET4 := float(round(nth_elem(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, 4) * 10.0)) / 10.0;
  GERUNDET5 := float(round(nth_elem(DER_ZUSTAND.AUFWANDSVERTEILUNG_PHASEN, 5) * 10.0)) / 10.0;
  send_player_message AUFWANDSDATEN_AUSGEBEN(GERUNDET,DER_ZUSTAND.KOSTEN_PRO_MM,GERUNDET1,GERUNDET2,GERUNDET3,GERUNDET4,GERUNDET5);
end rule;
-----------------------------------------------------------------------------
-- Regel: REAKTION_AUF_PROJEKTABBRUCH

rule REAKTION_AUF_PROJEKTABBRUCH[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DIE_ZIELE : PROJEKTZIELE;
  DER_WUNSCH : KUNDENWUNSCH;
  DER_KUNDE : KUNDE;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  DER_ZUSTAND.SYSTEM_AUSGELIEFERT = false;
  DER_ZUSTAND.PROJEKTENDE = current_date;
  DER_ZUSTAND.GESAMTAUFWAND /= 0.0;
begin 
send_debug_message "REAKTION_AUF_PROJEKTABBRUCH";
  send_player_message KUNDENREAKTION_AUF_PROJEKTABBRUCH(DER_ZUSTAND.PROJEKTBEGINN,current_date,DIE_ZIELE.SOLL_KOSTEN);
  send_player_message VORGESETZTENREAKTION_AUF_PROJEKTABBRUCH(DER_ZUSTAND.KOSTEN,DER_KUNDE);
end rule;
-----------------------------------------------------------------------------
-- Regel: KUNDENREAKTION_NACH_AUSLIEFERUNG

rule KUNDENREAKTION_NACH_AUSLIEFERUNG[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DER_KUNDE : KUNDE;
  DER_WUNSCH : KUNDENWUNSCH;
  DIE_ZIELE : PROJEKTZIELE;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  DER_ZUSTAND.SYSTEM_AUSGELIEFERT;
  DER_ZUSTAND.PROJEKTENDE = current_date;
  DER_ZUSTAND.GESAMTAUFWAND /= 0.0;
declare 
  AFP_WUNSCH : REAL := 0.0;
  AFP_CODE : REAL := 0.0;
  AB_DAUER : INTEGER := 0;
  AB_KOSTEN : REAL := 0.0;
  VOLL_CODE : REAL := 0.0;
  AB_KORR_CODE : REAL := 0.0;
  VOLL_HB : REAL := 0.0;
  AB_KORR_HB : REAL := 0.0;
  GERUNDET : REAL := 0.0;
  GERUNDET1 : REAL := 0.0;
begin 
send_debug_message "KUNDENREAKTION_NACH_AUSLIEFERUNG";
  AFP_WUNSCH := 0.0;
  AFP_CODE := 0.0;
  AB_DAUER := 0;
  AB_KOSTEN := 0.0;
  VOLL_CODE := 0.0;
  AB_KORR_CODE := 0.0;
  VOLL_HB := 0.0;
  AB_KORR_HB := 0.0;
  GERUNDET := 0.0;
  GERUNDET1 := 0.0;
  AFP_WUNSCH := gib_afp(DER_WUNSCH.SOLL_ANFORDERUNGEN);
  send_player_message KUNDENREAKTION(DER_KUNDE);
  AB_DAUER := (((DER_ZUSTAND.PROJEKTENDE - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440 ) - (((DIE_ZIELE.SOLL_TERMIN - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440 );
  send_player_message TERMINEINHALTUNG(DIE_ZIELE.SOLL_TERMIN,DER_ZUSTAND.PROJEKTENDE,AB_DAUER);
  if AB_DAUER <= 0 then
  send_player_message TERMINEINHALTUNG_GUT(-AB_DAUER);
else
  if AB_DAUER <= DIE_ZIELE.MITTEL_AB_DAUER then
  send_player_message TERMINEINHALTUNG_MITTEL(AB_DAUER);
else
  send_player_message TERMINEINHALTUNG_SCHLECHT(AB_DAUER);
end if;
end if;
  AB_KOSTEN := DER_ZUSTAND.KOSTEN - DIE_ZIELE.SOLL_KOSTEN;
  send_player_message KOSTENEINHALTUNG(DIE_ZIELE.SOLL_KOSTEN,DER_ZUSTAND.KOSTEN,AB_KOSTEN);
  if AB_KOSTEN <= 0.0 then
  send_player_message KOSTENEINHALTUNG_GUT(-AB_KOSTEN);
else
  if AB_KOSTEN <= DIE_ZIELE.MITTEL_AB_KOSTEN then
  send_player_message KOSTENEINHALTUNG_MITTEL(AB_KOSTEN);
else
  send_player_message KOSTENEINHALTUNG_SCHLECHT(AB_KOSTEN);
end if;
end if;
  AFP_CODE := gib_afp_system(DER_CODE.INTEGRIERTE_IDS,DER_CODE.INHALT);
  VOLL_CODE := AFP_CODE / AFP_WUNSCH * 100.0;
  GERUNDET := float(round(AFP_WUNSCH * 100.0)) / 100.0;
  GERUNDET1 := float(round(AFP_CODE * 100.0)) / 100.0;
  send_player_message VOLLSTAENDIGKEIT_CODE(DER_CODE.ZEILEN,GERUNDET,GERUNDET1);
  if VOLL_CODE >= DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_CODE then
  send_player_message VOLLSTAENDIGKEIT_CODE_GUT(VOLL_CODE);
else
  if VOLL_CODE >= DIE_ZIELE.MITTEL_AB_VOLL_CODE then
  send_player_message VOLLSTAENDIGKEIT_CODE_MITTEL(VOLL_CODE);
else
  send_player_message VOLLSTAENDIGKEIT_CODE_SCHLECHT(VOLL_CODE);
end if;
end if;
  GERUNDET := float(round(DER_CODE.FEHLER_PRO_KLOC * 100.0)) / 100.0;
  AB_KORR_CODE := GERUNDET - DIE_ZIELE.SOLL_KORREKTHEIT_CODE;
  send_player_message KORREKTHEIT_CODE(DIE_ZIELE.SOLL_KORREKTHEIT_CODE,GERUNDET);
  if AB_KORR_CODE <= 0.0 then
  send_player_message KORREKTHEIT_CODE_GUT(GERUNDET,-AB_KORR_CODE);
else
  if AB_KORR_CODE <= DIE_ZIELE.MITTEL_AB_KORR_CODE then
  send_player_message KORREKTHEIT_CODE_MITTEL(GERUNDET,AB_KORR_CODE);
else
  send_player_message KORREKTHEIT_CODE_SCHLECHT(GERUNDET,AB_KORR_CODE);
end if;
end if;
  GERUNDET := float(round(AFP_WUNSCH * 100.0)) / 100.0;
  GERUNDET1 := float(round(DAS_HANDBUCH.ANZ_AFP * 100.0)) / 100.0;
  send_player_message VOLLSTAENDIGKEIT_HANDBUCH(DAS_HANDBUCH.SEITEN,GERUNDET,GERUNDET1);
  VOLL_HB := DAS_HANDBUCH.ANZ_AFP / AFP_WUNSCH * 100.0;
  if VOLL_HB >= DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_HANDBUCH then
  send_player_message VOLLSTAENDIGKEIT_HANDBUCH_GUT(VOLL_HB);
else
  if VOLL_HB >= DIE_ZIELE.MITTEL_AB_VOLL_HB then
  send_player_message VOLLSTAENDIGKEIT_HANDBUCH_MITTEL(VOLL_HB);
else
  send_player_message VOLLSTAENDIGKEIT_HANDBUCH_SCHLECHT(VOLL_HB);
end if;
end if;
  if DAS_HANDBUCH.SEITEN > 0 then
  GERUNDET := float(round(DAS_HANDBUCH.FEHLER_PRO_SEITE * 100.0)) / 100.0;
  AB_KORR_HB := GERUNDET - DIE_ZIELE.SOLL_KORREKTHEIT_HANDBUCH;
  send_player_message KORREKTHEIT_HANDBUCH(DIE_ZIELE.SOLL_KORREKTHEIT_HANDBUCH,GERUNDET);
  if AB_KORR_HB <= 0.0 then
  send_player_message KORREKTHEIT_HANDBUCH_GUT(GERUNDET,-AB_KORR_HB);
else
  if AB_KORR_HB <= DIE_ZIELE.MITTEL_AB_KORR_HB then
  send_player_message KORREKTHEIT_HANDBUCH_MITTEL(GERUNDET,AB_KORR_HB);
else
  send_player_message KORREKTHEIT_HANDBUCH_SCHLECHT(GERUNDET,AB_KORR_HB);
end if;
end if;
end if;
  if (AB_DAUER <= DIE_ZIELE.MITTEL_AB_DAUER ) and (AB_KOSTEN <= DIE_ZIELE.MITTEL_AB_KOSTEN ) and (VOLL_CODE >= DIE_ZIELE.MITTEL_AB_VOLL_CODE ) and (AB_KORR_CODE <= DIE_ZIELE.MITTEL_AB_KORR_CODE ) and (VOLL_HB >= DIE_ZIELE.MITTEL_AB_VOLL_HB ) and (AB_KORR_HB <= DIE_ZIELE.MITTEL_AB_KORR_HB ) then
  send_player_message KUNDE_AKZEPTIERT;
else
  if AB_DAUER > DIE_ZIELE.MITTEL_AB_DAUER then
  send_player_message KUNDE_AKZEPTIERT_NICHT_TERMIN;
end if;
  if AB_KOSTEN > DIE_ZIELE.MITTEL_AB_KOSTEN then
  send_player_message KUNDE_AKZEPTIERT_NICHT_KOSTEN;
end if;
  if VOLL_CODE < DIE_ZIELE.MITTEL_AB_VOLL_CODE then
  send_player_message KUNDE_AKZEPTIERT_NICHT_VOLL_CODE;
end if;
  if AB_KORR_CODE > DIE_ZIELE.MITTEL_AB_KORR_CODE then
  send_player_message KUNDE_AKZEPTIERT_NICHT_KORR_CODE;
end if;
  if VOLL_HB < DIE_ZIELE.MITTEL_AB_VOLL_HB then
  send_player_message KUNDE_AKZEPTIERT_NICHT_VOLL_HB;
end if;
  if AB_KORR_HB > DIE_ZIELE.MITTEL_AB_KORR_HB then
  send_player_message KUNDE_AKZEPTIERT_NICHT_KORR_HB;
end if;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Z_PERFORMANZ_AUSGEBEN

rule Z_PERFORMANZ_AUSGEBEN[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DIE_ZIELE : PROJEKTZIELE;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  DER_ZUSTAND.PROJEKTENDE = current_date;
  DER_ZUSTAND.GESAMTAUFWAND /= 0.0;
declare 
  ANZAHL_DOKUMENTE : INTEGER := 0;
  SUMME : REAL := 0.0;
  SCORE : INTEGER := 0;
  MAXSCORE : INTEGER := 0;
  GERUNDET : REAL := 0.0;
  GERUNDET1 : REAL := 0.0;
  GERUNDET2 : REAL := 0.0;
  GERUNDET3 : REAL := 0.0;
  GERUNDET4 : REAL := 0.0;
begin 
send_debug_message "Z_PERFORMANZ_AUSGEBEN";
  ANZAHL_DOKUMENTE := 0;
  SUMME := 0.0;
  SCORE := 0;
  MAXSCORE := 0;
  GERUNDET := 0.0;
  GERUNDET1 := 0.0;
  GERUNDET2 := 0.0;
  GERUNDET3 := 0.0;
  GERUNDET4 := 0.0;
  MAXSCORE := 1200;
  if DIE_ZIELE.SOLL_KOSTEN = 0.0 then
  DER_ZUSTAND.PROZENT_KOSTEN_ZV := -1.0;
else
  if ((DER_ZUSTAND.KOSTEN / DIE_ZIELE.SOLL_KOSTEN ) * 100.0 ) >= 200.0 then
  DER_ZUSTAND.PROZENT_KOSTEN_ZV := 0.0;
else
  DER_ZUSTAND.PROZENT_KOSTEN_ZV := 200.0 - ((DER_ZUSTAND.KOSTEN / DIE_ZIELE.SOLL_KOSTEN ) * 100.0 );
end if;
end if;
  if float(((DIE_ZIELE.SOLL_TERMIN - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440) = 0.0 then
  DER_ZUSTAND.PROZENT_DAUER_ZV := -1.0;
else
  if ((float(((current_date - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440) / float(((DIE_ZIELE.SOLL_TERMIN - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440) ) * 100.0 ) >= 200.0 then
  DER_ZUSTAND.PROZENT_DAUER_ZV := 0.0;
else
  DER_ZUSTAND.PROZENT_DAUER_ZV := 200.0 - ((float(((current_date - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440) / float(((DIE_ZIELE.SOLL_TERMIN - DER_ZUSTAND.PROJEKTBEGINN ) + 1439 ) div 1440) ) * 100.0 );
end if;
end if;
  DER_ZUSTAND.MITTELWERT_VOLLSTAENDIGKEIT := (DIE_SPEZIFIKATION.PROZENT_AFP_100 + DER_ENTWURF.PROZENT_AFP_100 + DIE_MODULSPEZ.PROZENT_AFP_100 + DER_CODE.PROZENT_AFP_100 + DAS_HANDBUCH.PROZENT_AFP_100 ) / 5.0;
  ANZAHL_DOKUMENTE := 0;
  SUMME := 0.0;
  if (DIE_SPEZIFIKATION.PROZENT_AFP_ZV /= -1.0 ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DIE_SPEZIFIKATION.PROZENT_AFP_ZV;
end if;
  if (DER_ENTWURF.PROZENT_AFP_ZV /= -1.0 ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DER_ENTWURF.PROZENT_AFP_ZV;
end if;
  if (DIE_MODULSPEZ.PROZENT_AFP_ZV /= -1.0 ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DIE_MODULSPEZ.PROZENT_AFP_ZV;
end if;
  if (DER_CODE.PROZENT_AFP_ZV /= -1.0 ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DER_CODE.PROZENT_AFP_ZV;
end if;
  if (DAS_HANDBUCH.PROZENT_AFP_ZV /= -1.0 ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DAS_HANDBUCH.PROZENT_AFP_ZV;
end if;
  if (ANZAHL_DOKUMENTE /= 0 ) then
  DER_ZUSTAND.MITTELWERT_VOLLSTAENDIGKEIT_ZV := SUMME / float(ANZAHL_DOKUMENTE);
else
  DER_ZUSTAND.MITTELWERT_VOLLSTAENDIGKEIT_ZV := 0.0;
end if;
  ANZAHL_DOKUMENTE := 0;
  SUMME := 0.0;
  if ((DIE_SPEZIFIKATION.PROZENT_FEHLER_PRO_SEITE_ZV /= -1.0 ) and (DIE_SPEZIFIKATION.FEHLER_PRO_SEITE /= -1.0 ) ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DIE_SPEZIFIKATION.PROZENT_FEHLER_PRO_SEITE_ZV;
end if;
  if ((DER_ENTWURF.PROZENT_FEHLER_PRO_SEITE_ZV /= -1.0 ) and (DER_ENTWURF.FEHLER_PRO_SEITE /= -1.0 ) ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DER_ENTWURF.PROZENT_FEHLER_PRO_SEITE_ZV;
end if;
  if ((DIE_MODULSPEZ.PROZENT_FEHLER_PRO_SEITE_ZV /= -1.0 ) and (DIE_MODULSPEZ.FEHLER_PRO_SEITE /= -1.0 ) ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DIE_MODULSPEZ.PROZENT_FEHLER_PRO_SEITE_ZV;
end if;
  if ((DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV /= -1.0 ) and (DER_CODE.FEHLER_PRO_KLOC /= -1.0 ) ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV;
end if;
  if ((DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV /= -1.0 ) and (DAS_HANDBUCH.FEHLER_PRO_SEITE /= -1.0 ) ) then
  ANZAHL_DOKUMENTE := ANZAHL_DOKUMENTE + 1;
  SUMME := SUMME + DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV;
end if;
  if (ANZAHL_DOKUMENTE /= 0 ) then
  DER_ZUSTAND.MITTELWERT_KORREKTHEIT_ZV := SUMME / float(ANZAHL_DOKUMENTE);
else
  DER_ZUSTAND.MITTELWERT_KORREKTHEIT_ZV := 0.0;
end if;
  GERUNDET := float(round(DER_ZUSTAND.PROZENT_KOSTEN_ZV * 100.0)) / 100.0;
  GERUNDET1 := float(round(DER_ZUSTAND.PROZENT_DAUER_ZV * 100.0)) / 100.0;
  GERUNDET2 := float(round(DER_ZUSTAND.MITTELWERT_VOLLSTAENDIGKEIT_ZV * 100.0)) / 100.0;
  GERUNDET3 := float(round(DER_ZUSTAND.MITTELWERT_VOLLSTAENDIGKEIT * 100.0)) / 100.0;
  GERUNDET4 := float(round(DER_ZUSTAND.MITTELWERT_KORREKTHEIT_ZV * 100.0)) / 100.0;
  send_player_message PERFORMANZ_AUSGEBEN(GERUNDET,GERUNDET1,GERUNDET2,GERUNDET3,GERUNDET4);
  SCORE := round(DER_ZUSTAND.PROZENT_KOSTEN_ZV + DER_ZUSTAND.PROZENT_DAUER_ZV + DER_CODE.PROZENT_AFP_ZV + DAS_HANDBUCH.PROZENT_AFP_ZV + DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV + DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV);
  send_player_message KUNDEN_SCORE(SCORE,MAXSCORE);
end rule;
-----------------------------------------------------------------------------
-- Regel: KEINE_BEWERTUNG_MOEGLICH

rule KEINE_BEWERTUNG_MOEGLICH[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
constraints 
  DER_ZUSTAND.PROJEKT_IST_BEENDET;
  DER_ZUSTAND.GESAMTAUFWAND = 0.0;
begin 
send_debug_message "KEINE_BEWERTUNG_MOEGLICH";
  send_player_message BEWERTUNG_NICHT_MOEGLICH;
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DER_SPEZIFIKATION_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DER_SPEZIFIKATION_BERECHNEN[1000] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DIE_SPEZIFIKATION);
declare 
  UMF_AFP : REAL := 0.0;
  SEITEN_PRO_AFP : REAL := 0.0;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DER_SPEZIFIKATION_BERECHNEN";
  UMF_AFP := 0.0;
  SEITEN_PRO_AFP := 0.0;
  UMF_AFP := gib_afp(DIE_SPEZIFIKATION.INHALT);
  SEITEN_PRO_AFP := THE_ATTRIBUTE_ROLE_OF_GEEIGNET.X_PRO_AFP;
  DIE_SPEZIFIKATION.SEITEN := trunc(UMF_AFP * SEITEN_PRO_AFP + 0.9);
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_SYSTEMENTWURFS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_SYSTEMENTWURFS_BERECHNEN[1000] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DER_ENTWURF);
declare 
  UMF_AFP : REAL := 0.0;
  SEITEN_PRO_AFP : REAL := 0.0;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_SYSTEMENTWURFS_BERECHNEN";
  UMF_AFP := 0.0;
  SEITEN_PRO_AFP := 0.0;
  UMF_AFP := gib_afp(DER_ENTWURF.INHALT);
  SEITEN_PRO_AFP := THE_ATTRIBUTE_ROLE_OF_GEEIGNET.X_PRO_AFP;
  DER_ENTWURF.SEITEN := trunc(UMF_AFP * SEITEN_PRO_AFP + 0.9);
  DER_ENTWURF.SUBSYSTEME := trunc(UMF_AFP / (8.0 * 6.0 ));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DER_MODULSPEZ_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DER_MODULSPEZ_BERECHNEN[1000] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DIE_MODULSPEZ);
declare 
  UMF_AFP : REAL := 0.0;
  SEITEN_PRO_AFP : REAL := 0.0;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DER_MODULSPEZ_BERECHNEN";
  UMF_AFP := 0.0;
  SEITEN_PRO_AFP := 0.0;
  UMF_AFP := gib_afp(DIE_MODULSPEZ.INHALT);
  SEITEN_PRO_AFP := THE_ATTRIBUTE_ROLE_OF_GEEIGNET.X_PRO_AFP;
  DIE_MODULSPEZ.SEITEN := trunc(UMF_AFP * SEITEN_PRO_AFP + 0.9);
  DIE_MODULSPEZ.MODULE := trunc(UMF_AFP / 8.0);
  DIE_MODULSPEZ.PROZEDUREN := trunc(UMF_AFP / 0.5);
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_CODES_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_CODES_BERECHNEN[1000] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DER_CODE);
declare 
  UMF_AFP : REAL := 0.0;
  ZEILEN_PRO_AFP : REAL := 0.0;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_CODES_BERECHNEN";
  UMF_AFP := 0.0;
  ZEILEN_PRO_AFP := 0.0;
  UMF_AFP := gib_afp(DER_CODE.INHALT);
  ZEILEN_PRO_AFP := THE_ATTRIBUTE_ROLE_OF_GEEIGNET.X_PRO_AFP;
  DER_CODE.ZEILEN := trunc(UMF_AFP * ZEILEN_PRO_AFP + 0.9);
  DER_CODE.MODULE := trunc(UMF_AFP / 8.0);
  DER_CODE.SUBSYSTEME := trunc(UMF_AFP / (8.0 * 6.0 ));
  DER_CODE.PROZEDUREN := trunc(UMF_AFP / 0.5);
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_HANDBUCHS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_HANDBUCHS_BERECHNEN[1000] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  THE_ATTRIBUTE_ROLE_OF_GEEIGNET : BASE2_GEEIGNET_FUER_Entity;
  GEEIGNET : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_GEEIGNET,EINE_NOTATION,DAS_HANDBUCH);
declare 
  UMF_AFP : REAL := 0.0;
  SEITEN_PRO_AFP : REAL := 0.0;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_HANDBUCHS_BERECHNEN";
  UMF_AFP := 0.0;
  SEITEN_PRO_AFP := 0.0;
  UMF_AFP := gib_afp(DAS_HANDBUCH.INHALT);
  SEITEN_PRO_AFP := THE_ATTRIBUTE_ROLE_OF_GEEIGNET.X_PRO_AFP;
  DAS_HANDBUCH.SEITEN := trunc(UMF_AFP * SEITEN_PRO_AFP + 0.9);
end rule;
-----------------------------------------------------------------------------
-- Regel: BERECHNE_AFP

rule BERECHNE_AFP[1000] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
begin 
send_debug_message "BERECHNE_AFP";
  DIE_NOTIZEN.ANZ_AFP := gib_afp(DIE_NOTIZEN.INHALT);
  DIE_SPEZIFIKATION.ANZ_AFP := gib_afp(DIE_SPEZIFIKATION.INHALT);
  DER_ENTWURF.ANZ_AFP := gib_afp(DER_ENTWURF.INHALT);
  DIE_MODULSPEZ.ANZ_AFP := gib_afp(DIE_MODULSPEZ.INHALT);
  DER_CODE.ANZ_AFP := gib_afp(DER_CODE.INHALT);
  DAS_HANDBUCH.ANZ_AFP := gib_afp(DAS_HANDBUCH.INHALT);
end rule;
-----------------------------------------------------------------------------
-- Regel: BERECHNE_FEHLER

rule BERECHNE_FEHLER[1000] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
begin 
send_debug_message "BERECHNE_FEHLER";
  DIE_NOTIZEN.ANZ_AF := gib_analysefehler(DIE_NOTIZEN.INHALT);
  DIE_SPEZIFIKATION.ANZ_AF := gib_analysefehler(DIE_SPEZIFIKATION.INHALT);
  DER_ENTWURF.ANZ_AF := gib_analysefehler(DER_ENTWURF.INHALT);
  DIE_MODULSPEZ.ANZ_AF := gib_analysefehler(DIE_MODULSPEZ.INHALT);
  DER_CODE.ANZ_AF := gib_analysefehler(DER_CODE.INHALT);
  DAS_HANDBUCH.ANZ_AF := gib_analysefehler(DAS_HANDBUCH.INHALT);
  DER_ENTWURF.ANZ_GF := gib_grobentwurfsfehler(DER_ENTWURF.INHALT);
  DIE_MODULSPEZ.ANZ_GF := gib_grobentwurfsfehler(DIE_MODULSPEZ.INHALT);
  DER_CODE.ANZ_GF := gib_grobentwurfsfehler(DER_CODE.INHALT);
  DIE_MODULSPEZ.ANZ_FF := gib_feinentwurfsfehler(DIE_MODULSPEZ.INHALT);
  DER_CODE.ANZ_FF := gib_feinentwurfsfehler(DER_CODE.INHALT);
  DER_CODE.ANZ_IF := gib_implementierungsfehler(DER_CODE.INHALT);
  DAS_HANDBUCH.ANZ_HF := gib_handbuchfehler(DAS_HANDBUCH.INHALT);
  DIE_NOTIZEN.ANZ_FEHLER_GES := gib_fehler(DIE_NOTIZEN.INHALT);
  DIE_SPEZIFIKATION.ANZ_FEHLER_GES := gib_fehler(DIE_SPEZIFIKATION.INHALT);
  DER_ENTWURF.ANZ_FEHLER_GES := gib_fehler(DER_ENTWURF.INHALT);
  DIE_MODULSPEZ.ANZ_FEHLER_GES := gib_fehler(DIE_MODULSPEZ.INHALT);
  DER_CODE.ANZ_FEHLER_GES := gib_fehler(DER_CODE.INHALT);
  DAS_HANDBUCH.ANZ_FEHLER_GES := gib_fehler(DAS_HANDBUCH.INHALT);
end rule;
-----------------------------------------------------------------------------
-- Regel: BERECHNE_FEHLER_PRO_AFP

rule BERECHNE_FEHLER_PRO_AFP[1000] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
begin 
send_debug_message "BERECHNE_FEHLER_PRO_AFP";
  if DIE_NOTIZEN.ANZ_AFP = 0.0 then
  DIE_NOTIZEN.FEHLER_PRO_AFP := -1.0;
  DIE_NOTIZEN.AF_PRO_AFP := -1.0;
else
  DIE_NOTIZEN.FEHLER_PRO_AFP := DIE_NOTIZEN.ANZ_FEHLER_GES / DIE_NOTIZEN.ANZ_AFP;
  DIE_NOTIZEN.AF_PRO_AFP := DIE_NOTIZEN.ANZ_AF / DIE_NOTIZEN.ANZ_AFP;
end if;
  if DIE_SPEZIFIKATION.ANZ_AFP = 0.0 then
  DIE_SPEZIFIKATION.FEHLER_PRO_AFP := -1.0;
  DIE_SPEZIFIKATION.AF_PRO_AFP := -1.0;
else
  DIE_SPEZIFIKATION.FEHLER_PRO_AFP := DIE_SPEZIFIKATION.ANZ_FEHLER_GES / DIE_SPEZIFIKATION.ANZ_AFP;
  DIE_SPEZIFIKATION.AF_PRO_AFP := DIE_SPEZIFIKATION.ANZ_AF / DIE_SPEZIFIKATION.ANZ_AFP;
end if;
  if DER_ENTWURF.ANZ_AFP = 0.0 then
  DER_ENTWURF.FEHLER_PRO_AFP := -1.0;
  DER_ENTWURF.AF_PRO_AFP := -1.0;
  DER_ENTWURF.GF_PRO_AFP := -1.0;
else
  DER_ENTWURF.FEHLER_PRO_AFP := DER_ENTWURF.ANZ_FEHLER_GES / DER_ENTWURF.ANZ_AFP;
  DER_ENTWURF.AF_PRO_AFP := DER_ENTWURF.ANZ_AF / DER_ENTWURF.ANZ_AFP;
  DER_ENTWURF.GF_PRO_AFP := DER_ENTWURF.ANZ_GF / DER_ENTWURF.ANZ_AFP;
end if;
  if DIE_MODULSPEZ.ANZ_AFP = 0.0 then
  DIE_MODULSPEZ.FEHLER_PRO_AFP := -1.0;
  DIE_MODULSPEZ.AF_PRO_AFP := -1.0;
  DIE_MODULSPEZ.GF_PRO_AFP := -1.0;
  DIE_MODULSPEZ.FF_PRO_AFP := -1.0;
else
  DIE_MODULSPEZ.FEHLER_PRO_AFP := DIE_MODULSPEZ.ANZ_FEHLER_GES / DIE_MODULSPEZ.ANZ_AFP;
  DIE_MODULSPEZ.AF_PRO_AFP := DIE_MODULSPEZ.ANZ_AF / DIE_MODULSPEZ.ANZ_AFP;
  DIE_MODULSPEZ.GF_PRO_AFP := DIE_MODULSPEZ.ANZ_GF / DIE_MODULSPEZ.ANZ_AFP;
  DIE_MODULSPEZ.FF_PRO_AFP := DIE_MODULSPEZ.ANZ_FF / DIE_MODULSPEZ.ANZ_AFP;
end if;
  if DER_CODE.ANZ_AFP = 0.0 then
  DER_CODE.FEHLER_PRO_AFP := -1.0;
  DER_CODE.AF_PRO_AFP := -1.0;
  DER_CODE.GF_PRO_AFP := -1.0;
  DER_CODE.FF_PRO_AFP := -1.0;
  DER_CODE.IF_PRO_AFP := -1.0;
else
  DER_CODE.FEHLER_PRO_AFP := DER_CODE.ANZ_FEHLER_GES / DER_CODE.ANZ_AFP;
  DER_CODE.AF_PRO_AFP := DER_CODE.ANZ_AF / DER_CODE.ANZ_AFP;
  DER_CODE.GF_PRO_AFP := DER_CODE.ANZ_GF / DER_CODE.ANZ_AFP;
  DER_CODE.FF_PRO_AFP := DER_CODE.ANZ_FF / DER_CODE.ANZ_AFP;
  DER_CODE.IF_PRO_AFP := DER_CODE.ANZ_IF / DER_CODE.ANZ_AFP;
end if;
  if DAS_HANDBUCH.ANZ_AFP = 0.0 then
  DAS_HANDBUCH.FEHLER_PRO_AFP := -1.0;
  DAS_HANDBUCH.AF_PRO_AFP := -1.0;
  DAS_HANDBUCH.HF_PRO_AFP := -1.0;
else
  DAS_HANDBUCH.FEHLER_PRO_AFP := DAS_HANDBUCH.ANZ_FEHLER_GES / DAS_HANDBUCH.ANZ_AFP;
  DAS_HANDBUCH.AF_PRO_AFP := DAS_HANDBUCH.ANZ_AF / DAS_HANDBUCH.ANZ_AFP;
  DAS_HANDBUCH.HF_PRO_AFP := DAS_HANDBUCH.ANZ_HF / DAS_HANDBUCH.ANZ_AFP;
end if;
  if DER_CODE.ZEILEN = 0 then
  DER_CODE.FEHLER_PRO_KLOC := -1.0;
else
  DER_CODE.FEHLER_PRO_KLOC := DER_CODE.ANZ_FEHLER_GES * 1000.0 / float(DER_CODE.ZEILEN);
end if;
  if DIE_SPEZIFIKATION.SEITEN = 0 then
  DIE_SPEZIFIKATION.FEHLER_PRO_SEITE := -1.0;
else
  DIE_SPEZIFIKATION.FEHLER_PRO_SEITE := DIE_SPEZIFIKATION.ANZ_FEHLER_GES / float(DIE_SPEZIFIKATION.SEITEN);
end if;
  if DER_ENTWURF.SEITEN = 0 then
  DER_ENTWURF.FEHLER_PRO_SEITE := -1.0;
else
  DER_ENTWURF.FEHLER_PRO_SEITE := DER_ENTWURF.ANZ_FEHLER_GES / float(DER_ENTWURF.SEITEN);
end if;
  if DIE_MODULSPEZ.SEITEN = 0 then
  DIE_MODULSPEZ.FEHLER_PRO_SEITE := -1.0;
else
  DIE_MODULSPEZ.FEHLER_PRO_SEITE := DIE_MODULSPEZ.ANZ_FEHLER_GES / float(DIE_MODULSPEZ.SEITEN);
end if;
  if DAS_HANDBUCH.SEITEN = 0 then
  DAS_HANDBUCH.FEHLER_PRO_SEITE := -1.0;
else
  DAS_HANDBUCH.FEHLER_PRO_SEITE := DAS_HANDBUCH.ANZ_FEHLER_GES / float(DAS_HANDBUCH.SEITEN);
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: BERECHNE_PROZENTWERTE

rule BERECHNE_PROZENTWERTE[1000] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_ZIELE : PROJEKTZIELE;
begin 
send_debug_message "BERECHNE_PROZENTWERTE";
  DIE_NOTIZEN.PROZENT_AFP_100 := (DIE_NOTIZEN.ANZ_AFP / DER_KUNDENWUNSCH.UMFANG_AFP ) * 100.0;
  DIE_SPEZIFIKATION.PROZENT_AFP_100 := (DIE_SPEZIFIKATION.ANZ_AFP / DER_KUNDENWUNSCH.UMFANG_AFP ) * 100.0;
  DER_ENTWURF.PROZENT_AFP_100 := (DER_ENTWURF.ANZ_AFP / DER_KUNDENWUNSCH.UMFANG_AFP ) * 100.0;
  DIE_MODULSPEZ.PROZENT_AFP_100 := (DIE_MODULSPEZ.ANZ_AFP / DER_KUNDENWUNSCH.UMFANG_AFP ) * 100.0;
  DER_CODE.PROZENT_AFP_100 := (DER_CODE.ANZ_AFP / DER_KUNDENWUNSCH.UMFANG_AFP ) * 100.0;
  DAS_HANDBUCH.PROZENT_AFP_100 := (DAS_HANDBUCH.ANZ_AFP / DER_KUNDENWUNSCH.UMFANG_AFP ) * 100.0;
  if DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_SPEZIFIKATION <= 0.0 then
  DIE_SPEZIFIKATION.PROZENT_AFP_ZV := -1.0;
else
  DIE_SPEZIFIKATION.PROZENT_AFP_ZV := (DIE_SPEZIFIKATION.ANZ_AFP / (DER_KUNDENWUNSCH.UMFANG_AFP * (DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_SPEZIFIKATION / 100.0 ) ) ) * 100.0;
end if;
  if DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_SYSTEMENTWURF <= 0.0 then
  DER_ENTWURF.PROZENT_AFP_ZV := -1.0;
else
  DER_ENTWURF.PROZENT_AFP_ZV := (DER_ENTWURF.ANZ_AFP / (DER_KUNDENWUNSCH.UMFANG_AFP * (DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_SYSTEMENTWURF / 100.0 ) ) ) * 100.0;
end if;
  if DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_MODULSPEZ <= 0.0 then
  DIE_MODULSPEZ.PROZENT_AFP_ZV := -1.0;
else
  DIE_MODULSPEZ.PROZENT_AFP_ZV := (DIE_MODULSPEZ.ANZ_AFP / (DER_KUNDENWUNSCH.UMFANG_AFP * (DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_MODULSPEZ / 100.0 ) ) ) * 100.0;
end if;
  if DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_CODE <= 0.0 then
  DER_CODE.PROZENT_AFP_ZV := -1.0;
else
  DER_CODE.PROZENT_AFP_ZV := (DER_CODE.ANZ_AFP / (DER_KUNDENWUNSCH.UMFANG_AFP * (DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_CODE / 100.0 ) ) ) * 100.0;
end if;
  if DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_HANDBUCH <= 0.0 then
  DAS_HANDBUCH.PROZENT_AFP_ZV := -1.0;
else
  DAS_HANDBUCH.PROZENT_AFP_ZV := (DAS_HANDBUCH.ANZ_AFP / (DER_KUNDENWUNSCH.UMFANG_AFP * (DIE_ZIELE.SOLL_VOLLSTAENDIGKEIT_HANDBUCH / 100.0 ) ) ) * 100.0;
end if;
  if not (DIE_ZIELE.SOLL_KORREKTHEIT_SPEZIFIKATION < 9999.9 ) then
  DIE_SPEZIFIKATION.PROZENT_FEHLER_PRO_SEITE_ZV := -1.0;
else
  if (DIE_ZIELE.SOLL_KORREKTHEIT_SPEZIFIKATION = 0.0 ) then
  if (DIE_SPEZIFIKATION.FEHLER_PRO_SEITE = 0.0 ) and (DIE_SPEZIFIKATION.ANZ_AFP > 0.0 ) then
  DIE_SPEZIFIKATION.PROZENT_FEHLER_PRO_SEITE_ZV := 100.0;
else
  DIE_SPEZIFIKATION.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
end if;
else
  if (((DIE_SPEZIFIKATION.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_SPEZIFIKATION ) * 100.0 ) > 200.0 ) or (DIE_SPEZIFIKATION.ANZ_AFP = 0.0 ) then
  DIE_SPEZIFIKATION.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
else
  DIE_SPEZIFIKATION.PROZENT_FEHLER_PRO_SEITE_ZV := 200.0 - ((DIE_SPEZIFIKATION.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_SPEZIFIKATION ) * 100.0 );
end if;
end if;
end if;
  if not (DIE_ZIELE.SOLL_KORREKTHEIT_SYSTEMENTWURF < 9999.9 ) then
  DER_ENTWURF.PROZENT_FEHLER_PRO_SEITE_ZV := -1.0;
else
  if (DIE_ZIELE.SOLL_KORREKTHEIT_SYSTEMENTWURF = 0.0 ) then
  if (DER_ENTWURF.FEHLER_PRO_SEITE = 0.0 ) and (DER_ENTWURF.ANZ_AFP > 0.0 ) then
  DER_ENTWURF.PROZENT_FEHLER_PRO_SEITE_ZV := 100.0;
else
  DER_ENTWURF.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
end if;
else
  if (((DER_ENTWURF.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_SYSTEMENTWURF ) * 100.0 ) > 200.0 ) or (DER_ENTWURF.ANZ_AFP = 0.0 ) then
  DER_ENTWURF.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
else
  DER_ENTWURF.PROZENT_FEHLER_PRO_SEITE_ZV := 200.0 - ((DER_ENTWURF.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_SYSTEMENTWURF ) * 100.0 );
end if;
end if;
end if;
  if not (DIE_ZIELE.SOLL_KORREKTHEIT_MODULSPEZ < 9999.9 ) then
  DIE_MODULSPEZ.PROZENT_FEHLER_PRO_SEITE_ZV := -1.0;
else
  if (DIE_ZIELE.SOLL_KORREKTHEIT_MODULSPEZ = 0.0 ) then
  if (DIE_MODULSPEZ.FEHLER_PRO_SEITE = 0.0 ) and (DIE_MODULSPEZ.ANZ_AFP > 0.0 ) then
  DIE_MODULSPEZ.PROZENT_FEHLER_PRO_SEITE_ZV := 100.0;
else
  DIE_MODULSPEZ.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
end if;
else
  if (((DIE_MODULSPEZ.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_MODULSPEZ ) * 100.0 ) > 200.0 ) or (DIE_MODULSPEZ.ANZ_AFP = 0.0 ) then
  DIE_MODULSPEZ.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
else
  DIE_MODULSPEZ.PROZENT_FEHLER_PRO_SEITE_ZV := 200.0 - ((DIE_MODULSPEZ.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_MODULSPEZ ) * 100.0 );
end if;
end if;
end if;
  if not (DIE_ZIELE.SOLL_KORREKTHEIT_CODE < 9999.9 ) then
  DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV := -1.0;
else
  if (DIE_ZIELE.SOLL_KORREKTHEIT_CODE = 0.0 ) then
  if (DER_CODE.FEHLER_PRO_KLOC = 0.0 ) and (DER_CODE.ANZ_AFP > 0.0 ) then
  DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV := 100.0;
else
  DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV := 0.0;
end if;
else
  if (((DER_CODE.FEHLER_PRO_KLOC / DIE_ZIELE.SOLL_KORREKTHEIT_CODE ) * 100.0 ) > 200.0 ) or (DER_CODE.ANZ_AFP = 0.0 ) then
  DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV := 0.0;
else
  DER_CODE.PROZENT_FEHLER_PRO_KLOC_ZV := 200.0 - ((DER_CODE.FEHLER_PRO_KLOC / DIE_ZIELE.SOLL_KORREKTHEIT_CODE ) * 100.0 );
end if;
end if;
end if;
  if not (DIE_ZIELE.SOLL_KORREKTHEIT_HANDBUCH < 9999.9 ) then
  DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV := -1.0;
else
  if (DIE_ZIELE.SOLL_KORREKTHEIT_HANDBUCH = 0.0 ) then
  if ((DAS_HANDBUCH.FEHLER_PRO_SEITE = 0.0 ) and (DAS_HANDBUCH.ANZ_AFP > 0.0 ) ) then
  DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV := 100.0;
else
  DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
end if;
else
  if (((DAS_HANDBUCH.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_HANDBUCH ) * 100.0 ) > 200.0 ) or (DAS_HANDBUCH.ANZ_AFP = 0.0 ) then
  DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV := 0.0;
else
  DAS_HANDBUCH.PROZENT_FEHLER_PRO_SEITE_ZV := 200.0 - ((DAS_HANDBUCH.FEHLER_PRO_SEITE / DIE_ZIELE.SOLL_KORREKTHEIT_HANDBUCH ) * 100.0 );
end if;
end if;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_SPEZIFIKATIONSREVIEWBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_SPEZIFIKATIONSREVIEWBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_SPEZIFIKATIONSREVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_SPEZIFIKATIONSREVIEWBERICHTS_BERECHNEN";
  if length(DER_SPEZIFIKATIONSREVIEWBERICHT.INHALT) = 0 then
  DER_SPEZIFIKATIONSREVIEWBERICHT.IST_LEER := true;
else
  DER_SPEZIFIKATIONSREVIEWBERICHT.IST_LEER := false;
end if;
  DER_SPEZIFIKATIONSREVIEWBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_SPEZIFIKATIONSREVIEWBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_SPEZIFIKATIONSREVIEWBERICHT.ANZ_ANF := float(length(DER_SPEZIFIKATIONSREVIEWBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_SYSTEMENTWURFSREVIEWBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_SYSTEMENTWURFSREVIEWBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_SYSTEMENTWURFSREVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_SYSTEMENTWURFSREVIEWBERICHTS_BERECHNEN";
  if length(DER_SYSTEMENTWURFSREVIEWBERICHT.INHALT) = 0 then
  DER_SYSTEMENTWURFSREVIEWBERICHT.IST_LEER := true;
else
  DER_SYSTEMENTWURFSREVIEWBERICHT.IST_LEER := false;
end if;
  DER_SYSTEMENTWURFSREVIEWBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_SYSTEMENTWURFSREVIEWBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_SYSTEMENTWURFSREVIEWBERICHT.ANZ_ANF := float(length(DER_SYSTEMENTWURFSREVIEWBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_MODULSPEZREVIEWBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_MODULSPEZREVIEWBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_MODULSPEZREVIEWBERICHT : MODULSPEZREVIEWBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_MODULSPEZREVIEWBERICHTS_BERECHNEN";
  if length(DER_MODULSPEZREVIEWBERICHT.INHALT) = 0 then
  DER_MODULSPEZREVIEWBERICHT.IST_LEER := true;
else
  DER_MODULSPEZREVIEWBERICHT.IST_LEER := false;
end if;
  DER_MODULSPEZREVIEWBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_MODULSPEZREVIEWBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_MODULSPEZREVIEWBERICHT.ANZ_ANF := float(length(DER_MODULSPEZREVIEWBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_CODEREVIEWBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_CODEREVIEWBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_CODEREVIEWBERICHT : CODEREVIEWBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_CODEREVIEWBERICHTS_BERECHNEN";
  if length(DER_CODEREVIEWBERICHT.INHALT) = 0 then
  DER_CODEREVIEWBERICHT.IST_LEER := true;
else
  DER_CODEREVIEWBERICHT.IST_LEER := false;
end if;
  DER_CODEREVIEWBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_CODEREVIEWBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_CODEREVIEWBERICHT.ANZ_ANF := float(length(DER_CODEREVIEWBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_HANDBUCHREVIEWBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_HANDBUCHREVIEWBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_HANDBUCHREVIEWBERICHT : HANDBUCHREVIEWBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_HANDBUCHREVIEWBERICHTS_BERECHNEN";
  if length(DER_HANDBUCHREVIEWBERICHT.INHALT) = 0 then
  DER_HANDBUCHREVIEWBERICHT.IST_LEER := true;
else
  DER_HANDBUCHREVIEWBERICHT.IST_LEER := false;
end if;
  DER_HANDBUCHREVIEWBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_HANDBUCHREVIEWBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_HANDBUCHREVIEWBERICHT.ANZ_ANF := float(length(DER_HANDBUCHREVIEWBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_MODULTESTBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_MODULTESTBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_MODULTESTBERICHT : MODULTESTBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_MODULTESTBERICHTS_BERECHNEN";
  if length(DER_MODULTESTBERICHT.INHALT) = 0 then
  DER_MODULTESTBERICHT.IST_LEER := true;
else
  DER_MODULTESTBERICHT.IST_LEER := false;
end if;
  DER_MODULTESTBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_MODULTESTBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_MODULTESTBERICHT.ANZ_ANF := float(length(DER_MODULTESTBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_INTEGRATIONSTESTBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_INTEGRATIONSTESTBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_INTEGRATIONSTESTBERICHT : INTEGRATIONSTESTBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_INTEGRATIONSTESTBERICHTS_BERECHNEN";
  if length(DER_INTEGRATIONSTESTBERICHT.INHALT) = 0 then
  DER_INTEGRATIONSTESTBERICHT.IST_LEER := true;
else
  DER_INTEGRATIONSTESTBERICHT.IST_LEER := false;
end if;
  DER_INTEGRATIONSTESTBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_INTEGRATIONSTESTBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_INTEGRATIONSTESTBERICHT.ANZ_ANF := float(length(DER_INTEGRATIONSTESTBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_SYSTEMTESTBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_SYSTEMTESTBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_SYSTEMTESTBERICHT : SYSTEMTESTBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_SYSTEMTESTBERICHTS_BERECHNEN";
  if length(DER_SYSTEMTESTBERICHT.INHALT) = 0 then
  DER_SYSTEMTESTBERICHT.IST_LEER := true;
else
  DER_SYSTEMTESTBERICHT.IST_LEER := false;
end if;
  DER_SYSTEMTESTBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_SYSTEMTESTBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_SYSTEMTESTBERICHT.ANZ_ANF := float(length(DER_SYSTEMTESTBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: ABGELEITETE_ATTRIBUTE_DES_ABNAHMETESTBERICHTS_BERECHNEN

rule ABGELEITETE_ATTRIBUTE_DES_ABNAHMETESTBERICHTS_BERECHNEN[1000] taking 0  is
structure 
  DER_ABNAHMETESTBERICHT : ABNAHMETESTBERICHT;
begin 
send_debug_message "ABGELEITETE_ATTRIBUTE_DES_ABNAHMETESTBERICHTS_BERECHNEN";
  if length(DER_ABNAHMETESTBERICHT.INHALT) = 0 then
  DER_ABNAHMETESTBERICHT.IST_LEER := true;
else
  DER_ABNAHMETESTBERICHT.IST_LEER := false;
end if;
  DER_ABNAHMETESTBERICHT.ANZ_NICHT_KORR_ANF := float(length(DER_ABNAHMETESTBERICHT.NICHT_KORRIGIERTE_IDS));
  DER_ABNAHMETESTBERICHT.ANZ_ANF := float(length(DER_ABNAHMETESTBERICHT.INHALT));
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ANALYSENOTIZEN_BEARBEITEN

rule Deactivating_1_ANALYSENOTIZEN_BEARBEITEN[220] taking 0  is
structure 
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  Deakt_Relation : Deactivating_1_ANALYSENOTIZEN_BEARBEITEN_Relation(THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,DIE_NOTIZEN);
constraints 
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ANALYSENOTIZEN_BEARBEITEN";
  if not exists(KORRIGIERT_ALLES(*,*,*,*)) then
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity.GERUNDET := float(round(DIE_NOTIZEN.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_NOTIZEN(THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity.GERUNDET,trunc(DIE_NOTIZEN.ANZ_AF),trunc(DIE_NOTIZEN.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ANALYSENOTIZEN_BEARBEITEN

rule Deactivating_2_ANALYSENOTIZEN_BEARBEITEN[219] taking 0  is
structure 
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
constraints 
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ANALYSENOTIZEN_BEARBEITEN";
  delete(THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ANALYSENOTIZEN_BEARBEITEN

rule Activating_ANALYSENOTIZEN_BEARBEITEN[1000] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,*));
begin 
send_debug_message "Activating_ANALYSENOTIZEN_BEARBEITEN";
  create entity THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity aka new_unique_id(BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity)
 with
    LCD := current_date;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation
  with
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity := THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  end create;
  create relation Deactivating_1_ANALYSENOTIZEN_BEARBEITEN_Relation
  with
    RL_THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity := THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ANALYSENOTIZEN_BEARBEITEN

rule Active_ANALYSENOTIZEN_BEARBEITEN[800] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "Active_ANALYSENOTIZEN_BEARBEITEN";
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_SPEZIFIKATION_BEARBEITEN

rule Deactivating_1_SPEZIFIKATION_BEARBEITEN[220] taking 0  is
structure 
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  Deakt_Relation : Deactivating_1_SPEZIFIKATION_BEARBEITEN_Relation(THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,DIE_SPEZIFIKATION);
constraints 
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_SPEZIFIKATION_BEARBEITEN";
  if not exists(KORRIGIERT_ALLES(*,*,*,*)) then
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity.GERUNDET := float(round(DIE_SPEZIFIKATION.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_SPEZ_DOK(THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity.GERUNDET,trunc(DIE_SPEZIFIKATION.ANZ_AF),trunc(DIE_SPEZIFIKATION.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_SPEZIFIKATION_BEARBEITEN

rule Deactivating_2_SPEZIFIKATION_BEARBEITEN[219] taking 0  is
structure 
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
constraints 
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_SPEZIFIKATION_BEARBEITEN";
  delete(THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_SPEZIFIKATION_BEARBEITEN

rule Activating_SPEZIFIKATION_BEARBEITEN[1000] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,*));
begin 
send_debug_message "Activating_SPEZIFIKATION_BEARBEITEN";
  create entity THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity aka new_unique_id(BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity)
 with
    LCD := current_date;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation
  with
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  end create;
  create relation Deactivating_1_SPEZIFIKATION_BEARBEITEN_Relation
  with
    RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_SPEZIFIKATION_BEARBEITEN

rule Active_SPEZIFIKATION_BEARBEITEN[800] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "Active_SPEZIFIKATION_BEARBEITEN";
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_SYSTEMENTWURF_BEARBEITEN

rule Deactivating_1_SYSTEMENTWURF_BEARBEITEN[220] taking 0  is
structure 
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  DER_ENTWURF : SYSTEMENTWURF;
  Deakt_Relation : Deactivating_1_SYSTEMENTWURF_BEARBEITEN_Relation(THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,DER_ENTWURF);
constraints 
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_SYSTEMENTWURF_BEARBEITEN";
  if not exists(KORRIGIERT_ALLES(*,*,*,*)) then
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity.GERUNDET := float(round(DER_ENTWURF.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_ENTW_DOK(THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity.GERUNDET,trunc(DER_ENTWURF.ANZ_AF),trunc(DER_ENTWURF.ANZ_GF),trunc(DER_ENTWURF.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_SYSTEMENTWURF_BEARBEITEN

rule Deactivating_2_SYSTEMENTWURF_BEARBEITEN[219] taking 0  is
structure 
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
constraints 
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_SYSTEMENTWURF_BEARBEITEN";
  delete(THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_SYSTEMENTWURF_BEARBEITEN

rule Activating_SYSTEMENTWURF_BEARBEITEN[1000] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,*));
begin 
send_debug_message "Activating_SYSTEMENTWURF_BEARBEITEN";
  create entity THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity aka new_unique_id(BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity)
 with
    LCD := current_date;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation
  with
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity := THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  end create;
  create relation Deactivating_1_SYSTEMENTWURF_BEARBEITEN_Relation
  with
    RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity := THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
    RL_DER_ENTWURF := DER_ENTWURF;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_SYSTEMENTWURF_BEARBEITEN

rule Active_SYSTEMENTWURF_BEARBEITEN[800] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "Active_SYSTEMENTWURF_BEARBEITEN";
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_MODULSPEZIFIKATION_BEARBEITEN

rule Deactivating_1_MODULSPEZIFIKATION_BEARBEITEN[220] taking 0  is
structure 
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  Deakt_Relation : Deactivating_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,DIE_MODULSPEZ);
constraints 
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_MODULSPEZIFIKATION_BEARBEITEN";
  if not exists(KORRIGIERT_ALLES(*,*,*,*)) then
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity.GERUNDET := float(round(DIE_MODULSPEZ.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_MSPEZ_DOK(THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity.GERUNDET,trunc(DIE_MODULSPEZ.ANZ_AF),trunc(DIE_MODULSPEZ.ANZ_GF),trunc(DIE_MODULSPEZ.ANZ_FF),trunc(DIE_MODULSPEZ.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_MODULSPEZIFIKATION_BEARBEITEN

rule Deactivating_2_MODULSPEZIFIKATION_BEARBEITEN[219] taking 0  is
structure 
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
constraints 
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_MODULSPEZIFIKATION_BEARBEITEN";
  delete(THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_MODULSPEZIFIKATION_BEARBEITEN

rule Activating_MODULSPEZIFIKATION_BEARBEITEN[1000] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,*));
begin 
send_debug_message "Activating_MODULSPEZIFIKATION_BEARBEITEN";
  create entity THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity aka new_unique_id(BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity)
 with
    LCD := current_date;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation
  with
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  end create;
  create relation Deactivating_1_MODULSPEZIFIKATION_BEARBEITEN_Relation
  with
    RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_MODULSPEZIFIKATION_BEARBEITEN

rule Active_MODULSPEZIFIKATION_BEARBEITEN[800] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "Active_MODULSPEZIFIKATION_BEARBEITEN";
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_CODE_BEARBEITEN

rule Deactivating_1_CODE_BEARBEITEN[220] taking 0  is
structure 
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  DER_CODE : CODE;
  Deakt_Relation : Deactivating_1_CODE_BEARBEITEN_Relation(THE_BASE2_1_CODE_BEARBEITEN_Entity,DER_CODE);
constraints 
  THE_BASE2_1_CODE_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_CODE_BEARBEITEN";
  if not exists(KORRIGIERT_ALLES(*,*,*,*)) then
  THE_BASE2_1_CODE_BEARBEITEN_Entity.GERUNDET := float(round(DER_CODE.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_CODE_DOK(THE_BASE2_1_CODE_BEARBEITEN_Entity.GERUNDET,trunc(DER_CODE.ANZ_AF),trunc(DER_CODE.ANZ_GF),trunc(DER_CODE.ANZ_FF),trunc(DER_CODE.ANZ_IF),trunc(DER_CODE.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_CODE_BEARBEITEN

rule Deactivating_2_CODE_BEARBEITEN[219] taking 0  is
structure 
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
constraints 
  THE_BASE2_1_CODE_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_CODE_BEARBEITEN";
  delete(THE_BASE2_1_CODE_BEARBEITEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_CODE_BEARBEITEN

rule Activating_CODE_BEARBEITEN[1000] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,*));
begin 
send_debug_message "Activating_CODE_BEARBEITEN";
  create entity THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity aka new_unique_id(BASE2_1_CODE_BEARBEITEN_Entity)
 with
    LCD := current_date;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_1_CODE_BEARBEITEN_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
  end create;
  create relation Deactivating_1_CODE_BEARBEITEN_Relation
  with
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_DER_CODE := DER_CODE;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_CODE_BEARBEITEN

rule Active_CODE_BEARBEITEN[800] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "Active_CODE_BEARBEITEN";
  THE_BASE2_1_CODE_BEARBEITEN_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_HANDBUCH_BEARBEITEN

rule Deactivating_1_HANDBUCH_BEARBEITEN[220] taking 0  is
structure 
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  DAS_HANDBUCH : HANDBUCH;
  Deakt_Relation : Deactivating_1_HANDBUCH_BEARBEITEN_Relation(THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,DAS_HANDBUCH);
constraints 
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_HANDBUCH_BEARBEITEN";
  if not exists(KORRIGIERT_ALLES(*,*,*,*)) then
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity.GERUNDET := float(round(DAS_HANDBUCH.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_HB_DOK(THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity.GERUNDET,trunc(DAS_HANDBUCH.ANZ_AF),trunc(DAS_HANDBUCH.ANZ_HF),trunc(DAS_HANDBUCH.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_HANDBUCH_BEARBEITEN

rule Deactivating_2_HANDBUCH_BEARBEITEN[219] taking 0  is
structure 
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
constraints 
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_HANDBUCH_BEARBEITEN";
  delete(THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_HANDBUCH_BEARBEITEN

rule Activating_HANDBUCH_BEARBEITEN[1000] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,*));
begin 
send_debug_message "Activating_HANDBUCH_BEARBEITEN";
  create entity THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity aka new_unique_id(BASE2_1_HANDBUCH_BEARBEITEN_Entity)
 with
    LCD := current_date;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_1_HANDBUCH_BEARBEITEN_Relation
  with
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity := THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  end create;
  create relation Deactivating_1_HANDBUCH_BEARBEITEN_Relation
  with
    RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity := THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_HANDBUCH_BEARBEITEN

rule Active_HANDBUCH_BEARBEITEN[800] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "Active_HANDBUCH_BEARBEITEN";
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ALLE_DOKUMENTE_KORRIGIEREN

rule Deactivating_1_ALLE_DOKUMENTE_KORRIGIEREN[220] taking 0  is
structure 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  Deakt_Relation : Deactivating_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,DIE_SPEZIFIKATION);
constraints 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ALLE_DOKUMENTE_KORRIGIEREN";
  if not exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) then
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET := float(round(DIE_SPEZIFIKATION.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_SPEZ_DOK(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET,trunc(DIE_SPEZIFIKATION.ANZ_AF),trunc(DIE_SPEZIFIKATION.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ALLE_DOKUMENTE_KORRIGIEREN

rule Deactivating_2_ALLE_DOKUMENTE_KORRIGIEREN[219] taking 0  is
structure 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  DER_ENTWURF : SYSTEMENTWURF;
  Deakt_Relation : Deactivating_2_ALLE_DOKUMENTE_KORRIGIEREN_Relation(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,DER_ENTWURF);
constraints 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ALLE_DOKUMENTE_KORRIGIEREN";
  if not exists_extended(BEARBEITET(*,*,DER_ENTWURF)) then
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET := float(round(DER_ENTWURF.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_ENTW_DOK(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET,trunc(DER_ENTWURF.ANZ_AF),trunc(DER_ENTWURF.ANZ_GF),trunc(DER_ENTWURF.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ALLE_DOKUMENTE_KORRIGIEREN

rule Deactivating_3_ALLE_DOKUMENTE_KORRIGIEREN[218] taking 0  is
structure 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  Deakt_Relation : Deactivating_3_ALLE_DOKUMENTE_KORRIGIEREN_Relation(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,DIE_MODULSPEZ);
constraints 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ALLE_DOKUMENTE_KORRIGIEREN";
  if not exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) then
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET := float(round(DIE_MODULSPEZ.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_MSPEZ_DOK(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET,trunc(DIE_MODULSPEZ.ANZ_AF),trunc(DIE_MODULSPEZ.ANZ_GF),trunc(DIE_MODULSPEZ.ANZ_FF),trunc(DIE_MODULSPEZ.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_4_ALLE_DOKUMENTE_KORRIGIEREN

rule Deactivating_4_ALLE_DOKUMENTE_KORRIGIEREN[217] taking 0  is
structure 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  DER_CODE : CODE;
  Deakt_Relation : Deactivating_4_ALLE_DOKUMENTE_KORRIGIEREN_Relation(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,DER_CODE);
constraints 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_4_ALLE_DOKUMENTE_KORRIGIEREN";
  if not exists_extended(BEARBEITET(*,*,DER_CODE)) then
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET := float(round(DER_CODE.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_CODE_DOK(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET,trunc(DER_CODE.ANZ_AF),trunc(DER_CODE.ANZ_GF),trunc(DER_CODE.ANZ_FF),trunc(DER_CODE.ANZ_IF),trunc(DER_CODE.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_5_ALLE_DOKUMENTE_KORRIGIEREN

rule Deactivating_5_ALLE_DOKUMENTE_KORRIGIEREN[216] taking 0  is
structure 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  DAS_HANDBUCH : HANDBUCH;
  Deakt_Relation : Deactivating_5_ALLE_DOKUMENTE_KORRIGIEREN_Relation(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,DAS_HANDBUCH);
constraints 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_5_ALLE_DOKUMENTE_KORRIGIEREN";
  if not exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) then
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET := float(round(DAS_HANDBUCH.ANZ_AFP * 100.0)) / 100.0;
  send_tutor_message ZUSTAND_VON_HB_DOK(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.GERUNDET,trunc(DAS_HANDBUCH.ANZ_AF),trunc(DAS_HANDBUCH.ANZ_HF),trunc(DAS_HANDBUCH.ANZ_FEHLER_GES));
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_6_ALLE_DOKUMENTE_KORRIGIEREN

rule Deactivating_6_ALLE_DOKUMENTE_KORRIGIEREN[215] taking 0  is
structure 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
constraints 
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_6_ALLE_DOKUMENTE_KORRIGIEREN";
  delete(THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ALLE_DOKUMENTE_KORRIGIEREN

rule Activating_ALLE_DOKUMENTE_KORRIGIEREN[1000] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,*));
begin 
send_debug_message "Activating_ALLE_DOKUMENTE_KORRIGIEREN";
  create entity THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity aka new_unique_id(BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity)
 with
    LCD := current_date;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  end create;
  create relation Deactivating_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation
  with
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
  end create;
  create relation Deactivating_2_ALLE_DOKUMENTE_KORRIGIEREN_Relation
  with
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_DER_ENTWURF := DER_ENTWURF;
  end create;
  create relation Deactivating_3_ALLE_DOKUMENTE_KORRIGIEREN_Relation
  with
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
  end create;
  create relation Deactivating_4_ALLE_DOKUMENTE_KORRIGIEREN_Relation
  with
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_DER_CODE := DER_CODE;
  end create;
  create relation Deactivating_5_ALLE_DOKUMENTE_KORRIGIEREN_Relation
  with
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
  end create;
  send_tutor_message PRINT_STRING("correcting all documents activated");
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ALLE_DOKUMENTE_KORRIGIEREN

rule Active_ALLE_DOKUMENTE_KORRIGIEREN[800] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
begin 
send_debug_message "Active_ALLE_DOKUMENTE_KORRIGIEREN";
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity.LCD := current_date;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_ZU_ANALYSIEREN

rule ENTWICKLER_BEGINNT_ZU_ANALYSIEREN[990] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ANALYSIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_ANALYSIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_ANALYSIEREN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_ZU_ANALYSIEREN";
  create entity The_Attribute_Role_Of_PRODUZIERT_48 : BASE2_PRODUZIERT_Entity aka new_unique_id(BASE2_PRODUZIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRODUKTIVITAET := 0.0;
    VERLUSTQUOTE := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VORGABEDOKUMENT := 1;
  end create;
  create relation PRODUZIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    Attribute_Role := The_Attribute_Role_Of_PRODUZIERT_48;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_ANALYSIERT

rule Deactivating_1_ENTWICKLER_ANALYSIERT[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  Deakt_Relation : Deactivating_1_ENTWICKLER_ANALYSIERT_Relation(THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_ANALYSIERT";
  delete(ANALYSIERT);
delete(The_Attribute_Role_Of_ANALYSIERT);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_ANALYSIERT

rule Deactivating_2_ENTWICKLER_ANALYSIERT[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_ANALYSIERT_Relation(THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_ANALYSIERT";
  send_player_message AUFGEHOERT_MIT_KUNDE_ZU_SPRECHEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_ANALYSIERT

rule Deactivating_3_ENTWICKLER_ANALYSIERT[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_ANALYSIERT";
  delete(THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_ANALYSIERT

rule Activating_ENTWICKLER_ANALYSIERT[990] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_ANALYSIERT";
  create entity THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity aka new_unique_id(BASE2_2_ENTWICKLER_ANALYSIERT_Entity)
 with
    LCD := current_date;
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_ANALYSIERT_Relation
  with
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity := THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_ANALYSIERT := THE_ATTRIBUTE_ROLE_OF_ANALYSIERT;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_ANALYSIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_ANALYSIERT := THE_ATTRIBUTE_ROLE_OF_ANALYSIERT;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
  end create;
  create relation Deactivating_2_ENTWICKLER_ANALYSIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_MIT_KUNDE_ZU_SPRECHEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_ANALYSIERT

rule Active_ENTWICKLER_ANALYSIERT[790] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_ANALYSIERT";
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.T := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.T + THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.T >= THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_2 > 0.0 then
  DIE_NOTIZEN.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A);
  DIE_NOTIZEN.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_1);
  DIE_NOTIZEN.UNBEARBEITETE_HB_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.B := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.B);
end if;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.T := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.T - THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.B := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A;
else
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.A.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.PRODUKTIVITAET;
end loop;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_FUER_KUNDE := DER_ZUSTAND.AUFWAND_FUER_KUNDE + THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.DT / 60.0;
  DAS_LOGBUCH.ANALYSE_AUFWAND := DAS_LOGBUCH.ANALYSE_AUFWAND + THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.ANALYSE.Rec_Elem_1 := SEIN_LOG.ANALYSE.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.ANALYSE_BEGINN = 1901/01/01/00:00 ) then
  DAS_LOGBUCH.ANALYSE_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.ANALYSE_ENDE < current_date ) then
  DAS_LOGBUCH.ANALYSE_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_tutor_message PRINT_STRING("Entwickler analysiert");
  send_tutor_message PRINT_AKA(EIN_ENTWICKLER);
  send_tutor_message PRINT_DATE(current_date);
  send_tutor_message PRINT_REAL(DAS_LOGBUCH.ANALYSE_AUFWAND);
  send_tutor_message PRINT_REAL(THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity.T);
end rule;
-----------------------------------------------------------------------------
-- Regel: ANALYSEARBEITSPAKET_SCHNUEREN

rule ANALYSEARBEITSPAKET_SCHNUEREN[980] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ANALYSIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_ANALYSIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_ANALYSIEREN,EIN_ENTWICKLER,DIE_NOTIZEN);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
declare 
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ANALYSEARBEITSPAKET_SCHNUEREN";
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  while AFPS < 150.0 and not ( length(DER_KUNDENWUNSCH.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_KUNDENWUNSCH.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN,ID);
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  send_tutor_message PRINT_DATE(current_date);
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"AnalyseArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_ANALYSIEREN_FERTIG_SEIN

rule MIT_ANALYSIEREN_FERTIG_SEIN[980] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ANALYSIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_ANALYSIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_ANALYSIEREN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AnalyseArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_ANALYSIEREN_FERTIG_SEIN";
  delete(SOLL_ANALYSIEREN);
delete(The_Attribute_Role_Of_SOLL_ANALYSIEREN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ANALYSIEREN_ABBRECHEN

rule ANALYSIEREN_ABBRECHEN[980] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ANALYSIEREN_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET);
  DER_KUNDENWUNSCH.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DER_KUNDENWUNSCH.UNBEARBEITETE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_BEIM_ANALYSIEREN_BERECHNEN

rule PRODUKTIVITAET_BEIM_ANALYSIEREN_BERECHNEN[980] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AnalyseArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_BEIM_ANALYSIEREN_BERECHNEN";
  P := 0.0;
  P := gib_analyseproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_BEIM_ANALYSIEREN_BERECHNEN

rule FEHLERRATE_BEIM_ANALYSIEREN_BERECHNEN[980] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AnalyseArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_BEIM_ANALYSIEREN_BERECHNEN";
  F := 0.0;
  F := gib_analysefehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.1;
end if;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.FEHLERRATE.Rec_Elem_1 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTQUOTE_BEIM_ANALYSIEREN_BERECHNEN

rule VERLUSTQUOTE_BEIM_ANALYSIEREN_BERECHNEN[980] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AnalyseArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTQUOTE_BEIM_ANALYSIEREN_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.VERLUSTQUOTE := gib_analyseverlustquote(EIN_ENTWICKLER.ERFAHRUNG);
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"Verlustquote_beim_Analysieren_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ANFORDERUNGEN_BEIM_ANALYSIEREN_VERLIEREN

rule ANFORDERUNGEN_BEIM_ANALYSIEREN_VERLIEREN[980] taking 0  is
structure 
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity;
  THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation : BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT : BASE2_PRODUZIERT_Entity;
  ANALYSIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,EIN_ENTWICKLER,DIE_NOTIZEN);
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity : BASE2_2_ENTWICKLER_ANALYSIERT_Entity;
  THE_BASE2_2_ENTWICKLER_ANALYSIERT_Relation : BASE2_2_ENTWICKLER_ANALYSIERT_Relation(DER_ZUSTAND,DAS_LOGBUCH,DIE_NOTIZEN,DEL_TA,K,THE_BASE2_1_ANALYSENOTIZEN_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ANALYSIERT,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ANALYSIERT_Entity);
constraints 
  exists(SOLL_PRODUZIEREN(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_NOTIZEN));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"Verlustquote_beim_Analysieren_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  NOCH_ZU_VERLIERENDE_AFP : REAL := 0.0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ANFORDERUNGEN_BEIM_ANALYSIEREN_VERLIEREN";
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  NOCH_ZU_VERLIERENDE_AFP := (THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.VERLUSTQUOTE / 100.0 ) * gib_afp(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET);
  while NOCH_ZU_VERLIERENDE_AFP > 0.0 loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET);
  if A.Rec_Elem_2 <= NOCH_ZU_VERLIERENDE_AFP then
  NOCH_ZU_VERLIERENDE_AFP := NOCH_ZU_VERLIERENDE_AFP - A.Rec_Elem_2;
else
  A.Rec_Elem_2 := A.Rec_Elem_2 - NOCH_ZU_VERLIERENDE_AFP;
  THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ANALYSIERT.ARBEITSPAKET,A);
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
end if;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_ZU_SPEZIFIZIEREN

rule ENTWICKLER_BEGINNT_ZU_SPEZIFIZIEREN[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_SPEZIFIZIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_SPEZIFIZIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_SPEZIFIZIEREN,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  not exists(PRODUZIERT(*,*,DIE_NOTIZEN)) or float(length(DIE_NOTIZEN.INHALT)) >= 0.5 * float(length(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
begin 
send_debug_message "ENTWICKLER_BEGINNT_ZU_SPEZIFIZIEREN";
  create entity The_Attribute_Role_Of_PRODUZIERT_49 : BASE2_PRODUZIERT_Entity aka new_unique_id(BASE2_PRODUZIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRODUKTIVITAET := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTQUOTE := 0.0;
    VORGABEDOKUMENT := 1;
  end create;
  create relation PRODUZIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_SPEZIFIKATION;
    Attribute_Role := The_Attribute_Role_Of_PRODUZIERT_49;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_SPEZIFIZIERT

rule Deactivating_1_ENTWICKLER_SPEZIFIZIERT[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  Deakt_Relation : Deactivating_1_ENTWICKLER_SPEZIFIZIERT_Relation(THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
constraints 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_SPEZIFIZIERT";
  delete(SPEZIFIZIERT);
delete(The_Attribute_Role_Of_SPEZIFIZIERT);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_SPEZIFIZIERT

rule Deactivating_2_ENTWICKLER_SPEZIFIZIERT[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_SPEZIFIZIERT_Relation(THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_SPEZIFIZIERT";
  send_player_message AUFGEHOERT_ZU_SPEZIFIZIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_SPEZIFIZIERT

rule Deactivating_3_ENTWICKLER_SPEZIFIZIERT[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_SPEZIFIZIERT";
  delete(THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_SPEZIFIZIERT

rule Activating_ENTWICKLER_SPEZIFIZIERT[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_SPEZIFIZIERT";
  create entity THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity aka new_unique_id(BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity)
 with
    LCD := current_date;
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ID := 0;
    ID_DUMMY := 0;
  end create;
  create relation BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation
  with
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT := THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_SPEZIFIZIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT := THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
  end create;
  create relation Deactivating_2_ENTWICKLER_SPEZIFIZIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ZU_SPEZIFIZIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_SPEZIFIZIERT

rule Active_ENTWICKLER_SPEZIFIZIERT[790] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_SPEZIFIZIERT";
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.T := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.T + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.T > THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_2 > 0.0 then
  DIE_SPEZIFIKATION.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A);
  DIE_SPEZIFIKATION.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_SPEZ_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.AH.Rec_Elem_3 = 0 then
  if not ( Get_Index(DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_1) > 0 ) then
  DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_1);
end if;
end if;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.B := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.B);
end if;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.T := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.T - THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.B := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A;
else
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.A.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.PRODUKTIVITAET;
end loop;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.DT / 60.0;
  DAS_LOGBUCH.SPEZIFIKATION_AUFWAND := DAS_LOGBUCH.SPEZIFIKATION_AUFWAND + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.SPEZIFIKATION.Rec_Elem_1 := SEIN_LOG.SPEZIFIKATION.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.SPEZIFIKATION_BEGINN = 1901/01/01/00:00 ) then
  DAS_LOGBUCH.SPEZIFIKATION_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.SPEZIFIKATION_ENDE < current_date ) then
  DAS_LOGBUCH.SPEZIFIKATION_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZIFIKATIONSARBEITSPAKET_SCHNUEREN

rule SPEZIFIKATIONSARBEITSPAKET_SCHNUEREN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_SPEZIFIZIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_SPEZIFIZIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_SPEZIFIZIEREN,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
declare 
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "SPEZIFIKATIONSARBEITSPAKET_SCHNUEREN";
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  while AFPS < 60.0 and not ( length(DIE_NOTIZEN.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET,A);
  DIE_NOTIZEN.IN_ARBEIT_FUER_SPEZ_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_SPEZ_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
  if ( Get_Index(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS,ID) > 0 ) then
  ID := f_getselected_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS,ID);
end if;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"SpezifikationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_SPEZIFIZIEREN_FERTIG_SEIN

rule MIT_SPEZIFIZIEREN_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_SPEZIFIZIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_SPEZIFIZIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_SPEZIFIZIEREN,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_SPEZIFIZIEREN_FERTIG_SEIN";
  delete(SOLL_SPEZIFIZIEREN);
delete(The_Attribute_Role_Of_SOLL_SPEZIFIZIEREN);
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZIFIZIEREN_ABBRECHEN

rule SPEZIFIZIEREN_ABBRECHEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AH : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "SPEZIFIZIEREN_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY := 0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET);
  DIE_NOTIZEN.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_SPEZ_IDS,A.Rec_Elem_1);
  AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,A.Rec_Elem_1);
  if AH.Rec_Elem_3 = 0 then
  if not ( Get_Index(DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1) > 0 ) then
  DIE_NOTIZEN.UNBEARBEITETE_HB_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS,A.Rec_Elem_1);
end if;
end if;
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_BEIM_SPEZIFIZIEREN_BERECHNEN

rule PRODUKTIVITAET_BEIM_SPEZIFIZIEREN_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_BEIM_SPEZIFIZIEREN_BERECHNEN";
  P := 0.0;
  P := gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_BEIM_SPEZIFIZIEREN_BERECHNEN

rule FEHLERRATE_BEIM_SPEZIFIZIEREN_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_BEIM_SPEZIFIZIEREN_BERECHNEN";
  F := 0.0;
  F := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.1;
end if;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.FEHLERRATE.Rec_Elem_1 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTQUOTE_BEIM_SPEZIFIZIEREN_BERECHNEN

rule VERLUSTQUOTE_BEIM_SPEZIFIZIEREN_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTQUOTE_BEIM_SPEZIFIZIEREN_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.VERLUSTQUOTE := gib_spezverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,2);
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"Verlustquote_beim_Spezifizieren_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ANFORDERUNGEN_BEIM_SPEZIFIZIEREN_VERLIEREN

rule ANFORDERUNGEN_BEIM_SPEZIFIZIEREN_VERLIEREN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT : BASE2_PRODUZIERT_Entity;
  SPEZIFIZIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DAS_HANDBUCH : HANDBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT,DIE_NOTIZEN,DAS_HANDBUCH,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"Verlustquote_beim_Spezifizieren_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  NOCH_ZU_VERLIERENDE_AFP : REAL := 0.0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL : REAL := 0.0;
  DUMMY : REAL := 0.0;
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "ANFORDERUNGEN_BEIM_SPEZIFIZIEREN_VERLIEREN";
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL := 0.0;
  DUMMY := 0.0;
  ID_DUMMY := 0;
  NOCH_ZU_VERLIERENDE_AFP := (THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.VERLUSTQUOTE / 100.0 ) * gib_afp(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET);
  while NOCH_ZU_VERLIERENDE_AFP > 0.0 loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET);
  if A.Rec_Elem_2 <= NOCH_ZU_VERLIERENDE_AFP then
  NOCH_ZU_VERLIERENDE_AFP := NOCH_ZU_VERLIERENDE_AFP - A.Rec_Elem_2;
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_SPEZ_IDS,A.Rec_Elem_1);
else
  ANTEIL := 1.0 - (NOCH_ZU_VERLIERENDE_AFP / A.Rec_Elem_2 );
  A.Rec_Elem_2 := A.Rec_Elem_2 - NOCH_ZU_VERLIERENDE_AFP;
  A.Rec_Elem_4 := ANTEIL * A.Rec_Elem_4;
  THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SPEZIFIZIERT.ARBEITSPAKET,A);
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
end if;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZIFIKATIONSREVIEW_MIT_2_GUTACHTERN_BEGINNT

rule SPEZIFIKATIONSREVIEW_MIT_2_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DIE_SPEZIFIKATION));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DIE_SPEZIFIKATION));
begin 
send_debug_message "SPEZIFIKATIONSREVIEW_MIT_2_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_FINDET_STATT_50 : BASE2_REVIEW_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_FINDET_STATT
  with
    PRUEFLING := DIE_SPEZIFIKATION;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_FINDET_STATT_50;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZIFIKATIONSREVIEW_MIT_3_GUTACHTERN_BEGINNT

rule SPEZIFIKATIONSREVIEW_MIT_3_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_3_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DIE_SPEZIFIKATION));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DIE_SPEZIFIKATION));
  not exists(BEGUTACHTET(*,GUTACHTER_3,DIE_SPEZIFIKATION));
begin 
send_debug_message "SPEZIFIKATIONSREVIEW_MIT_3_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_51 : BASE2_REVIEW_3_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_3_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_3_FINDET_STATT
  with
    PRUEFLING := DIE_SPEZIFIKATION;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    GUTACHTER3 := GUTACHTER_3;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_51;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZIFIKATIONSREVIEW_MIT_KUNDE_BEGINNT

rule SPEZIFIKATIONSREVIEW_MIT_KUNDE_BEGINNT[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DIE_SPEZIFIKATION));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DIE_SPEZIFIKATION));
begin 
send_debug_message "SPEZIFIKATIONSREVIEW_MIT_KUNDE_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_MIT_KUNDE_FINDET_STATT_52 : BASE2_REVIEW_MIT_KUNDE_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_MIT_KUNDE_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_MIT_KUNDE_FINDET_STATT
  with
    PRUEFLING := DIE_SPEZIFIKATION;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_MIT_KUNDE_FINDET_STATT_52;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_SPEZIFIKATION_REVIEWEN

rule Deactivating_1_SPEZIFIKATION_REVIEWEN[240] taking 0  is
structure 
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  Deakt_Relation : Deactivating_1_SPEZIFIKATION_REVIEWEN_Relation(THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2);
constraints 
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_SPEZIFIKATION_REVIEWEN";
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) then
  send_player_message AUFGEHOERT_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_1,DIE_SPEZIFIKATION);
  send_player_message AUFGEHOERT_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_2,DIE_SPEZIFIKATION);
  delete(R1);
delete(The_Attribute_Role_Of_R1);
  delete(R2);
delete(The_Attribute_Role_Of_R2);
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_SPEZIFIKATION_REVIEWEN

rule Deactivating_2_SPEZIFIKATION_REVIEWEN[239] taking 0  is
structure 
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  Deakt_Relation : Deactivating_2_SPEZIFIKATION_REVIEWEN_Relation(THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity,THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
constraints 
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_SPEZIFIKATION_REVIEWEN";
  delete(REVIEW);
delete(The_Attribute_Role_Of_REVIEW);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_SPEZIFIKATION_REVIEWEN

rule Deactivating_3_SPEZIFIKATION_REVIEWEN[238] taking 0  is
structure 
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
constraints 
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_SPEZIFIKATION_REVIEWEN";
  delete(THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_SPEZIFIKATION_REVIEWEN

rule Activating_SPEZIFIKATION_REVIEWEN[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,*,*,*));
begin 
send_debug_message "Activating_SPEZIFIKATION_REVIEWEN";
  create entity The_Attribute_Role_Of_R1 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_1;
    WAS := DIE_SPEZIFIKATION;
    Attribute_Role := The_Attribute_Role_Of_R1;
  end create;
  create entity The_Attribute_Role_Of_R2 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_2;
    WAS := DIE_SPEZIFIKATION;
    Attribute_Role := The_Attribute_Role_Of_R2;
  end create;
  create entity THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity aka new_unique_id(BASE2_2_SPEZIFIKATION_REVIEWEN_Entity)
 with
    LCD := current_date;
    T := 0;
    PRF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    K_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    X := 0.0;
    FEHLER_DIFF := 0.0;
    ENTDECKTE_FEHLER := 0.0;
    GESAMT_FEHLER := 0.0;
    GESAMT_AFP := 0.0;
    ANZ_SEITEN := 0;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_2_SPEZIFIKATION_REVIEWEN_Relation
  with
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT := THE_ATTRIBUTE_ROLE_OF_NOTIERT;
    RL_DER_REVIEWBERICHT := DER_REVIEWBERICHT;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_THE_ATTRIBUTE_ROLE_OF_R1 := THE_ATTRIBUTE_ROLE_OF_R1;
    RL_THE_ATTRIBUTE_ROLE_OF_R2 := THE_ATTRIBUTE_ROLE_OF_R2;
    RL_THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  end create;
  create relation Deactivating_1_SPEZIFIKATION_REVIEWEN_Relation
  with
    RL_THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
    RL_THE_ATTRIBUTE_ROLE_OF_R1 := THE_ATTRIBUTE_ROLE_OF_R1;
    RL_THE_ATTRIBUTE_ROLE_OF_R2 := THE_ATTRIBUTE_ROLE_OF_R2;
  end create;
  create relation Deactivating_2_SPEZIFIKATION_REVIEWEN_Relation
  with
    RL_THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
  end create;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.T := 0;
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) then
  send_player_message BEGONNEN_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_1,DIE_SPEZIFIKATION);
  send_player_message BEGONNEN_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_2,DIE_SPEZIFIKATION);
else
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_1,DIE_SPEZIFIKATION);
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_2,DIE_SPEZIFIKATION);
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_SPEZIFIKATION_REVIEWEN

rule Active_SPEZIFIKATION_REVIEWEN[790] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_SPEZIFIKATION_REVIEWEN";
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.LCD := current_date;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.T := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.T + DEL_TA.T;
  if THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.T >= 1440 then
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.ANZ_SEITEN := trunc(gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) * THE_ATTRIBUTE_ROLE_OF_NOTIERT.X_PRO_AFP + 0.9);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER := 0.0;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP := 0.0;
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) then
  DER_ZUSTAND.AUFWAND_FUER_KUNDE := DER_ZUSTAND.AUFWAND_FUER_KUNDE + 180.0 / 60.0;
end if;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 ) loop
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.REF_ANF := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF.Rec_Elem_1);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF.Rec_Elem_1);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B := gib_befund_zu_id(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF.Rec_Elem_1);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B);
  if THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 then
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ * (THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 ) / (THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF.Rec_Elem_2 - THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 );
else
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_7 := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF.Rec_Elem_2;
  if THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.X := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 - THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.X;
else
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 := (THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 ) * 100.0;
else
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
end if;
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) then
  if THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF.Rec_Elem_2 > THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 then
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 + (1.0 - THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 / 100.0 ) * 20.0;
end if;
  if THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 > 0.0 then
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 + (1.0 - THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 / 100.0 ) * 40.0;
end if;
end if;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 * THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP + (THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.K_ANF.Rec_Elem_2 - THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 ) * THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 / 100.0;
  DER_REVIEWBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B);
  DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_1);
end loop;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GERUNDET := float(round(THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP * 10.0)) / 10.0;
  send_player_message REVIEWSITZUNG_FINDET_STATT(DIE_SPEZIFIKATION,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.ANZ_SEITEN,trunc(THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER + 0.9),THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GERUNDET);
  replace_nth(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER, DER_REVIEWBERICHT.NUMMER);
  replace_nth(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP, DER_REVIEWBERICHT.NUMMER);
  DER_REVIEWBERICHT.FEHLER := DER_REVIEWBERICHT.FEHLER + THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER;
  DER_REVIEWBERICHT.VERLUSTE := DER_REVIEWBERICHT.VERLUSTE + THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.T := THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity.T - 1440;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.SREVIEW_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.SREVIEW_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.SREVIEW_ENDE < current_date ) then
  DER_REVIEWLOG.SREVIEW_ENDE := current_date;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: DRITTER_GUTACHTER_BEGINNT_SPEZIFIKATION_ZU_BEGUTACHTEN

rule DRITTER_GUTACHTER_BEGINNT_SPEZIFIKATION_ZU_BEGUTACHTEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BEGUTACHTET(*,GUTACHTER_3,DIE_SPEZIFIKATION));
  exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
begin 
send_debug_message "DRITTER_GUTACHTER_BEGINNT_SPEZIFIKATION_ZU_BEGUTACHTEN";
  create entity The_Attribute_Role_Of_BEGUTACHTET_53 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_3;
    WAS := DIE_SPEZIFIKATION;
    Attribute_Role := The_Attribute_Role_Of_BEGUTACHTET_53;
  end create;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_3,DIE_SPEZIFIKATION);
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZREVIEWAP_SCHNUEREN

rule SPEZREVIEWAP_SCHNUEREN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not ( Get_Index(K.REGELMENGE,"SpezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  exists(REVIEW_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2));
declare 
  VORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  GUTACHTER_3_ID : INTEGER := 0;
  DUMMY : STRING := " ";
begin 
send_debug_message "SPEZREVIEWAP_SCHNUEREN";
  VORBEREITET_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  GUTACHTER_3_ID := 0;
  DUMMY := " ";
  VORBEREITET_IDS := gib_ungepruefte_ids(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN,DER_REVIEWBERICHT.INHALT);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_NOTIZEN.UNBEARBEITETE_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_SPEZ_IDS);
  if exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  GUTACHTER_3_ID := GUTACHTER_3.AUTOR_ID;
else
  GUTACHTER_3_ID := GUTACHTER_2.AUTOR_ID;
end if;
  PRUEFBARE_IDS := gib_fremde_ids(VORBEREITET_IDS,DIE_SPEZIFIKATION.INHALT,GUTACHTER_1.AUTOR_ID,GUTACHTER_2.AUTOR_ID,GUTACHTER_3_ID);
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  while AFPS < 60.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
  DER_REVIEWBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_REVIEWBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET := PAKET;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"SpezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"SpezReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"SpezReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_SPEZIFIKATIONSREVIEWS_FERTIG_SEIN

rule MIT_SPEZIFIKATIONSREVIEWS_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_SPEZIFIKATIONSREVIEWS_FERTIG_SEIN";
  delete(SOLL_REVIEWEN);
delete(The_Attribute_Role_Of_SOLL_REVIEWEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_SPEZREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
  SEIN_LOG1 : ZEITERFASSUNGSBOGEN;
  SEIN_LOG2 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST1 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST1 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST1,GUTACHTER_1,SEIN_LOG1);
  THE_ATTRIBUTE_ROLE_OF_ERFASST2 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST2 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST2,GUTACHTER_2,SEIN_LOG2);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P1 : REAL := 0.0;
  P2 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_SPEZREVIEW_BERECHNEN";
  P1 := 0.0;
  P2 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DIE_SPEZIFIKATION)));
  P1 := gib_sreview_pruefleistung(GUTACHTER_1.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  P2 := gib_sreview_pruefleistung(GUTACHTER_2.ERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) then
  P1 := P1 * 0.6;
end if;
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_2,*)) then
  P2 := P2 * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_R1.PRUEFLEISTUNG := P1;
  THE_ATTRIBUTE_ROLE_OF_R2.PRUEFLEISTUNG := P2;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL := (AFP_PRO_MINUTE / P1 ) * 100.0;
  THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL := (AFP_PRO_MINUTE / P2 ) * 100.0;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.SREVIEW_AUFWAND := DER_REVIEWLOG.SREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.SREVIEW_AUFWAND := DER_REVIEWLOG.SREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG1.SPEZREVIEW.Rec_Elem_1 := SEIN_LOG1.SPEZREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG2.SPEZREVIEW.Rec_Elem_1 := SEIN_LOG2.SPEZREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_SPEZREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3 : BASE2_BEGUTACHTET_Entity;
  REVIEWT3 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT3,GUTACHTER_3,DIE_SPEZIFIKATION);
  SEIN_LOG3 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST3 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST3 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST3,GUTACHTER_3,SEIN_LOG3);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"SpezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P3 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_SPEZREVIEW_BERECHNEN";
  P3 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DIE_SPEZIFIKATION)));
  P3 := gib_sreview_pruefleistung(GUTACHTER_3.ERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_3,*)) then
  P3 := P3 * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.PRUEFLEISTUNG := P3;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL := (AFP_PRO_MINUTE / P3 ) * 100.0;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.SREVIEW_AUFWAND := DER_REVIEWLOG.SREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG3.SPEZREVIEW.Rec_Elem_1 := SEIN_LOG3.SPEZREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: FEQ_BEI_SPEZREVIEW_BERECHNEN

rule FEQ_BEI_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DER_KUNDE : KUNDE;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2));
  ( Get_Index(K.REGELMENGE,"SpezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"SpezReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  EINARBEITENDE_GUTACHTER : INTEGER := 0;
  FEQ : REAL := 0.0;
  DUMMY : STRING := " ";
begin 
send_debug_message "FEQ_BEI_SPEZREVIEW_BERECHNEN";
  EINARBEITENDE_GUTACHTER := 0;
  FEQ := 0.0;
  DUMMY := " ";
  EINARBEITENDE_GUTACHTER := count(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) + count(ARBEITET_SICH_EIN(*,GUTACHTER_2,*));
  if exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  EINARBEITENDE_GUTACHTER := EINARBEITENDE_GUTACHTER + count(ARBEITET_SICH_EIN(*,GUTACHTER_3,*));
  FEQ := gib_sreview_3_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  FEQ := gib_sreview_2_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 := FEQ * DIE_PRFEFF.SPEZREVIEWEFFEKTIVITAET * power(0.9,float(EINARBEITENDE_GUTACHTER));
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"SpezReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: VEQ_BEI_SPEZREVIEW_BERECHNEN

rule VEQ_BEI_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_REVIEWBERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_SPEZIFIKATION);
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity : BASE2_2_SPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Relation : BASE2_2_SPEZIFIKATION_REVIEWEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DIE_NOTIZEN,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DER_KUNDE : KUNDE;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2));
  ( Get_Index(K.REGELMENGE,"SpezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"SpezReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  DUMMY : STRING := " ";
begin 
send_debug_message "VEQ_BEI_SPEZREVIEW_BERECHNEN";
  DUMMY := " ";
  if exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_sreview_3_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_sreview_2_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"SpezReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_SPEZIFIKATION_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_SPEZIFIKATION_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_SPEZIFIKATION_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_54 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_SPEZIFIKATION;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_54;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_SPEZIFIKATION

rule Deactivating_1_ENTWICKLER_KORRIGIERT_SPEZIFIKATION[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_SPEZIFIKATION";
  delete(KORRIGIERT_S);
delete(The_Attribute_Role_Of_KORRIGIERT_S);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION

rule Deactivating_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION";
  send_player_message AUFGEHOERT_SPEZIFIKATION_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_SPEZIFIKATION

rule Deactivating_3_ENTWICKLER_KORRIGIERT_SPEZIFIKATION[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_SPEZIFIKATION";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_SPEZIFIKATION

rule Activating_ENTWICKLER_KORRIGIERT_SPEZIFIKATION[990] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_SPEZIFIKATION";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_FEHLER := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation
  with
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_SPEZIFIKATION_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_SPEZIFIKATION

rule Active_ENTWICKLER_KORRIGIERT_SPEZIFIKATION[790] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_SPEZIFIKATION";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A);
end if;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.FEHLERBQ.Rec_Elem_1 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.FEHLERBQ.Rec_Elem_1 / 100.0 ) );
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.VERLUSTBQ / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A_REF := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A_REF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A_REF.Rec_Elem_2;
end if;
end if;
  DIE_SPEZIFIKATION.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_2 / 100.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.ENTDECKTE_FEHLER / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.KORREKTURLEISTUNG.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.PRODUKTIVITAET;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.A.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.DT / 60.0;
  DER_REVIEWLOG.SREVIEW_K_AUFWAND := DER_REVIEWLOG.SREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.SPEZ_K.Rec_Elem_1 := SEIN_LOG.SPEZ_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.SREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.SREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.SREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.SREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZIFIKATIONSKORREKTURAP_SCHNUEREN

rule SPEZIFIKATIONSKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "SPEZIFIKATIONSKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DIE_SPEZIFIKATION.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 80.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 80.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"SpezifikationsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_DER_SPEZIFIKATION_FERTIG_SEIN

rule MIT_KORREKTUR_DER_SPEZIFIKATION_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DER_WUNSCH : KUNDENWUNSCH;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_DER_SPEZIFIKATION_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DER_WUNSCH.SOLL_ANFORDERUNGEN,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*)) or exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DIE_SPEZIFIKATION,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,*,*,*)) or exists_extended(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.SPEZREVIEWEFFEKTIVITAET := DIE_PRFEFF.SPEZREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_SPEZIFIKATION_ABBRECHEN

rule KORREKTUR_VON_SPEZIFIKATION_ABBRECHEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_SPEZIFIKATION_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN

rule KORREKTURLEISTUNG_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN";
  P := 0.0;
  P := gib_spezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.KORREKTURLEISTUNG.Rec_Elem_1 := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F := 0.0;
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  F := F5.Rec_Elem_1;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.FEHLERBQ.Rec_Elem_1 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN

rule PRODUKTIVITAET_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN";
  P := 0.0;
  P := gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.VERLUSTBQ := gib_spezvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN

rule FEHLERRATE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_SPEZIFIKATION_BEARBEITEN_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_S : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Relation(DIE_SPEZIFIKATION,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S,DIE_NOTIZEN,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_SPEZIFIKATION);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_SPEZIFIKATION)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_SPEZIFIKATION)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_SPEZIFIKATION,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SpezifikationsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_SPEZIFIKATIONSKORREKTUR_BERECHNEN";
  F := 0.0;
  F := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.1;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_S.FEHLERRATE.Rec_Elem_1 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_SPEZREVIEW_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_SPEZREVIEW_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_SPEZREVIEW_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_55 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_55;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  DER_ZUSTAND : PROJEKTZUSTAND;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity,DER_ZUSTAND);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW";
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.T / 60.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW

rule Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW[237] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AS := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AN := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    MAX_AF := 0.0;
    MAX_VERLUST := 0.0;
    AF_FAKTOR := 0.0;
    AF_NEU := 0.0;
    HINZUGEFUEGT_S_AFP := 0.0;
    HINZUGEFUEGT_E_AFP := 0.0;
    HINZUGEFUEGT_M_AFP := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    HINZUGEFUEGT_H_AFP := 0.0;
    HINZUGEFUEGTE_AF := 0.0;
    HINZUGEFUEGTE_GF := 0.0;
    HINZUGEFUEGTE_FF := 0.0;
    HINZUGEFUEGTE_IF := 0.0;
    HINZUGEFUEGTE_HF := 0.0;
    ZEIT_S := 0.0;
    ZEIT_E := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    ZEIT_H := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
    RL_DER_ZUSTAND := DER_ZUSTAND;
  end create;
  create relation Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_NEU := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0 * (1.0 - THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AN := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_2 and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_8 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_AF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AN.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AN.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AN.Rec_Elem_2;
end if;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_AF := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_AF;
  DIE_SPEZIFIKATION.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_4 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_E_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_GF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_E_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_GF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_E_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_2;
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_FF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_FF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP;
end if;
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC);
  DER_CODE.FEHLER := add_korr_max_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_NEU);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_IF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_7 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_IF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC);
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH := f_getselected_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_4 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_H_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_HF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_H_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_8 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_8 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGTE_HF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_H_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_2;
  DAS_HANDBUCH.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH);
end if;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_S / 60.0;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M ) / 60.0;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C / 60.0;
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H / 60.0;
  SEIN_LOG.SPEZ_K.Rec_Elem_1 := SEIN_LOG.SPEZ_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_S / 60.0;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C / 60.0;
  SEIN_LOG.HANDBUCH_K.Rec_Elem_1 := SEIN_LOG.HANDBUCH_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H / 60.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AN := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_SPEZ;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_E_AFP := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_3 /= 0 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2 < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_E_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_E_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_E_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_1 );
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_3 /= 0 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2 < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_1 );
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_2 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_2 < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AC.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 );
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_H_AFP := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_3 /= 0 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_2 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_2 < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_H_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_H_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_S_AFP;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.HINZUGEFUEGT_H_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_HANDBUCH;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AH.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH.Rec_Elem_1 );
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_S + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.AS.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_S * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_E * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_C * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.ZEIT_H * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.DT / 60.0;
  DER_REVIEWLOG.SREVIEW_K_AUFWAND := DER_REVIEWLOG.SREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.SREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.SREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.SREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.SREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_SPEZREVIEW

rule ALLESKORREKTURAP_SCHNUEREN_NACH_SPEZREVIEW[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_SPEZREVIEW";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DIE_SPEZIFIKATION.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 80.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 80.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Spezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_SPEZREVIEW_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_SPEZREVIEW_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Spezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_SPEZREVIEW_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*)) or exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DIE_SPEZIFIKATION,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DIE_SPEZIFIKATION,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DIE_SPEZIFIKATION,*,*,*)) or exists_extended(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_SPEZIFIKATION,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.SPEZREVIEWEFFEKTIVITAET := DIE_PRFEFF.SPEZREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_SPEZREVIEW_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_SPEZREVIEW_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_SPEZREVIEW_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_NACH_SPEZREVIEW_BERECHNEN

rule ALLESKORREKTURLEISTUNG_NACH_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Spezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PS : REAL := 0.0;
  PE : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PH : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_NACH_SPEZREVIEW_BERECHNEN";
  PS := 0.0;
  PE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PS := gib_spezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG);
  PE := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PC := gib_codekorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  PH := gib_handbuchkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PS := PS * 0.6;
  PE := gib_multiplizierte_quoten(PE,0.5);
  PM := gib_multiplizierte_quoten(PM,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
  PC := gib_multiplizierte_quoten(PH,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1 := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH := PH;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_NACH_SPEZREVIEW_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_NACH_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Spezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_NACH_SPEZREVIEW_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.7);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_NACH_SPEZREVIEW_BERECHNEN

rule ALLESPRODUKTIVITAET_NACH_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Spezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PS : REAL := 0.0;
  PE : REAL := 0.0;
  PM : REAL := 0.0;
  PC : REAL := 0.0;
  PH : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_NACH_SPEZREVIEW_BERECHNEN";
  PS := 0.0;
  PE := 0.0;
  PM := 0.0;
  PC := 0.0;
  PH := 0.0;
  PS := gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG,1);
  PE := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,1);
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  PH := gib_handbuchproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PS := PS * 0.5;
  PE := PE * 0.6;
  PM := PM * 0.6;
  PC := PC * 0.7;
  PH := PH * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_SPEZ := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_HANDBUCH := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_NACH_SPEZREVIEW_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_NACH_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Spezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_NACH_SPEZREVIEW_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_spezvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_NACH_SPEZREVIEW_BERECHNEN

rule ALLESFEHLERRATE_NACH_SPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Spezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FS : REAL := 0.0;
  FE : REAL := 0.0;
  FM : REAL := 0.0;
  FC : REAL := 0.0;
  FH : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_NACH_SPEZREVIEW_BERECHNEN";
  FS := 0.0;
  FE := 0.0;
  FM := 0.0;
  FC := 0.0;
  FH := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FS := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG,3);
  FE := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,3);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  FH := gib_handbuchfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FE := FE * 1.3;
  FS := FS * 1.1;
  FM := FM * 1.3;
  FC := FC * 1.2;
  FH := FH * 1.3;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 := FS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 := FE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_5 := FH;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_ZU_ENTWERFEN

rule ENTWICKLER_BEGINNT_ZU_ENTWERFEN[990] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_ENTWERFEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_ENTWERFEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_ENTWERFEN,EIN_ENTWICKLER,DER_ENTWURF);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  not (exists(PRODUZIERT(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_SPEZIFIKATION)) ) or float(length(DIE_SPEZIFIKATION.INHALT)) >= 0.5 * float(length(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
begin 
send_debug_message "ENTWICKLER_BEGINNT_ZU_ENTWERFEN";
  create entity The_Attribute_Role_Of_PRODUZIERT_56 : BASE2_PRODUZIERT_Entity aka new_unique_id(BASE2_PRODUZIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRODUKTIVITAET := 0.0;
    VERLUSTQUOTE := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VORGABEDOKUMENT := 2;
  end create;
  create relation PRODUZIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_ENTWURF;
    Attribute_Role := The_Attribute_Role_Of_PRODUZIERT_56;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_ENTWIRFT

rule Deactivating_1_ENTWICKLER_ENTWIRFT[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_ENTWURF : SYSTEMENTWURF;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  Deakt_Relation : Deactivating_1_ENTWICKLER_ENTWIRFT_Relation(THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
constraints 
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_ENTWIRFT";
  delete(ENTWIRFT);
delete(The_Attribute_Role_Of_ENTWIRFT);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_ENTWIRFT

rule Deactivating_2_ENTWICKLER_ENTWIRFT[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_ENTWIRFT_Relation(THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_ENTWIRFT";
  send_player_message AUFGEHOERT_SYSTEM_ZU_ENTWERFEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_ENTWIRFT

rule Deactivating_3_ENTWICKLER_ENTWIRFT[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_ENTWIRFT";
  delete(THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_ENTWIRFT

rule Activating_ENTWICKLER_ENTWIRFT[990] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_ENTWIRFT";
  create entity THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity aka new_unique_id(BASE2_2_ENTWICKLER_ENTWIRFT_Entity)
 with
    LCD := current_date;
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ID_DUMMY := 0;
  end create;
  create relation BASE2_2_ENTWICKLER_ENTWIRFT_Relation
  with
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity := THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_ENTWIRFT := THE_ATTRIBUTE_ROLE_OF_ENTWIRFT;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_ENTWIRFT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_ENTWIRFT := THE_ATTRIBUTE_ROLE_OF_ENTWIRFT;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_ENTWURF := DER_ENTWURF;
  end create;
  create relation Deactivating_2_ENTWICKLER_ENTWIRFT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.NOETIGE_ZEIT := 0.0;
  send_player_message BEGONNEN_SYSTEM_ZU_ENTWERFEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_ENTWIRFT

rule Active_ENTWICKLER_ENTWIRFT[790] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_ENTWIRFT";
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.T := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.T + THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.T > THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_2 > 0.0 then
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A);
  DER_ENTWURF.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DER_ENTWURF.UNBEARBEITETE_IDS,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_1);
  if THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT = 2 then
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_1);
end if;
  if THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT = 1 then
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_ENTW_IDS,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_1);
end if;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.B := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.B);
end if;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.T := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.T - THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.B := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A;
else
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.A.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.PRODUKTIVITAET;
end loop;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.DT / 60.0;
  DAS_LOGBUCH.ENTWURF_AUFWAND := DAS_LOGBUCH.ENTWURF_AUFWAND + THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.GROBENTWURF.Rec_Elem_1 := SEIN_LOG.GROBENTWURF.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.ENTWURF_BEGINN = 1901/01/01/00:00 ) then
  DAS_LOGBUCH.ENTWURF_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.ENTWURF_ENDE < current_date ) then
  DAS_LOGBUCH.ENTWURF_ENDE := current_date;
end if;
  send_tutor_message PRINT_STRING_REAL("Aufwand Entwerfen: ",DAS_LOGBUCH.ENTWURF_AUFWAND);
  send_tutor_message PRINT_STRING_REAL("AFP im Entwurf: ",gib_afp(DER_ENTWURF.INHALT));
  send_tutor_message PRINT_STRING_REAL("Fehler im Entwurf: ",gib_fehler(DER_ENTWURF.INHALT));
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWURFSARBEITSPAKET_SCHNUEREN

rule ENTWURFSARBEITSPAKET_SCHNUEREN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ENTWERFEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_ENTWERFEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_ENTWERFEN,EIN_ENTWICKLER,DER_ENTWURF);
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
declare 
  KORRIGIERTE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ENTWURFSARBEITSPAKET_SCHNUEREN";
  KORRIGIERTE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  if not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS) = 0 ) then
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT := 2;
  KORRIGIERTE_IDS := gib_korrigierte_ids(DER_BERICHT.INHALT,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  KORRIGIERTE_IDS := f_intersection_Bag_I_Type(KORRIGIERTE_IDS,DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  while AFPS < 50.0 and not ( length(KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(KORRIGIERTE_IDS);
  ID := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 50.0 and not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
else
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT := 1;
  while AFPS < 50.0 and not ( length(DIE_NOTIZEN.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET,A);
  DIE_NOTIZEN.IN_ARBEIT_FUER_ENTW_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_ENTW_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
end if;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"EntwurfsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_ENTWERFEN_FERTIG_SEIN

rule MIT_ENTWERFEN_FERTIG_SEIN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ENTWERFEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_ENTWERFEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_ENTWERFEN,EIN_ENTWICKLER,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_ENTWERFEN_FERTIG_SEIN";
  delete(SOLL_ENTWERFEN);
delete(The_Attribute_Role_Of_SOLL_ENTWERFEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWERFEN_ABBRECHEN

rule ENTWERFEN_ABBRECHEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "ENTWERFEN_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY := 0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET);
  if THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT = 2 then
  DIE_SPEZIFIKATION.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS,A.Rec_Elem_1);
else
  DIE_NOTIZEN.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_ENTW_IDS,A.Rec_Elem_1);
end if;
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_BEIM_ENTWERFEN_BERECHNEN

rule PRODUKTIVITAET_BEIM_ENTWERFEN_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_BEIM_ENTWERFEN_BERECHNEN";
  P := 0.0;
  P := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT = 1 then
  P := 1.0 / (1.0 / P + 1.0 / (gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 2.0 ) );
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_BEIM_ENTWERFEN_BERECHNEN

rule FEHLERRATE_BEIM_ENTWERFEN_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F_G : REAL := 0.0;
  F_A : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_BEIM_ENTWERFEN_BERECHNEN";
  F_G := 0.0;
  F_A := 0.0;
  F_G := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT = 2 then
  F_A := 0.0;
else
  F_A := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.8;
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F_G := F_G * 1.3;
  F_A := F_A * 1.1;
end if;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.FEHLERRATE.Rec_Elem_2 := F_G;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.FEHLERRATE.Rec_Elem_1 := F_A;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTQUOTE_BEIM_ENTWERFEN_BERECHNEN

rule VERLUSTQUOTE_BEIM_ENTWERFEN_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  V : REAL := 0.0;
begin 
send_debug_message "VERLUSTQUOTE_BEIM_ENTWERFEN_BERECHNEN";
  V := 0.0;
  V := gib_entwurfsverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,2);
  if THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT = 1 then
  V := V + gib_spezverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * 2.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VERLUSTQUOTE := V;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"Verlustquote_beim_Entwerfen_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ANFORDERUNGEN_BEIM_ENTWERFEN_VERLIEREN

rule ANFORDERUNGEN_BEIM_ENTWERFEN_VERLIEREN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT : BASE2_PRODUZIERT_Entity;
  ENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,EIN_ENTWICKLER,DER_ENTWURF);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity : BASE2_2_ENTWICKLER_ENTWIRFT_Entity;
  THE_BASE2_2_ENTWICKLER_ENTWIRFT_Relation : BASE2_2_ENTWICKLER_ENTWIRFT_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_ENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_ENTWIRFT_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_ENTWURF)) or not ( length(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"Verlustquote_beim_Entwerfen_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  NOCH_ZU_VERLIERENDE_AFP : REAL := 0.0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL : REAL := 0.0;
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "ANFORDERUNGEN_BEIM_ENTWERFEN_VERLIEREN";
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL := 0.0;
  ID_DUMMY := 0;
  NOCH_ZU_VERLIERENDE_AFP := (THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VERLUSTQUOTE / 100.0 ) * gib_afp(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET);
  while NOCH_ZU_VERLIERENDE_AFP > 0.0 loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET);
  if A.Rec_Elem_2 <= NOCH_ZU_VERLIERENDE_AFP then
  NOCH_ZU_VERLIERENDE_AFP := NOCH_ZU_VERLIERENDE_AFP - A.Rec_Elem_2;
  if THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.VORGABEDOKUMENT = 2 then
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS,A.Rec_Elem_1);
else
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_ENTW_IDS,A.Rec_Elem_1);
end if;
else
  ANTEIL := 1.0 - (NOCH_ZU_VERLIERENDE_AFP / A.Rec_Elem_2 );
  A.Rec_Elem_2 := A.Rec_Elem_2 - NOCH_ZU_VERLIERENDE_AFP;
  A.Rec_Elem_4 := ANTEIL * A.Rec_Elem_4;
  THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_ENTWIRFT.ARBEITSPAKET,A);
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
end if;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWURFSREVIEW_MIT_2_GUTACHTERN_BEGINNT

rule ENTWURFSREVIEW_MIT_2_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DER_ENTWURF));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DER_ENTWURF));
begin 
send_debug_message "ENTWURFSREVIEW_MIT_2_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_FINDET_STATT_57 : BASE2_REVIEW_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_FINDET_STATT
  with
    PRUEFLING := DER_ENTWURF;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_FINDET_STATT_57;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWURFSREVIEW_MIT_3_GUTACHTERN_BEGINNT

rule ENTWURFSREVIEW_MIT_3_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_3_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DER_ENTWURF));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DER_ENTWURF));
  not exists(BEGUTACHTET(*,GUTACHTER_3,DER_ENTWURF));
begin 
send_debug_message "ENTWURFSREVIEW_MIT_3_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_58 : BASE2_REVIEW_3_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_3_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_3_FINDET_STATT
  with
    PRUEFLING := DER_ENTWURF;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    GUTACHTER3 := GUTACHTER_3;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_58;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_SYSTEMENTWURF_REVIEWEN

rule Deactivating_1_SYSTEMENTWURF_REVIEWEN[240] taking 0  is
structure 
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  DER_ENTWURF : SYSTEMENTWURF;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  Deakt_Relation : Deactivating_1_SYSTEMENTWURF_REVIEWEN_Relation(THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity,THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
constraints 
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_SYSTEMENTWURF_REVIEWEN";
  delete(REVIEW);
delete(The_Attribute_Role_Of_REVIEW);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_SYSTEMENTWURF_REVIEWEN

rule Deactivating_2_SYSTEMENTWURF_REVIEWEN[239] taking 0  is
structure 
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
constraints 
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_SYSTEMENTWURF_REVIEWEN";
  delete(THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_SYSTEMENTWURF_REVIEWEN

rule Activating_SYSTEMENTWURF_REVIEWEN[990] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,*,*,*));
begin 
send_debug_message "Activating_SYSTEMENTWURF_REVIEWEN";
  create entity The_Attribute_Role_Of_R1 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_1;
    WAS := DER_ENTWURF;
    Attribute_Role := The_Attribute_Role_Of_R1;
  end create;
  create entity The_Attribute_Role_Of_R2 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_2;
    WAS := DER_ENTWURF;
    Attribute_Role := The_Attribute_Role_Of_R2;
  end create;
  create entity THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity aka new_unique_id(BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity)
 with
    LCD := current_date;
    T := 0;
    PRF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    X := 0.0;
    FEHLER_DIFF := 0.0;
    ENTDECKTE_FEHLER := 0.0;
    GESAMT_FEHLER := 0.0;
    GESAMT_AFP := 0.0;
    ANZ_SEITEN := 0;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation
  with
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity := THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT := THE_ATTRIBUTE_ROLE_OF_NOTIERT;
    RL_DER_REVIEWBERICHT := DER_REVIEWBERICHT;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_THE_ATTRIBUTE_ROLE_OF_R1 := THE_ATTRIBUTE_ROLE_OF_R1;
    RL_THE_ATTRIBUTE_ROLE_OF_R2 := THE_ATTRIBUTE_ROLE_OF_R2;
    RL_THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  end create;
  create relation Deactivating_1_SYSTEMENTWURF_REVIEWEN_Relation
  with
    RL_THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
  end create;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.T := 0;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_1,DER_ENTWURF);
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_2,DER_ENTWURF);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_SYSTEMENTWURF_REVIEWEN

rule Active_SYSTEMENTWURF_REVIEWEN[790] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_SYSTEMENTWURF_REVIEWEN";
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.LCD := current_date;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.T := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.T + DEL_TA.T;
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.T >= 1440 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ANZ_SEITEN := trunc(gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) * THE_ATTRIBUTE_ROLE_OF_NOTIERT.X_PRO_AFP + 0.9);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER := 0.0;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_AFP := 0.0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 ) loop
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B := gib_befund_zu_id(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B);
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_AFP := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_AFP + (THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 ) * THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_8 / 100.0;
else
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_7 := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_2;
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2;
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 - THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_5 / THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X;
else
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 * THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X - THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_5 + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 * (1.0 - THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X ) * 0.7;
end if;
else
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_2 / 100.0;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_3 := (THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 ) * 100.0;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_3 := 0.0;
end if;
  if (THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 ) or (THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 = 0.0 ) then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_9 := 0.0;
else
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 - THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X;
else
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 * THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.X - THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_4;
end if;
  if THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_2 := (THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 ) * 100.0;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_9 := 15.0;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.REF_ANF.Rec_Elem_4 * 15.0 / 100.0;
end if;
  DER_REVIEWBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B);
  DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.B.Rec_Elem_1);
end loop;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GERUNDET := float(round(THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_AFP * 10.0)) / 10.0;
  send_player_message REVIEWSITZUNG_FINDET_STATT(DER_ENTWURF,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.ANZ_SEITEN,trunc(THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER + 0.9),THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GERUNDET);
  replace_nth(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER, DER_REVIEWBERICHT.NUMMER);
  replace_nth(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_AFP, DER_REVIEWBERICHT.NUMMER);
  DER_REVIEWBERICHT.FEHLER := DER_REVIEWBERICHT.FEHLER + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_FEHLER;
  DER_REVIEWBERICHT.VERLUSTE := DER_REVIEWBERICHT.VERLUSTE + THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.GESAMT_AFP;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.T := THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity.T - 1440;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.EREVIEW_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.EREVIEW_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.EREVIEW_ENDE < current_date ) then
  DER_REVIEWLOG.EREVIEW_ENDE := current_date;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: DRITTER_GUTACHTER_BEGINNT_ENTWURF_ZU_BEGUTACHTEN

rule DRITTER_GUTACHTER_BEGINNT_ENTWURF_ZU_BEGUTACHTEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BEGUTACHTET(*,GUTACHTER_3,DER_ENTWURF));
  exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
begin 
send_debug_message "DRITTER_GUTACHTER_BEGINNT_ENTWURF_ZU_BEGUTACHTEN";
  create entity The_Attribute_Role_Of_BEGUTACHTET_59 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_3;
    WAS := DER_ENTWURF;
    Attribute_Role := The_Attribute_Role_Of_BEGUTACHTET_59;
  end create;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_3,DER_ENTWURF);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWURFSREVIEWAP_SCHNUEREN

rule ENTWURFSREVIEWAP_SCHNUEREN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not ( Get_Index(K.REGELMENGE,"EntwurfsReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  exists(REVIEW_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2));
declare 
  VORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  UNVORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  GUTACHTER_3_ID : INTEGER := 0;
  DUMMY : STRING := " ";
begin 
send_debug_message "ENTWURFSREVIEWAP_SCHNUEREN";
  VORBEREITET_IDS := Bag_I_Type'();
  UNVORBEREITET_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  GUTACHTER_3_ID := 0;
  DUMMY := " ";
  VORBEREITET_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_REVIEWBERICHT.INHALT);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_SPEZIFIKATION.IN_ARBEIT_FUER_ENTW_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_ENTW_IDS);
  if exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  GUTACHTER_3_ID := GUTACHTER_3.AUTOR_ID;
else
  GUTACHTER_3_ID := GUTACHTER_2.AUTOR_ID;
end if;
  PRUEFBARE_IDS := gib_fremde_ids(VORBEREITET_IDS,DER_ENTWURF.INHALT,GUTACHTER_1.AUTOR_ID,GUTACHTER_2.AUTOR_ID,GUTACHTER_3_ID);
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  while AFPS < 40.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
else
  ID := f_getselected_Bag_I_Type(VORBEREITET_IDS,ID);
end if;
end loop;
  UNVORBEREITET_IDS := gib_ungepruefte_ids(DER_ENTWURF.INHALT,DER_REVIEWBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNVORBEREITET_IDS,VORBEREITET_IDS);
  while AFPS < 50.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := f_get_Bag_I_Type(PRUEFBARE_IDS);
  B := gib_anforderung_zu_id(DER_ENTWURF.INHALT,A.Rec_Elem_1);
  A.Rec_Elem_2 := B.Rec_Elem_2;
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + B.Rec_Elem_2;
end loop;
  DER_REVIEWBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_REVIEWBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET := PAKET;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"EntwurfsReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"EntwurfsReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"EntwurfsReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_ENTWURFSREVIEWS_FERTIG_SEIN

rule MIT_ENTWURFSREVIEWS_FERTIG_SEIN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_ENTWURFSREVIEWS_FERTIG_SEIN";
  delete(SOLL_REVIEWEN);
delete(The_Attribute_Role_Of_SOLL_REVIEWEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_ENTWURFSREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
  SEIN_LOG1 : ZEITERFASSUNGSBOGEN;
  SEIN_LOG2 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST1 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST1 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST1,GUTACHTER_1,SEIN_LOG1);
  THE_ATTRIBUTE_ROLE_OF_ERFASST2 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST2 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST2,GUTACHTER_2,SEIN_LOG2);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P1 : REAL := 0.0;
  P2 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_ENTWURFSREVIEW_BERECHNEN";
  P1 := 0.0;
  P2 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DER_ENTWURF)));
  P1 := gib_ereview_pruefleistung(GUTACHTER_1.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  P2 := gib_ereview_pruefleistung(GUTACHTER_2.ERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) then
  P1 := P1 * 0.5;
end if;
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_2,*)) then
  P2 := P2 * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_R1.PRUEFLEISTUNG := P1;
  THE_ATTRIBUTE_ROLE_OF_R2.PRUEFLEISTUNG := P2;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL := (AFP_PRO_MINUTE / P1 ) * 100.0;
  THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL := (AFP_PRO_MINUTE / P2 ) * 100.0;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.EREVIEW_AUFWAND := DER_REVIEWLOG.EREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.EREVIEW_AUFWAND := DER_REVIEWLOG.EREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG1.GROBENTWURFSREVIEW.Rec_Elem_1 := SEIN_LOG1.GROBENTWURFSREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG2.GROBENTWURFSREVIEW.Rec_Elem_1 := SEIN_LOG2.GROBENTWURFSREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_ENTWURFSREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3 : BASE2_BEGUTACHTET_Entity;
  REVIEWT3 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT3,GUTACHTER_3,DER_ENTWURF);
  SEIN_LOG3 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST3 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST3 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST3,GUTACHTER_3,SEIN_LOG3);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"EntwurfsReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P3 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_ENTWURFSREVIEW_BERECHNEN";
  P3 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DER_ENTWURF)));
  P3 := gib_ereview_pruefleistung(GUTACHTER_3.ERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_3,*)) then
  P3 := P3 * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.PRUEFLEISTUNG := P3;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL := (AFP_PRO_MINUTE / P3 ) * 100.0;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.EREVIEW_AUFWAND := DER_REVIEWLOG.EREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG3.GROBENTWURFSREVIEW.Rec_Elem_1 := SEIN_LOG3.GROBENTWURFSREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: FEQ_BEI_ENTWURFSREVIEW_BERECHNEN

rule FEQ_BEI_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"EntwurfsReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  EINARBEITENDE_GUTACHTER : INTEGER := 0;
  FEQ : REAL := 0.0;
  DUMMY : STRING := " ";
begin 
send_debug_message "FEQ_BEI_ENTWURFSREVIEW_BERECHNEN";
  EINARBEITENDE_GUTACHTER := 0;
  FEQ := 0.0;
  DUMMY := " ";
  EINARBEITENDE_GUTACHTER := count(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) + count(ARBEITET_SICH_EIN(*,GUTACHTER_2,*));
  if exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  EINARBEITENDE_GUTACHTER := EINARBEITENDE_GUTACHTER + count(ARBEITET_SICH_EIN(*,GUTACHTER_3,*));
  FEQ := gib_ereview_3_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  FEQ := gib_ereview_2_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 := FEQ * DIE_PRFEFF.ENTWURFSREVIEWEFFEKTIVITAET * power(0.8,float(EINARBEITENDE_GUTACHTER));
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_2 := THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"EntwurfsReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: VEQ_BEI_ENTWURFSREVIEW_BERECHNEN

rule VEQ_BEI_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_REVIEWBERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_ENTWURF);
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity : BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity;
  THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation : BASE2_2_SYSTEMENTWURF_REVIEWEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_SYSTEMENTWURF_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"EntwurfsReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  DUMMY : STRING := " ";
begin 
send_debug_message "VEQ_BEI_ENTWURFSREVIEW_BERECHNEN";
  DUMMY := " ";
  if exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_ereview_3_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_ereview_2_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"EntwurfsReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_SYSTEMENTWURF_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_SYSTEMENTWURF_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_SYSTEMENTWURF_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_60 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_ENTWURF;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_60;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF

rule Deactivating_1_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_ENTWURF : SYSTEMENTWURF;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF";
  delete(KORRIGIERT_E);
delete(The_Attribute_Role_Of_KORRIGIERT_E);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF

rule Deactivating_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF";
  send_player_message AUFGEHOERT_SYSTEMENTWURF_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF

rule Deactivating_3_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF

rule Activating_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF[990] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation
  with
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity := THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_SYSTEMENTWURF_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF

rule Active_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF[790] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A);
end if;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_4 * (((THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.FEHLERBQ.Rec_Elem_1 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_4 * (1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.FEHLERBQ.Rec_Elem_1 / 100.0 ) );
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_5 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_3 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.FEHLERBQ.Rec_Elem_2 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_5 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_3 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.FEHLERBQ.Rec_Elem_2 / 100.0 ) );
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A_REF.Rec_Elem_2;
end if;
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A_REF := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_9 / 100.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.ENTDECKTE_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.KORREKTURLEISTUNG.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.KORREKTURLEISTUNG.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.PRODUKTIVITAET;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.A.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.DT / 60.0;
  DER_REVIEWLOG.EREVIEW_K_AUFWAND := DER_REVIEWLOG.EREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.EREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.EREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.EREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.EREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWURFSKORREKTURAP_SCHNUEREN

rule ENTWURFSKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ENTWURFSKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_ENTWURF.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 50.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 50.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"EntwurfsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_DES_ENTWURFS_FERTIG_SEIN

rule MIT_KORREKTUR_DES_ENTWURFS_FERTIG_SEIN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_DES_ENTWURFS_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DER_ENTWURF,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,*,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.ENTWURFSREVIEWEFFEKTIVITAET := DIE_PRFEFF.ENTWURFSREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_ENTWURF_ABBRECHEN

rule KORREKTUR_VON_ENTWURF_ABBRECHEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_ENTWURF_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_ENTWURFSKORREKTUR_BERECHNEN

rule KORREKTURLEISTUNG_FUER_ENTWURFSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_ENTWURFSKORREKTUR_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.5);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_ENTWURFSKORREKTUR_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_ENTWURFSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_ENTWURFSKORREKTUR_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_ENTWURFSKORREKTUR_BERECHNEN

rule PRODUKTIVITAET_FUER_ENTWURFSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_ENTWURFSKORREKTUR_BERECHNEN";
  P := 0.0;
  P := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_ENTWURFSKORREKTUR_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_ENTWURFSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_ENTWURFSKORREKTUR_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.VERLUSTBQ := gib_entwurfvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_ENTWURFSKORREKTUR_BERECHNEN

rule FEHLERRATE_FUER_ENTWURFSKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DER_ENTWURF : SYSTEMENTWURF;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ENTWURF,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity;
  THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation : BASE2_1_SYSTEMENTWURF_BEARBEITEN_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_E : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Relation(DER_ENTWURF,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_SYSTEMENTWURF_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_SYSTEMENTWURF_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_ENTWURF);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_ENTWURF)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_ENTWURF)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_ENTWURF,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"EntwurfsKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_ENTWURFSKORREKTUR_BERECHNEN";
  F := 0.0;
  F := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.3;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_E.FEHLERRATE.Rec_Elem_2 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_ENTWURFSREVIEW_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_ENTWURFSREVIEW_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_ENTWURFSREVIEW_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_61 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_61;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  DER_ZUSTAND : PROJEKTZUSTAND;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity,DER_ZUSTAND);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW";
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.T / 60.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW

rule Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW[237] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AS := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_RF := 0.0;
    MAX_AF := 0.0;
    MAX_GF := 0.0;
    MAX_VERLUST := 0.0;
    AF_FAKTOR := 0.0;
    GF_FAKTOR := 0.0;
    AF_NEU := 0.0;
    GF_NEU := 0.0;
    HINZUGEFUEGT_E_AFP := 0.0;
    HINZUGEFUEGT_M_AFP := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    HINZUGEFUEGTE_AF := 0.0;
    HINZUGEFUEGTE_GF := 0.0;
    HINZUGEFUEGTE_FF := 0.0;
    HINZUGEFUEGTE_IF := 0.0;
    ZEIT_S := 0.0;
    ZEIT_E := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
    RL_DER_ZUSTAND := DER_ZUSTAND;
  end create;
  create relation Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AF_FAKTOR := 1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AF_NEU := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 * (1.0 - THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_3 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GF_NEU := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_3 / 100.0 * (1.0 - THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS.Rec_Elem_4 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 ) );
  DIE_SPEZIFIKATION.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_3 / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2 and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_8 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_GF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_GF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_AF;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_AF := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_GF := 0.0;
end if;
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_FF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_FF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP;
end if;
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC);
  DER_CODE.FEHLER := add_korr_max_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AF_NEU);
  DER_CODE.FEHLER := add_korr_max_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GF_NEU);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.GF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_IF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_7 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGTE_IF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC);
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC);
end if;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_S / 60.0;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M ) / 60.0;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C / 60.0;
  SEIN_LOG.SPEZ_K.Rec_Elem_1 := SEIN_LOG.SPEZ_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_S / 60.0;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_E / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C / 60.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_RF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_3 /= 0 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2 < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_4 * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 ) / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_1 ) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_2 );
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_2 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_2 < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_E_AFP;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_4 * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_9 ) / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AC.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 ) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_2 );
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_S + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.AE.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_S * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_E * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.ZEIT_C * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.DT / 60.0;
  DER_REVIEWLOG.EREVIEW_K_AUFWAND := DER_REVIEWLOG.EREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.EREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.EREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.EREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.EREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_ENTWURFSREVIEW

rule ALLESKORREKTURAP_SCHNUEREN_NACH_ENTWURFSREVIEW[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_ENTWURFSREVIEW";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_ENTWURF.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 50.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 50.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Entwurfsreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_ENTWURFSREVIEW_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_ENTWURFSREVIEW_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Entwurfsreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_ENTWURFSREVIEW_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DER_ENTWURF,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DER_ENTWURF,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DER_ENTWURF,*,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.ENTWURFSREVIEWEFFEKTIVITAET := DIE_PRFEFF.ENTWURFSREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_ENTWURFSREVIEW_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_ENTWURFSREVIEW_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_ENTWURFSREVIEW_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_NACH_ENTWURFSREVIEW_BERECHNEN

rule ALLESKORREKTURLEISTUNG_NACH_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Entwurfsreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PS : REAL := 0.0;
  PE : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_NACH_ENTWURFSREVIEW_BERECHNEN";
  PS := 0.0;
  PE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PS := gib_spezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG);
  PE := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PC := gib_codekorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PS := PS * 0.6;
  PE := gib_multiplizierte_quoten(PE,0.5);
  PM := gib_multiplizierte_quoten(PM,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1 := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_NACH_ENTWURFSREVIEW_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_NACH_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Entwurfsreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_NACH_ENTWURFSREVIEW_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_NACH_ENTWURFSREVIEW_BERECHNEN

rule ALLESPRODUKTIVITAET_NACH_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Entwurfsreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PE : REAL := 0.0;
  PM : REAL := 0.0;
  PC : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_NACH_ENTWURFSREVIEW_BERECHNEN";
  PE := 0.0;
  PM := 0.0;
  PC := 0.0;
  PE := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,1);
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PE := PE * 0.6;
  PM := PM * 0.6;
  PC := PC * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_NACH_ENTWURFSREVIEW_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_NACH_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Entwurfsreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_NACH_ENTWURFSREVIEW_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_entwurfvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_NACH_ENTWURFSREVIEW_BERECHNEN

rule ALLESFEHLERRATE_NACH_ENTWURFSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ENTWURFSREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Entwurfsreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FE : REAL := 0.0;
  FM : REAL := 0.0;
  FC : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_NACH_ENTWURFSREVIEW_BERECHNEN";
  FE := 0.0;
  FM := 0.0;
  FC := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FE := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,3);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FE := FE * 1.3;
  FM := FM * 1.3;
  FC := FC * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 := FE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_MODULE_ZU_SPEZIFIZIEREN

rule ENTWICKLER_BEGINNT_MODULE_ZU_SPEZIFIZIEREN[990] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_FEINENTWERFEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_FEINENTWERFEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_FEINENTWERFEN,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  not (exists(PRODUZIERT(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_SPEZIFIKATION)) or exists(PRODUZIERT(*,*,DER_ENTWURF)) ) or float(length(DER_ENTWURF.INHALT)) >= 0.5 * float(length(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
begin 
send_debug_message "ENTWICKLER_BEGINNT_MODULE_ZU_SPEZIFIZIEREN";
  create entity The_Attribute_Role_Of_PRODUZIERT_62 : BASE2_PRODUZIERT_Entity aka new_unique_id(BASE2_PRODUZIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRODUKTIVITAET := 0.0;
    VERLUSTQUOTE := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VORGABEDOKUMENT := 3;
  end create;
  create relation PRODUZIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_PRODUZIERT_62;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_SPEZIFIZIERT_MODULE

rule Deactivating_1_ENTWICKLER_SPEZIFIZIERT_MODULE[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  Deakt_Relation : Deactivating_1_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
constraints 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_SPEZIFIZIERT_MODULE";
  delete(FEINENTWIRFT);
delete(The_Attribute_Role_Of_FEINENTWIRFT);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_SPEZIFIZIERT_MODULE

rule Deactivating_2_ENTWICKLER_SPEZIFIZIERT_MODULE[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_SPEZIFIZIERT_MODULE";
  send_player_message AUFGEHOERT_MODULE_ZU_SPEZIFIZIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_SPEZIFIZIERT_MODULE

rule Deactivating_3_ENTWICKLER_SPEZIFIZIERT_MODULE[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_SPEZIFIZIERT_MODULE";
  delete(THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_SPEZIFIZIERT_MODULE

rule Activating_ENTWICKLER_SPEZIFIZIERT_MODULE[990] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_SPEZIFIZIERT_MODULE";
  create entity THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity aka new_unique_id(BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity)
 with
    LCD := current_date;
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ID_DUMMY := 0;
  end create;
  create relation BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation
  with
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT := THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT := THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
  end create;
  create relation Deactivating_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_MODULE_ZU_SPEZIFIZIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_SPEZIFIZIERT_MODULE

rule Active_ENTWICKLER_SPEZIFIZIERT_MODULE[790] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_SPEZIFIZIERT_MODULE";
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.LCD := current_date;
  send_tutor_message PRINT_STRING_REAL("Aktueller Zeitanteil beim Module spez. ",THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ZEITANTEIL);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.T := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.T + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.T > THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_2 > 0.0 then
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A);
  DIE_MODULSPEZ.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_MODULSPEZ.UNBEARBEITETE_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_1);
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT = 3 then
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_1);
end if;
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT = 2 then
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_1);
end if;
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT = 1 then
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_MSPEZ_IDS,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_1);
end if;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.B := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.B);
end if;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.T := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.T - THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.B := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A;
else
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.A.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.PRODUKTIVITAET;
end loop;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.DT / 60.0;
  DAS_LOGBUCH.MODSPEZ_AUFWAND := DAS_LOGBUCH.MODSPEZ_AUFWAND + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.FEINENTWURF.Rec_Elem_1 := SEIN_LOG.FEINENTWURF.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.MODSPEZ_BEGINN = 1901/01/01/00:00 ) then
  DAS_LOGBUCH.MODSPEZ_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.MODSPEZ_ENDE < current_date ) then
  DAS_LOGBUCH.MODSPEZ_ENDE := current_date;
end if;
  send_tutor_message PRINT_STRING_REAL("Aufwand Module spez.: ",DAS_LOGBUCH.MODSPEZ_AUFWAND);
  send_tutor_message PRINT_STRING_REAL("AFP in Modulspez.: ",gib_afp(DIE_MODULSPEZ.INHALT));
  send_tutor_message PRINT_STRING_REAL("Fehler in Modulspez.: ",gib_fehler(DIE_MODULSPEZ.INHALT));
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: MODULSPEZARBEITSPAKET_SCHNUEREN

rule MODULSPEZARBEITSPAKET_SCHNUEREN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_FEINENTWERFEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_FEINENTWERFEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_FEINENTWERFEN,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DER_SR_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DER_ER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
declare 
  KORRIGIERTE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "MODULSPEZARBEITSPAKET_SCHNUEREN";
  KORRIGIERTE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  if not ( length(DER_ENTWURF.UNBEARBEITETE_IDS) = 0 ) then
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT := 3;
  KORRIGIERTE_IDS := gib_korrigierte_ids(DER_ER_BERICHT.INHALT,DER_ER_BERICHT.NICHT_KORRIGIERTE_IDS);
  KORRIGIERTE_IDS := f_intersection_Bag_I_Type(KORRIGIERTE_IDS,DER_ENTWURF.UNBEARBEITETE_IDS);
  while AFPS < 30.0 and not ( length(KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(KORRIGIERTE_IDS);
  ID := f_getselected_Bag_I_Type(DER_ENTWURF.UNBEARBEITETE_IDS,ID);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,A);
  DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS := f_put_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_ENTWURF.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_ENTWURF.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,A);
  DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS := f_put_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
else
  if not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS) = 0 ) then
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT := 2;
  KORRIGIERTE_IDS := gib_korrigierte_ids(DER_SR_BERICHT.INHALT,DER_SR_BERICHT.NICHT_KORRIGIERTE_IDS);
  KORRIGIERTE_IDS := f_intersection_Bag_I_Type(KORRIGIERTE_IDS,DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  while AFPS < 30.0 and not ( length(KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(KORRIGIERTE_IDS);
  ID := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
else
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT := 1;
  while AFPS < 30.0 and not ( length(DIE_NOTIZEN.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,A);
  DIE_NOTIZEN.IN_ARBEIT_FUER_MSPEZ_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
end if;
end if;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"ModulspezArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_SPEZIFIZIEREN_DER_MODULE_FERTIG_SEIN

rule MIT_SPEZIFIZIEREN_DER_MODULE_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_FEINENTWERFEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_FEINENTWERFEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_FEINENTWERFEN,EIN_ENTWICKLER,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_SPEZIFIZIEREN_DER_MODULE_FERTIG_SEIN";
  delete(SOLL_FEINENTWERFEN);
delete(The_Attribute_Role_Of_SOLL_FEINENTWERFEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: SPEZIFIZIEREN_DER_MODULE_ABBRECHEN

rule SPEZIFIZIEREN_DER_MODULE_ABBRECHEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "SPEZIFIZIEREN_DER_MODULE_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY := 0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET);
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT = 3 then
  DER_ENTWURF.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DER_ENTWURF.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
else
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT = 2 then
  DIE_SPEZIFIKATION.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
else
  DIE_NOTIZEN.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
end if;
end if;
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN

rule PRODUKTIVITAET_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
  P1 : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN";
  P := 0.0;
  P1 := 0.0;
  P := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT /= 3 then
  P1 := 1.0 / P;
  P1 := P1 + 1.0 / (gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.5 );
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT /= 2 then
  P1 := P1 + 1.0 / (gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 2.0 );
end if;
  P := 1.0 / P1;
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN

rule FEHLERRATE_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F_F : REAL := 0.0;
  F_G : REAL := 0.0;
  F_A : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN";
  F_F := 0.0;
  F_G := 0.0;
  F_A := 0.0;
  F_F := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  F_A := 0.0;
  F_G := 0.0;
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT /= 3 then
  F_G := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.0;
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT /= 2 then
  F_A := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.8;
end if;
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F_F := F_F * 1.3;
  F_G := F_G * 1.3;
  F_A := F_A * 1.1;
end if;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.FEHLERRATE.Rec_Elem_3 := F_F;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.FEHLERRATE.Rec_Elem_2 := F_G;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.FEHLERRATE.Rec_Elem_1 := F_A;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTQUOTE_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN

rule VERLUSTQUOTE_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  V : REAL := 0.0;
begin 
send_debug_message "VERLUSTQUOTE_BEIM_SPEZIFIZIEREN_DER_MODULE_BERECHNEN";
  V := 0.0;
  V := gib_modulspezverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,2);
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT /= 3 then
  V := V + gib_entwurfsverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * 1.5;
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT /= 2 then
  V := V + gib_spezverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * 2.5;
end if;
end if;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VERLUSTQUOTE := V;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"Verlustquote_beim_Spezifizieren_der_Module_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ANFORDERUNGEN_BEIM_SPEZIFIZIEREN_DER_MODULE_VERLIEREN

rule ANFORDERUNGEN_BEIM_SPEZIFIZIEREN_DER_MODULE_VERLIEREN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT : BASE2_PRODUZIERT_Entity;
  FEINENTWIRFT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,EIN_ENTWICKLER,DIE_MODULSPEZ);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity;
  THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation : BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SPEZIFIZIERT_MODULE_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ)) or not ( length(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"Verlustquote_beim_Spezifizieren_der_Module_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  NOCH_ZU_VERLIERENDE_AFP : REAL := 0.0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL : REAL := 0.0;
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "ANFORDERUNGEN_BEIM_SPEZIFIZIEREN_DER_MODULE_VERLIEREN";
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL := 0.0;
  ID_DUMMY := 0;
  NOCH_ZU_VERLIERENDE_AFP := (THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VERLUSTQUOTE / 100.0 ) * gib_afp(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET);
  while NOCH_ZU_VERLIERENDE_AFP > 0.0 loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET);
  if A.Rec_Elem_2 <= NOCH_ZU_VERLIERENDE_AFP then
  NOCH_ZU_VERLIERENDE_AFP := NOCH_ZU_VERLIERENDE_AFP - A.Rec_Elem_2;
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT = 3 then
  ID_DUMMY := f_getselected_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
else
  if THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.VORGABEDOKUMENT = 2 then
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
else
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_MSPEZ_IDS,A.Rec_Elem_1);
end if;
end if;
else
  ANTEIL := 1.0 - (NOCH_ZU_VERLIERENDE_AFP / A.Rec_Elem_2 );
  A.Rec_Elem_2 := A.Rec_Elem_2 - NOCH_ZU_VERLIERENDE_AFP;
  A.Rec_Elem_4 := ANTEIL * A.Rec_Elem_4;
  A.Rec_Elem_5 := ANTEIL * A.Rec_Elem_5;
  THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_FEINENTWIRFT.ARBEITSPAKET,A);
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
end if;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: MODSPEZREVIEW_MIT_2_GUTACHTERN_BEGINNT

rule MODSPEZREVIEW_MIT_2_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DIE_MODULSPEZ));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DIE_MODULSPEZ));
begin 
send_debug_message "MODSPEZREVIEW_MIT_2_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_FINDET_STATT_63 : BASE2_REVIEW_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_FINDET_STATT
  with
    PRUEFLING := DIE_MODULSPEZ;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_FINDET_STATT_63;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: MODSPEZREVIEW_MIT_3_GUTACHTERN_BEGINNT

rule MODSPEZREVIEW_MIT_3_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_3_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DIE_MODULSPEZ));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DIE_MODULSPEZ));
  not exists(BEGUTACHTET(*,GUTACHTER_3,DIE_MODULSPEZ));
begin 
send_debug_message "MODSPEZREVIEW_MIT_3_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_64 : BASE2_REVIEW_3_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_3_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_3_FINDET_STATT
  with
    PRUEFLING := DIE_MODULSPEZ;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    GUTACHTER3 := GUTACHTER_3;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_64;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_MODULSPEZIFIKATION_REVIEWEN

rule Deactivating_1_MODULSPEZIFIKATION_REVIEWEN[240] taking 0  is
structure 
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  Deakt_Relation : Deactivating_1_MODULSPEZIFIKATION_REVIEWEN_Relation(THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity,THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
constraints 
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_MODULSPEZIFIKATION_REVIEWEN";
  delete(REVIEW);
delete(The_Attribute_Role_Of_REVIEW);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_MODULSPEZIFIKATION_REVIEWEN

rule Deactivating_2_MODULSPEZIFIKATION_REVIEWEN[239] taking 0  is
structure 
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
constraints 
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_MODULSPEZIFIKATION_REVIEWEN";
  delete(THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_MODULSPEZIFIKATION_REVIEWEN

rule Activating_MODULSPEZIFIKATION_REVIEWEN[990] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,*,*,*));
begin 
send_debug_message "Activating_MODULSPEZIFIKATION_REVIEWEN";
  create entity The_Attribute_Role_Of_R1 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_1;
    WAS := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_R1;
  end create;
  create entity The_Attribute_Role_Of_R2 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_2;
    WAS := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_R2;
  end create;
  create entity THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity aka new_unique_id(BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity)
 with
    LCD := current_date;
    T := 0;
    PRF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    X := 0.0;
    FEHLER_DIFF := 0.0;
    ENTDECKTE_FEHLER := 0.0;
    GESAMT_FEHLER := 0.0;
    GESAMT_AFP := 0.0;
    ANZ_SEITEN := 0;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation
  with
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT := THE_ATTRIBUTE_ROLE_OF_NOTIERT;
    RL_DER_REVIEWBERICHT := DER_REVIEWBERICHT;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_THE_ATTRIBUTE_ROLE_OF_R1 := THE_ATTRIBUTE_ROLE_OF_R1;
    RL_THE_ATTRIBUTE_ROLE_OF_R2 := THE_ATTRIBUTE_ROLE_OF_R2;
    RL_THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  end create;
  create relation Deactivating_1_MODULSPEZIFIKATION_REVIEWEN_Relation
  with
    RL_THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
  end create;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.T := 0;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_1,DIE_MODULSPEZ);
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_2,DIE_MODULSPEZ);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_MODULSPEZIFIKATION_REVIEWEN

rule Active_MODULSPEZIFIKATION_REVIEWEN[790] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_MODULSPEZIFIKATION_REVIEWEN";
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.LCD := current_date;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.T := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.T + DEL_TA.T;
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.T >= 1440 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ANZ_SEITEN := trunc(gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) * THE_ATTRIBUTE_ROLE_OF_NOTIERT.X_PRO_AFP + 0.9);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER := 0.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP := 0.0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 ) loop
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B := gib_befund_zu_id(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B);
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP + (THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 ) * THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 / 100.0;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_7 := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2;
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2;
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_6 - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_6 / THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_6 * THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_6 + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_6 * (1.0 - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X ) * 0.7;
end if;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_3 / 100.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_4 := (THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_6 ) * 100.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_4 := 0.0;
end if;
  if (THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 ) or (THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 = 0.0 ) then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_3 := 0.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_9 := 0.0;
else
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_5 / THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 * THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_5;
end if;
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_2 / 100.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_3 := (THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 ) * 100.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_3 := 0.0;
end if;
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 * THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.X - THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_4;
end if;
  if THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 := (THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 ) * 100.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_9 := 15.0;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.REF_ANF.Rec_Elem_5 * 15.0 / 100.0;
end if;
  DER_REVIEWBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B);
  DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.B.Rec_Elem_1);
end loop;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GERUNDET := float(round(THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP * 10.0)) / 10.0;
  send_player_message REVIEWSITZUNG_FINDET_STATT(DIE_MODULSPEZ,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.ANZ_SEITEN,trunc(THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER + 0.9),THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GERUNDET);
  replace_nth(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER, DER_REVIEWBERICHT.NUMMER);
  replace_nth(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP, DER_REVIEWBERICHT.NUMMER);
  DER_REVIEWBERICHT.FEHLER := DER_REVIEWBERICHT.FEHLER + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_FEHLER;
  DER_REVIEWBERICHT.VERLUSTE := DER_REVIEWBERICHT.VERLUSTE + THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.GESAMT_AFP;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.T := THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity.T - 1440;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.MREVIEW_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.MREVIEW_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.MREVIEW_ENDE < current_date ) then
  DER_REVIEWLOG.MREVIEW_ENDE := current_date;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: DRITTER_GUTACHTER_BEGINNT_MODULSPEZIFIKATION_ZU_BEGUTACHTEN

rule DRITTER_GUTACHTER_BEGINNT_MODULSPEZIFIKATION_ZU_BEGUTACHTEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BEGUTACHTET(*,GUTACHTER_3,DIE_MODULSPEZ));
  exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
begin 
send_debug_message "DRITTER_GUTACHTER_BEGINNT_MODULSPEZIFIKATION_ZU_BEGUTACHTEN";
  create entity The_Attribute_Role_Of_BEGUTACHTET_65 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_3;
    WAS := DIE_MODULSPEZ;
    Attribute_Role := The_Attribute_Role_Of_BEGUTACHTET_65;
  end create;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_3,DIE_MODULSPEZ);
end rule;
-----------------------------------------------------------------------------
-- Regel: MODULSPEZREVIEWAP_SCHNUEREN

rule MODULSPEZREVIEWAP_SCHNUEREN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not ( Get_Index(K.REGELMENGE,"ModulspezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  exists(REVIEW_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2));
declare 
  VORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  UNVORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  GUTACHTER_3_ID : INTEGER := 0;
  DUMMY : STRING := " ";
begin 
send_debug_message "MODULSPEZREVIEWAP_SCHNUEREN";
  VORBEREITET_IDS := Bag_I_Type'();
  UNVORBEREITET_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  GUTACHTER_3_ID := 0;
  DUMMY := " ";
  VORBEREITET_IDS := gib_ungepruefte_ids(DER_ENTWURF.INHALT,DER_REVIEWBERICHT.INHALT);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DER_ENTWURF.UNBEARBEITETE_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DER_ENTWURF.IN_ARBEIT_FUER_MSPEZ_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_SPEZIFIKATION.IN_ARBEIT_FUER_MSPEZ_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_MSPEZ_IDS);
  if exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  GUTACHTER_3_ID := GUTACHTER_3.AUTOR_ID;
else
  GUTACHTER_3_ID := GUTACHTER_2.AUTOR_ID;
end if;
  PRUEFBARE_IDS := gib_fremde_ids(VORBEREITET_IDS,DIE_MODULSPEZ.INHALT,GUTACHTER_1.AUTOR_ID,GUTACHTER_2.AUTOR_ID,GUTACHTER_3_ID);
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  while AFPS < 40.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
else
  ID := f_getselected_Bag_I_Type(VORBEREITET_IDS,ID);
end if;
end loop;
  UNVORBEREITET_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_REVIEWBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNVORBEREITET_IDS,VORBEREITET_IDS);
  while AFPS < 40.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := f_get_Bag_I_Type(PRUEFBARE_IDS);
  B := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,A.Rec_Elem_1);
  A.Rec_Elem_2 := B.Rec_Elem_2;
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + B.Rec_Elem_2;
end loop;
  DER_REVIEWBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_REVIEWBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET := PAKET;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"ModulspezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"ModulspezReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"ModulspezReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_MODULSPEZIFIKATIONSREVIEWS_FERTIG_SEIN

rule MIT_MODULSPEZIFIKATIONSREVIEWS_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  AUFTRAG : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_MODULSPEZIFIKATIONSREVIEWS_FERTIG_SEIN";
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_MODULSPEZREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_MODULSPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
  SEIN_LOG1 : ZEITERFASSUNGSBOGEN;
  SEIN_LOG2 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST1 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST1 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST1,GUTACHTER_1,SEIN_LOG1);
  THE_ATTRIBUTE_ROLE_OF_ERFASST2 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST2 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST2,GUTACHTER_2,SEIN_LOG2);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P1 : REAL := 0.0;
  P2 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_MODULSPEZREVIEW_BERECHNEN";
  P1 := 0.0;
  P2 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DIE_MODULSPEZ)));
  P1 := gib_msreview_pruefleistung(GUTACHTER_1.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  P2 := gib_msreview_pruefleistung(GUTACHTER_2.ERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) then
  P1 := P1 * 0.5;
end if;
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_2,*)) then
  P2 := P2 * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_R1.PRUEFLEISTUNG := P1;
  THE_ATTRIBUTE_ROLE_OF_R2.PRUEFLEISTUNG := P2;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL := (AFP_PRO_MINUTE / P1 ) * 100.0;
  THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL := (AFP_PRO_MINUTE / P2 ) * 100.0;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.MREVIEW_AUFWAND := DER_REVIEWLOG.MREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.MREVIEW_AUFWAND := DER_REVIEWLOG.MREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG1.FEINENTWURFSREVIEW.Rec_Elem_1 := SEIN_LOG1.FEINENTWURFSREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG2.FEINENTWURFSREVIEW.Rec_Elem_1 := SEIN_LOG2.FEINENTWURFSREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_MODULSPEZREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_MODULSPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3 : BASE2_BEGUTACHTET_Entity;
  REVIEWT3 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT3,GUTACHTER_3,DIE_MODULSPEZ);
  SEIN_LOG3 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST3 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST3 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST3,GUTACHTER_3,SEIN_LOG3);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"ModulspezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P3 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_MODULSPEZREVIEW_BERECHNEN";
  P3 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DIE_MODULSPEZ)));
  P3 := gib_msreview_pruefleistung(GUTACHTER_3.ERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_3,*)) then
  P3 := P3 * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.PRUEFLEISTUNG := P3;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL := (AFP_PRO_MINUTE / P3 ) * 100.0;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.MREVIEW_AUFWAND := DER_REVIEWLOG.MREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG3.FEINENTWURFSREVIEW.Rec_Elem_1 := SEIN_LOG3.FEINENTWURFSREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: FEQ_BEI_MODULSPEZIFIKATIONSREVIEW_BERECHNEN

rule FEQ_BEI_MODULSPEZIFIKATIONSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"ModulspezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  EINARBEITENDE_GUTACHTER : INTEGER := 0;
  FEQ : REAL := 0.0;
  DUMMY : STRING := " ";
begin 
send_debug_message "FEQ_BEI_MODULSPEZIFIKATIONSREVIEW_BERECHNEN";
  EINARBEITENDE_GUTACHTER := 0;
  FEQ := 0.0;
  DUMMY := " ";
  EINARBEITENDE_GUTACHTER := count(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) + count(ARBEITET_SICH_EIN(*,GUTACHTER_2,*));
  if exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  EINARBEITENDE_GUTACHTER := EINARBEITENDE_GUTACHTER + count(ARBEITET_SICH_EIN(*,GUTACHTER_3,*));
  FEQ := gib_msreview_3_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  FEQ := gib_msreview_2_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  FEQ := FEQ * DIE_PRFEFF.MODULSPEZREVIEWEFFEKTIVITAET * power(0.8,float(EINARBEITENDE_GUTACHTER));
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 := FEQ;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_2 := FEQ;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_3 := FEQ;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"ModulspezReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: VEQ_BEI_MODULSPEZIFIKATIONSREVIEW_BERECHNEN

rule VEQ_BEI_MODULSPEZIFIKATIONSREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_REVIEWBERICHT : MODULSPEZREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DIE_MODULSPEZ);
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity;
  THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation : BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_MODULSPEZIFIKATION_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"ModulspezReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  DUMMY : STRING := " ";
begin 
send_debug_message "VEQ_BEI_MODULSPEZIFIKATIONSREVIEW_BERECHNEN";
  DUMMY := " ";
  if exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_msreview_3_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_msreview_2_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"ModulspezReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_MODULSPEZ_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_MODULSPEZ_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_MODULSPEZ_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_66 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_MODULSPEZ;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_66;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION

rule Deactivating_1_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION";
  delete(KORRIGIERT_MS);
delete(The_Attribute_Role_Of_KORRIGIERT_MS);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION

rule Deactivating_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION";
  send_player_message AUFGEHOERT_MODULSPEZ_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION

rule Deactivating_3_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION

rule Activating_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION[990] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation
  with
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity := THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_MODULSPEZ_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION

rule Active_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION[790] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A);
end if;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_4 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERBQ.Rec_Elem_1 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_4 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERBQ.Rec_Elem_1 / 100.0 ) );
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_5 * (((THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERBQ.Rec_Elem_2 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_5 * (1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERBQ.Rec_Elem_2 / 100.0 ) );
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_6 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_4 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERBQ.Rec_Elem_3 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_6 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_4 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERBQ.Rec_Elem_3 / 100.0 ) );
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A_REF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A_REF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A_REF.Rec_Elem_2;
end if;
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_4 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A_REF := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A_REF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_9 / 100.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.KORREKTURLEISTUNG.Rec_Elem_1 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_GF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.KORREKTURLEISTUNG.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.KORREKTURLEISTUNG.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.PRODUKTIVITAET;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.A.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.DT / 60.0;
  DER_REVIEWLOG.MREVIEW_K_AUFWAND := DER_REVIEWLOG.MREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.MREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.MREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.MREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.MREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: MODULSPEZKORREKTURAP_SCHNUEREN

rule MODULSPEZKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "MODULSPEZKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DIE_MODULSPEZ.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 50.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 50.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"ModulspezKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_DER_MODULSPEZ_FERTIG_SEIN

rule MIT_KORREKTUR_DER_MODULSPEZ_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_DER_MODULSPEZ_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DER_ENTWURF.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DIE_MODULSPEZ,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,*,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.MODULSPEZREVIEWEFFEKTIVITAET := DIE_PRFEFF.MODULSPEZREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_MODULSPEZIFIKATION_ABBRECHEN

rule KORREKTUR_VON_MODULSPEZIFIKATION_ABBRECHEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_MODULSPEZIFIKATION_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_MODULSPEZKORREKTUR_BERECHNEN

rule KORREKTURLEISTUNG_FUER_MODULSPEZKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_MODULSPEZKORREKTUR_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.5);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_MODULSPEZKORREKTUR_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_MODULSPEZKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_MODULSPEZKORREKTUR_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_MODULSPEZKORREKTUR_BERECHNEN

rule PRODUKTIVITAET_FUER_MODULSPEZKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_MODULSPEZKORREKTUR_BERECHNEN";
  P := 0.0;
  P := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_MODULSPEZKORREKTUR_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_MODULSPEZKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_MODULSPEZKORREKTUR_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.VERLUSTBQ := gib_modulspezvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_MODULSPEZKORREKTUR_BERECHNEN

rule FEHLERRATE_FUER_MODULSPEZKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DIE_MODULSPEZ,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity;
  THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation : BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_MS : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Relation(DIE_MODULSPEZ,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_MODULSPEZIFIKATION_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS,DER_ENTWURF,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_MODULSPEZIFIKATION_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DIE_MODULSPEZ);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DIE_MODULSPEZ)) or exists_extended(SOLL_BEARBEITEN(*,*,DIE_MODULSPEZ)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_MODULSPEZ,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModulspezKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_MODULSPEZKORREKTUR_BERECHNEN";
  F := 0.0;
  F := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.3;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_MS.FEHLERRATE.Rec_Elem_3 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_MODULSPEZREVIEW_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_MODULSPEZREVIEW_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_MODULSPEZREVIEW_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_67 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_67;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  DER_ZUSTAND : PROJEKTZUSTAND;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity,DER_ZUSTAND);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW";
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.T / 60.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW

rule Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW[237] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    MAX_AF := 0.0;
    MAX_GF := 0.0;
    MAX_FF := 0.0;
    MAX_VERLUST := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_RF := 0.0;
    AF_FAKTOR := 0.0;
    GF_FAKTOR := 0.0;
    FF_FAKTOR := 0.0;
    AF_NEU := 0.0;
    GF_NEU := 0.0;
    FF_NEU := 0.0;
    HINZUGEFUEGT_M_AFP := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    HINZUGEFUEGTE_AF := 0.0;
    HINZUGEFUEGTE_GF := 0.0;
    HINZUGEFUEGTE_FF := 0.0;
    HINZUGEFUEGTE_IF := 0.0;
    ZEIT_E := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
    RL_DER_ZUSTAND := DER_ZUSTAND;
  end create;
  create relation Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AF_NEU := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0 * (1.0 - THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.GF_FAKTOR := 1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.GF_NEU := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 * (1.0 - THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.FF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_4 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.FF_NEU := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_4 / 100.0 * (1.0 - THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_9 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE.Rec_Elem_5 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_9 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0 ) );
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.GF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_4 / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.FF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2 and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_8 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_FF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_FF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_AF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_GF;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_AF := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_GF := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_FF := 0.0;
end if;
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC);
  DER_CODE.FEHLER := add_korr_max_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AF_NEU);
  DER_CODE.FEHLER := add_korr_max_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.GF_NEU);
  DER_CODE.FEHLER := add_korr_max_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_FF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.FF_NEU);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.GF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6 := reduziere(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.FF_FAKTOR,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_FF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_IF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_7 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGTE_IF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC);
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC);
end if;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_M ) / 60.0;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C / 60.0;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_E / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C / 60.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_4 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_RF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_2 then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_2 < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_M_AFP;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_5 * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_9 ) / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AC.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.B.Rec_Elem_4 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_FF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_FF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.MAX_FF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 ) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_2 ) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_3 );
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_M + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.AM.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_E * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.ZEIT_C * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.DT / 60.0;
  DER_REVIEWLOG.MREVIEW_K_AUFWAND := DER_REVIEWLOG.MREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.MREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.MREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.MREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.MREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_MODULSPEZREVIEW

rule ALLESKORREKTURAP_SCHNUEREN_NACH_MODULSPEZREVIEW[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_MODULSPEZREVIEW";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DIE_MODULSPEZ.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 50.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 50.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modulspezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_MODULSPEZREVIEW_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_MODULSPEZREVIEW_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modulspezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_MODULSPEZREVIEW_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DER_ENTWURF.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DIE_MODULSPEZ,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DIE_MODULSPEZ,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DIE_MODULSPEZ,*,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.MODULSPEZREVIEWEFFEKTIVITAET := DIE_PRFEFF.MODULSPEZREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_MODULSPEZREVIEW_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_MODULSPEZREVIEW_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_MODULSPEZREVIEW_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_NACH_MODULSPEZREVIEW_BERECHNEN

rule ALLESKORREKTURLEISTUNG_NACH_MODULSPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modulspezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PE : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_NACH_MODULSPEZREVIEW_BERECHNEN";
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PE := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  PC := gib_codekorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PM := gib_multiplizierte_quoten(PM,0.5);
  PE := gib_multiplizierte_quoten(PE,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_NACH_MODULSPEZREVIEW_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_NACH_MODULSPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modulspezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_NACH_MODULSPEZREVIEW_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_NACH_MODULSPEZREVIEW_BERECHNEN

rule ALLESPRODUKTIVITAET_NACH_MODULSPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modulspezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PM : REAL := 0.0;
  PE : REAL := 0.0;
  PC : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_NACH_MODULSPEZREVIEW_BERECHNEN";
  PM := 0.0;
  PE := 0.0;
  PC := 0.0;
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PE := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PM := PM * 0.6;
  PE := PE * 0.6;
  PC := PC * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_NACH_MODULSPEZREVIEW_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_NACH_MODULSPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modulspezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_NACH_MODULSPEZREVIEW_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_modulspezvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_NACH_MODULSPEZREVIEW_BERECHNEN

rule ALLESFEHLERRATE_NACH_MODULSPEZREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULSPEZREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULSPEZREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modulspezreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FM : REAL := 0.0;
  FE : REAL := 0.0;
  FC : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_NACH_MODULSPEZREVIEW_BERECHNEN";
  FM := 0.0;
  FE := 0.0;
  FC := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FE := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FM := FM * 1.3;
  FE := FE * 1.3;
  FC := FC * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 := FE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_ZU_CODIEREN

rule ENTWICKLER_BEGINNT_ZU_CODIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_CODIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_CODIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_CODIEREN,EIN_ENTWICKLER,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  not (exists(PRODUZIERT(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_SPEZIFIKATION)) or exists(PRODUZIERT(*,*,DER_ENTWURF)) or exists(PRODUZIERT(*,*,DIE_MODULSPEZ)) ) or float(length(DIE_MODULSPEZ.INHALT)) >= 0.5 * float(length(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
begin 
send_debug_message "ENTWICKLER_BEGINNT_ZU_CODIEREN";
  create entity The_Attribute_Role_Of_PRODUZIERT_68 : BASE2_PRODUZIERT_Entity aka new_unique_id(BASE2_PRODUZIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRODUKTIVITAET := 0.0;
    VERLUSTQUOTE := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VORGABEDOKUMENT := 4;
  end create;
  create relation PRODUZIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_PRODUZIERT_68;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_CODIERT

rule Deactivating_1_ENTWICKLER_CODIERT[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  Deakt_Relation : Deactivating_1_ENTWICKLER_CODIERT_Relation(THE_BASE2_2_ENTWICKLER_CODIERT_Entity,THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
constraints 
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_CODIERT";
  delete(CODIERT);
delete(The_Attribute_Role_Of_CODIERT);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_CODIERT

rule Deactivating_2_ENTWICKLER_CODIERT[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_CODIERT_Relation(THE_BASE2_2_ENTWICKLER_CODIERT_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_CODIERT";
  send_player_message AUFGEHOERT_ZU_CODIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_CODIERT

rule Deactivating_3_ENTWICKLER_CODIERT[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_CODIERT";
  delete(THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_CODIERT

rule Activating_ENTWICKLER_CODIERT[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_CODIERT";
  create entity THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity aka new_unique_id(BASE2_2_ENTWICKLER_CODIERT_Entity)
 with
    LCD := current_date;
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ID_DUMMY := 0;
  end create;
  create relation BASE2_2_ENTWICKLER_CODIERT_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_CODIERT := THE_ATTRIBUTE_ROLE_OF_CODIERT;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_CODIERT_Entity := THE_BASE2_2_ENTWICKLER_CODIERT_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_CODIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_CODIERT_Entity := THE_BASE2_2_ENTWICKLER_CODIERT_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_CODIERT := THE_ATTRIBUTE_ROLE_OF_CODIERT;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
  end create;
  create relation Deactivating_2_ENTWICKLER_CODIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_CODIERT_Entity := THE_BASE2_2_ENTWICKLER_CODIERT_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ZU_CODIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_CODIERT

rule Active_ENTWICKLER_CODIERT[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_CODIERT";
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_CODIERT.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.T := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.T + THE_BASE2_2_ENTWICKLER_CODIERT_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_CODIERT_Entity.T > THE_BASE2_2_ENTWICKLER_CODIERT_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_2 > 0.0 then
  DER_CODE.FEHLER := add_neue_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A);
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A);
  DER_CODE.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DER_CODE.UNBEARBEITETE_IDS,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_1);
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 4 then
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_1);
end if;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 3 then
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_1);
end if;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 2 then
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_1);
end if;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 1 then
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_1);
end if;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.B := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.B);
end if;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.T := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.T - THE_BASE2_2_ENTWICKLER_CODIERT_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_CODIERT_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.B := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A;
else
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_CODIERT_Entity.A.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_CODIERT.PRODUKTIVITAET;
end loop;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_CODIERT_Entity.DT / 60.0;
  DAS_LOGBUCH.CODE_AUFWAND := DAS_LOGBUCH.CODE_AUFWAND + THE_BASE2_2_ENTWICKLER_CODIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.CODE.Rec_Elem_1 := SEIN_LOG.CODE.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_CODIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.CODE_BEGINN = 1901/01/01/00:00 ) then
  DAS_LOGBUCH.CODE_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.CODE_ENDE < current_date ) then
  DAS_LOGBUCH.CODE_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: CODEARBEITSPAKET_SCHNUEREN

rule CODEARBEITSPAKET_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_CODIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_CODIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_CODIEREN,EIN_ENTWICKLER,DER_CODE);
  DER_SR_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
  DER_ER_BERICHT : SYSTEMENTWURFSREVIEWBERICHT;
  DER_MR_BERICHT : MODULSPEZREVIEWBERICHT;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
declare 
  KORRIGIERTE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "CODEARBEITSPAKET_SCHNUEREN";
  KORRIGIERTE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  if not ( length(DIE_MODULSPEZ.UNBEARBEITETE_IDS) = 0 ) then
  THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT := 4;
  KORRIGIERTE_IDS := gib_korrigierte_ids(DER_MR_BERICHT.INHALT,DER_MR_BERICHT.NICHT_KORRIGIERTE_IDS);
  KORRIGIERTE_IDS := f_intersection_Bag_I_Type(KORRIGIERTE_IDS,DIE_MODULSPEZ.UNBEARBEITETE_IDS);
  while AFPS < 15.0 and not ( length(KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(KORRIGIERTE_IDS);
  ID := f_getselected_Bag_I_Type(DIE_MODULSPEZ.UNBEARBEITETE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS := f_put_Bag_I_Type(DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 15.0 and not ( length(DIE_MODULSPEZ.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_MODULSPEZ.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS := f_put_Bag_I_Type(DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
else
  if not ( length(DER_ENTWURF.UNBEARBEITETE_IDS) = 0 ) then
  THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT := 3;
  KORRIGIERTE_IDS := gib_korrigierte_ids(DER_ER_BERICHT.INHALT,DER_ER_BERICHT.NICHT_KORRIGIERTE_IDS);
  KORRIGIERTE_IDS := f_intersection_Bag_I_Type(KORRIGIERTE_IDS,DER_ENTWURF.UNBEARBEITETE_IDS);
  while AFPS < 15.0 and not ( length(KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(KORRIGIERTE_IDS);
  ID := f_getselected_Bag_I_Type(DER_ENTWURF.UNBEARBEITETE_IDS,ID);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS := f_put_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 15.0 and not ( length(DER_ENTWURF.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_ENTWURF.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS := f_put_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
else
  if not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS) = 0 ) then
  THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT := 2;
  KORRIGIERTE_IDS := gib_korrigierte_ids(DER_SR_BERICHT.INHALT,DER_SR_BERICHT.NICHT_KORRIGIERTE_IDS);
  KORRIGIERTE_IDS := f_intersection_Bag_I_Type(KORRIGIERTE_IDS,DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  while AFPS < 15.0 and not ( length(KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(KORRIGIERTE_IDS);
  ID := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 15.0 and not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
else
  THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT := 1;
  while AFPS < 15.0 and not ( length(DIE_NOTIZEN.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
end if;
end if;
end if;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"CodeArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_CODIEREN_FERTIG_SEIN

rule MIT_CODIEREN_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_CODIEREN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_CODIEREN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_CODIEREN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodeArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_CODIEREN_FERTIG_SEIN";
  delete(SOLL_CODIEREN);
delete(The_Attribute_Role_Of_SOLL_CODIEREN);
end rule;
-----------------------------------------------------------------------------
-- Regel: CODIEREN_ABBRECHEN

rule CODIEREN_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "CODIEREN_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY := 0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET);
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 4 then
  DIE_MODULSPEZ.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_MODULSPEZ.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
else
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 3 then
  DER_ENTWURF.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DER_ENTWURF.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
else
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 2 then
  DIE_SPEZIFIKATION.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
else
  DIE_NOTIZEN.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
end if;
end if;
end if;
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_BEIM_CODIEREN_BERECHNEN

rule PRODUKTIVITAET_BEIM_CODIEREN_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodeArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
  P1 : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_BEIM_CODIEREN_BERECHNEN";
  P := 0.0;
  P1 := 0.0;
  P := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 4 then
  P1 := 1.0 / P;
  P1 := P1 + 1.0 / (gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.2 );
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 3 then
  P1 := P1 + 1.0 / (gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.5 );
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 2 then
  P1 := P1 + 1.0 / (gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 2.0 );
end if;
end if;
  P := 1.0 / P1;
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_BEIM_CODIEREN_BERECHNEN

rule FEHLERRATE_BEIM_CODIEREN_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodeArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F_I : REAL := 0.0;
  F_F : REAL := 0.0;
  F_G : REAL := 0.0;
  F_A : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_BEIM_CODIEREN_BERECHNEN";
  F_I := 0.0;
  F_F := 0.0;
  F_G := 0.0;
  F_A := 0.0;
  F_I := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  F_A := 0.0;
  F_G := 0.0;
  F_F := 0.0;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 4 then
  F_F := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 1.9;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 3 then
  F_G := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.0;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 2 then
  F_A := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.8;
end if;
end if;
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F_I := F_I * 1.2;
  F_F := F_F * 1.3;
  F_G := F_G * 1.3;
  F_A := F_A * 1.1;
end if;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_4 := F_I;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_3 := F_F;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_2 := F_G;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.FEHLERRATE.Rec_Elem_1 := F_A;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTQUOTE_BEIM_CODIEREN_BERECHNEN

rule VERLUSTQUOTE_BEIM_CODIEREN_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodeArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  V : REAL := 0.0;
begin 
send_debug_message "VERLUSTQUOTE_BEIM_CODIEREN_BERECHNEN";
  V := 0.0;
  V := gib_codierungsverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,2);
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 4 then
  V := V + gib_modulspezverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * 1.5;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 3 then
  V := V + gib_entwurfsverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * 1.5;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT /= 2 then
  V := V + gib_spezverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * 2.5;
end if;
end if;
end if;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.VERLUSTQUOTE := V;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"Verlustquote_beim_Codieren_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ANFORDERUNGEN_BEIM_CODIEREN_VERLIEREN

rule ANFORDERUNGEN_BEIM_CODIEREN_VERLIEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_CODIERT : BASE2_PRODUZIERT_Entity;
  CODIERT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_CODIERT,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_CODIERT_Entity : BASE2_2_ENTWICKLER_CODIERT_Entity;
  THE_BASE2_2_ENTWICKLER_CODIERT_Relation : BASE2_2_ENTWICKLER_CODIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_CODIERT,DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_CODIERT_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"Verlustquote_beim_Codieren_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  NOCH_ZU_VERLIERENDE_AFP : REAL := 0.0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL : REAL := 0.0;
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "ANFORDERUNGEN_BEIM_CODIEREN_VERLIEREN";
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL := 0.0;
  ID_DUMMY := 0;
  NOCH_ZU_VERLIERENDE_AFP := (THE_ATTRIBUTE_ROLE_OF_CODIERT.VERLUSTQUOTE / 100.0 ) * gib_afp(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET);
  while NOCH_ZU_VERLIERENDE_AFP > 0.0 loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET);
  if A.Rec_Elem_2 <= NOCH_ZU_VERLIERENDE_AFP then
  NOCH_ZU_VERLIERENDE_AFP := NOCH_ZU_VERLIERENDE_AFP - A.Rec_Elem_2;
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 4 then
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
else
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 3 then
  ID_DUMMY := f_getselected_Bag_I_Type(DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
else
  if THE_ATTRIBUTE_ROLE_OF_CODIERT.VORGABEDOKUMENT = 2 then
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
else
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS,A.Rec_Elem_1);
end if;
end if;
end if;
else
  ANTEIL := 1.0 - (NOCH_ZU_VERLIERENDE_AFP / A.Rec_Elem_2 );
  A.Rec_Elem_2 := A.Rec_Elem_2 - NOCH_ZU_VERLIERENDE_AFP;
  A.Rec_Elem_4 := ANTEIL * A.Rec_Elem_4;
  A.Rec_Elem_5 := ANTEIL * A.Rec_Elem_5;
  A.Rec_Elem_6 := ANTEIL * A.Rec_Elem_6;
  THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_CODIERT.ARBEITSPAKET,A);
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
end if;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: CODEREVIEW_MIT_2_GUTACHTERN_BEGINNT

rule CODEREVIEW_MIT_2_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DER_CODE));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DER_CODE));
begin 
send_debug_message "CODEREVIEW_MIT_2_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_FINDET_STATT_69 : BASE2_REVIEW_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_FINDET_STATT
  with
    PRUEFLING := DER_CODE;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_FINDET_STATT_69;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: CODEREVIEW_MIT_3_GUTACHTERN_BEGINNT

rule CODEREVIEW_MIT_3_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_3_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DER_CODE));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DER_CODE));
  not exists(BEGUTACHTET(*,GUTACHTER_3,DER_CODE));
begin 
send_debug_message "CODEREVIEW_MIT_3_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_70 : BASE2_REVIEW_3_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_3_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_3_FINDET_STATT
  with
    PRUEFLING := DER_CODE;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    GUTACHTER3 := GUTACHTER_3;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_70;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_CODE_REVIEWEN

rule Deactivating_1_CODE_REVIEWEN[240] taking 0  is
structure 
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  DER_CODE : CODE;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  Deakt_Relation : Deactivating_1_CODE_REVIEWEN_Relation(THE_BASE2_2_CODE_REVIEWEN_Entity,THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
constraints 
  THE_BASE2_2_CODE_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_CODE_REVIEWEN";
  delete(REVIEW);
delete(The_Attribute_Role_Of_REVIEW);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_CODE_REVIEWEN

rule Deactivating_2_CODE_REVIEWEN[239] taking 0  is
structure 
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
constraints 
  THE_BASE2_2_CODE_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_CODE_REVIEWEN";
  delete(THE_BASE2_2_CODE_REVIEWEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_CODE_REVIEWEN

rule Activating_CODE_REVIEWEN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,*,*,*));
begin 
send_debug_message "Activating_CODE_REVIEWEN";
  create entity The_Attribute_Role_Of_R1 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_1;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_R1;
  end create;
  create entity The_Attribute_Role_Of_R2 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_2;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_R2;
  end create;
  create entity THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity aka new_unique_id(BASE2_2_CODE_REVIEWEN_Entity)
 with
    LCD := current_date;
    T := 0;
    PRF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    X := 0.0;
    FEHLER_DIFF := 0.0;
    ENTDECKTE_FEHLER := 0.0;
    GESAMT_FEHLER := 0.0;
    GESAMT_AFP := 0.0;
    ANZ_ZEILEN := 0;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_2_CODE_REVIEWEN_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT := THE_ATTRIBUTE_ROLE_OF_NOTIERT;
    RL_DER_REVIEWBERICHT := DER_REVIEWBERICHT;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_THE_ATTRIBUTE_ROLE_OF_R1 := THE_ATTRIBUTE_ROLE_OF_R1;
    RL_THE_ATTRIBUTE_ROLE_OF_R2 := THE_ATTRIBUTE_ROLE_OF_R2;
    RL_THE_BASE2_2_CODE_REVIEWEN_Entity := THE_BASE2_2_CODE_REVIEWEN_Entity;
  end create;
  create relation Deactivating_1_CODE_REVIEWEN_Relation
  with
    RL_THE_BASE2_2_CODE_REVIEWEN_Entity := THE_BASE2_2_CODE_REVIEWEN_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_DER_CODE := DER_CODE;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
  end create;
  THE_BASE2_2_CODE_REVIEWEN_Entity.T := 0;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_1,DER_CODE);
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_2,DER_CODE);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_CODE_REVIEWEN

rule Active_CODE_REVIEWEN[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_CODE_REVIEWEN";
  THE_BASE2_2_CODE_REVIEWEN_Entity.LCD := current_date;
  THE_BASE2_2_CODE_REVIEWEN_Entity.T := THE_BASE2_2_CODE_REVIEWEN_Entity.T + DEL_TA.T;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.T >= 1440 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.ANZ_ZEILEN := trunc(gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) * THE_ATTRIBUTE_ROLE_OF_NOTIERT.X_PRO_AFP + 0.9);
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER := 0.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_AFP := 0.0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 ) loop
  THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET);
  THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  if THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B := gib_befund_zu_id(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_CODE_REVIEWEN_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_CODE_REVIEWEN_Entity.B);
  if THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_AFP := THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_AFP + (THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 ) * THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_8 / 100.0;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_7 := THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_2;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.X := THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_7 - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_7 / THE_BASE2_2_CODE_REVIEWEN_Entity.X;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_7 * THE_BASE2_2_CODE_REVIEWEN_Entity.X - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_7 + THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_7 * (1.0 - THE_BASE2_2_CODE_REVIEWEN_Entity.X ) * 0.7;
end if;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_4 / 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_5 := (THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_7 ) * 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_5 := 0.0;
end if;
  if (THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 ) or (THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 = 0.0 ) then
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_4 := 0.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_3 := 0.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_9 := 0.0;
else
  if THE_BASE2_2_CODE_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_6 - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_6 / THE_BASE2_2_CODE_REVIEWEN_Entity.X;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_6 * THE_BASE2_2_CODE_REVIEWEN_Entity.X - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_6;
end if;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_3 / 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_4 := (THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_6 ) * 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_4 := 0.0;
end if;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_5 / THE_BASE2_2_CODE_REVIEWEN_Entity.X;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 * THE_BASE2_2_CODE_REVIEWEN_Entity.X - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_5;
end if;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_2 / 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_3 := (THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_5 ) * 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_3 := 0.0;
end if;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_CODE_REVIEWEN_Entity.X;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 * THE_BASE2_2_CODE_REVIEWEN_Entity.X - THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_4;
end if;
  if THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_2 := (THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_CODE_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 ) * 100.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_CODE_REVIEWEN_Entity.ENTDECKTE_FEHLER;
else
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_9 := 15.0;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_CODE_REVIEWEN_Entity.REF_ANF.Rec_Elem_6 * 15.0 / 100.0;
end if;
  DER_REVIEWBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_CODE_REVIEWEN_Entity.B);
  DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_CODE_REVIEWEN_Entity.B.Rec_Elem_1);
end loop;
  THE_BASE2_2_CODE_REVIEWEN_Entity.GERUNDET := float(round(THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_AFP * 10.0)) / 10.0;
  send_player_message CODEREVIEWSITZUNG_FINDET_STATT(DER_CODE,THE_BASE2_2_CODE_REVIEWEN_Entity.ANZ_ZEILEN,trunc(THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER + 0.9),THE_BASE2_2_CODE_REVIEWEN_Entity.GERUNDET);
  replace_nth(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER, DER_REVIEWBERICHT.NUMMER);
  replace_nth(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_AFP, DER_REVIEWBERICHT.NUMMER);
  DER_REVIEWBERICHT.FEHLER := DER_REVIEWBERICHT.FEHLER + THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_FEHLER;
  DER_REVIEWBERICHT.VERLUSTE := DER_REVIEWBERICHT.VERLUSTE + THE_BASE2_2_CODE_REVIEWEN_Entity.GESAMT_AFP;
  THE_BASE2_2_CODE_REVIEWEN_Entity.T := THE_BASE2_2_CODE_REVIEWEN_Entity.T - 1440;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.CREVIEW_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.CREVIEW_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.CREVIEW_ENDE < current_date ) then
  DER_REVIEWLOG.CREVIEW_ENDE := current_date;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: DRITTER_GUTACHTER_BEGINNT_CODE_ZU_BEGUTACHTEN

rule DRITTER_GUTACHTER_BEGINNT_CODE_ZU_BEGUTACHTEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BEGUTACHTET(*,GUTACHTER_3,DER_CODE));
  exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
begin 
send_debug_message "DRITTER_GUTACHTER_BEGINNT_CODE_ZU_BEGUTACHTEN";
  create entity The_Attribute_Role_Of_BEGUTACHTET_71 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_3;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_BEGUTACHTET_71;
  end create;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_3,DER_CODE);
end rule;
-----------------------------------------------------------------------------
-- Regel: CODEREVIEWAP_SCHNUEREN

rule CODEREVIEWAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  DER_MTBERICHT : MODULTESTBERICHT;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not ( Get_Index(K.REGELMENGE,"CodeReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  exists(REVIEW_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2));
declare 
  VORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  UNVORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  ZUERST_IDS : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  GUTACHTER_3_ID : INTEGER := 0;
  DUMMY : STRING := " ";
begin 
send_debug_message "CODEREVIEWAP_SCHNUEREN";
  VORBEREITET_IDS := Bag_I_Type'();
  UNVORBEREITET_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  ZUERST_IDS := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  GUTACHTER_3_ID := 0;
  DUMMY := " ";
  VORBEREITET_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_REVIEWBERICHT.INHALT);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_MODULSPEZ.UNBEARBEITETE_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS);
  if exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  GUTACHTER_3_ID := GUTACHTER_3.AUTOR_ID;
else
  GUTACHTER_3_ID := GUTACHTER_2.AUTOR_ID;
end if;
  PRUEFBARE_IDS := gib_fremde_ids(VORBEREITET_IDS,DER_CODE.INHALT,GUTACHTER_1.AUTOR_ID,GUTACHTER_2.AUTOR_ID,GUTACHTER_3_ID);
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  ZUERST_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,f_union_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,DER_MTBERICHT.INHALT));
  ZUERST_IDS := f_intersection_Bag_I_Type(ZUERST_IDS,PRUEFBARE_IDS);
  while AFPS < 15.0 and not ( length(ZUERST_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(ZUERST_IDS);
  ID := f_getselected_Bag_I_Type(PRUEFBARE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
else
  ID := f_getselected_Bag_I_Type(VORBEREITET_IDS,ID);
end if;
end loop;
  while AFPS < 15.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
else
  ID := f_getselected_Bag_I_Type(VORBEREITET_IDS,ID);
end if;
end loop;
  UNVORBEREITET_IDS := gib_ungepruefte_ids(DER_CODE.INHALT,DER_REVIEWBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNVORBEREITET_IDS,VORBEREITET_IDS);
  while AFPS < 15.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := f_get_Bag_I_Type(PRUEFBARE_IDS);
  B := gib_anforderung_zu_id(DER_CODE.INHALT,A.Rec_Elem_1);
  A.Rec_Elem_2 := B.Rec_Elem_2;
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + B.Rec_Elem_2;
end loop;
  DER_REVIEWBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_REVIEWBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET := PAKET;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"CodeReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"CodeReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"CodeReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_CODEREVIEWS_FERTIG_SEIN

rule MIT_CODEREVIEWS_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DER_CODE,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodeReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_CODEREVIEWS_FERTIG_SEIN";
  delete(SOLL_REVIEWEN);
delete(The_Attribute_Role_Of_SOLL_REVIEWEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_CODEREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
  SEIN_LOG1 : ZEITERFASSUNGSBOGEN;
  SEIN_LOG2 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST1 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST1 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST1,GUTACHTER_1,SEIN_LOG1);
  THE_ATTRIBUTE_ROLE_OF_ERFASST2 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST2 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST2,GUTACHTER_2,SEIN_LOG2);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodeReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P1 : REAL := 0.0;
  P2 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_CODEREVIEW_BERECHNEN";
  P1 := 0.0;
  P2 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DER_CODE)));
  P1 := gib_creview_pruefleistung(GUTACHTER_1.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  P2 := gib_creview_pruefleistung(GUTACHTER_2.ERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) then
  P1 := P1 * 0.5;
end if;
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_2,*)) then
  P2 := P2 * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_R1.PRUEFLEISTUNG := P1;
  THE_ATTRIBUTE_ROLE_OF_R2.PRUEFLEISTUNG := P2;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL := (AFP_PRO_MINUTE / P1 ) * 100.0;
  THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL := (AFP_PRO_MINUTE / P2 ) * 100.0;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.CREVIEW_AUFWAND := DER_REVIEWLOG.CREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.CREVIEW_AUFWAND := DER_REVIEWLOG.CREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG1.CODEREVIEW.Rec_Elem_1 := SEIN_LOG1.CODEREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG2.CODEREVIEW.Rec_Elem_1 := SEIN_LOG2.CODEREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_CODEREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3 : BASE2_BEGUTACHTET_Entity;
  REVIEWT3 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT3,GUTACHTER_3,DER_CODE);
  SEIN_LOG3 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST3 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST3 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST3,GUTACHTER_3,SEIN_LOG3);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"CodeReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P3 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_CODEREVIEW_BERECHNEN";
  P3 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DER_CODE)));
  P3 := gib_creview_pruefleistung(GUTACHTER_3.ERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_3,*)) then
  P3 := P3 * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.PRUEFLEISTUNG := P3;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL := (AFP_PRO_MINUTE / P3 ) * 100.0;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.CREVIEW_AUFWAND := DER_REVIEWLOG.CREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG3.CODEREVIEW.Rec_Elem_1 := SEIN_LOG3.CODEREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: FEQ_BEI_CODEREVIEW_BERECHNEN

rule FEQ_BEI_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"CodeReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"CodeReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  EINARBEITENDE_GUTACHTER : INTEGER := 0;
  FEQ : REAL := 0.0;
  DUMMY : STRING := " ";
begin 
send_debug_message "FEQ_BEI_CODEREVIEW_BERECHNEN";
  EINARBEITENDE_GUTACHTER := 0;
  FEQ := 0.0;
  DUMMY := " ";
  EINARBEITENDE_GUTACHTER := count(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) + count(ARBEITET_SICH_EIN(*,GUTACHTER_2,*));
  if exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  EINARBEITENDE_GUTACHTER := EINARBEITENDE_GUTACHTER + count(ARBEITET_SICH_EIN(*,GUTACHTER_3,*));
  FEQ := gib_creview_3_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  FEQ := gib_creview_2_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  FEQ := FEQ * DIE_PRFEFF.CODEREVIEWEFFEKTIVITAET * power(0.7,float(EINARBEITENDE_GUTACHTER));
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 := FEQ;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_2 := FEQ;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_3 := FEQ;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_4 := FEQ;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"CodeReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: VEQ_BEI_CODEREVIEW_BERECHNEN

rule VEQ_BEI_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DER_CODE,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_REVIEWBERICHT : CODEREVIEWBERICHT;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DER_CODE);
  THE_BASE2_2_CODE_REVIEWEN_Entity : BASE2_2_CODE_REVIEWEN_Entity;
  THE_BASE2_2_CODE_REVIEWEN_Relation : BASE2_2_CODE_REVIEWEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_CODE_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"CodeReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"CodeReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  DUMMY : STRING := " ";
begin 
send_debug_message "VEQ_BEI_CODEREVIEW_BERECHNEN";
  DUMMY := " ";
  if exists(REVIEW_3_FINDET_STATT(*,DER_CODE,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_creview_3_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_creview_2_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"CodeReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_CODE_NACH_REVIEW_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_CODE_NACH_REVIEW_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_CODE_NACH_REVIEW_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_72 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_72;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW

rule Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : CODEREVIEWBERICHT;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW";
  delete(KORRIGIERT_C);
delete(The_Attribute_Role_Of_KORRIGIERT_C);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW

rule Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW";
  send_player_message AUFGEHOERT_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW

rule Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW

rule Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW

rule Active_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ,3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_4 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_4 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1 / 100.0 ) );
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_5 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_3 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_5 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_3 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2 / 100.0 ) );
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_6 * (((THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_6 * (1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3 / 100.0 ) );
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_7 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_5 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_4 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_7 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_5 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_4 / 100.0 ) );
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF.Rec_Elem_2;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A);
end if;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_4 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_IF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_5 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A_REF.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_9 / 100.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_2 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_FF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.ENTDECKTE_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.A.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.DT / 60.0;
  DER_REVIEWLOG.CREVIEW_K_AUFWAND := DER_REVIEWLOG.CREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.CREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.CREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.CREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.CREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: CODEREVIEWKORREKTURAP_SCHNUEREN

rule CODEREVIEWKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "CODEREVIEWKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"CodereviewKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_NACH_CODEREVIEW_FERTIG_SEIN

rule MIT_KORREKTUR_NACH_CODEREVIEW_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodereviewKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_NACH_CODEREVIEW_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DER_CODE,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DER_CODE,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DER_CODE,*,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.CODEREVIEWEFFEKTIVITAET := DIE_PRFEFF.CODEREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_NACH_CODEREVIEW_ABBRECHEN

rule KORREKTUR_NACH_CODEREVIEW_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_NACH_CODEREVIEW_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN

rule KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodereviewKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_codekorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodereviewKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN

rule PRODUKTIVITAET_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodereviewKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN";
  P := 0.0;
  P := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodereviewKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN

rule FEHLERRATE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_REVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"CodereviewKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_KORREKTUR_NACH_CODEREVIEW_BERECHNEN";
  F := 0.0;
  F := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_CODEREVIEW_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_CODEREVIEW_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_CODEREVIEW_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_73 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_73;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_BERICHT : CODEREVIEWBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  DER_ZUSTAND : PROJEKTZUSTAND;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity,DER_ZUSTAND);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW";
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.T / 60.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW

rule Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW[237] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    MAX_AF := 0.0;
    MAX_GF := 0.0;
    MAX_FF := 0.0;
    MAX_RF := 0.0;
    MAX_IF := 0.0;
    MAX_VERLUST := 0.0;
    ENTDECKTE_RF := 0.0;
    AF_FAKTOR := 0.0;
    GF_FAKTOR := 0.0;
    FF_FAKTOR := 0.0;
    IF_FAKTOR := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
    RL_DER_ZUSTAND := DER_ZUSTAND;
  end create;
  create relation Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_2 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.GF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_3 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.FF_FAKTOR := 1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.IF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_5 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_4 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_9 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_6 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_9 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3 / 100.0 ) );
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ,3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.GF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.FF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.IF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_2 and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_8 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC);
end if;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC);
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_M / 60.0;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_C / 60.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_4 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_IF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_5 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ENTDECKTE_RF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_RF);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_2 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_FF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.MAX_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_3;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_M + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_C;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_C * 1.2;
end if;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.ZEIT_C / 60.0;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.DT / 60.0;
  DER_REVIEWLOG.CREVIEW_K_AUFWAND := DER_REVIEWLOG.CREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.CREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.CREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.CREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.CREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_CODEREVIEW

rule ALLESKORREKTURAP_SCHNUEREN_NACH_CODEREVIEW[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_CODEREVIEW";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Codereview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_CODEREVIEW_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_CODEREVIEW_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Codereview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_CODEREVIEW_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DER_CODE,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DER_CODE,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DER_CODE,*,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.CODEREVIEWEFFEKTIVITAET := DIE_PRFEFF.CODEREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_CODEREVIEW_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_CODEREVIEW_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_CODEREVIEW_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_NACH_CODEREVIEW_BERECHNEN

rule ALLESKORREKTURLEISTUNG_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Codereview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_NACH_CODEREVIEW_BERECHNEN";
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := gib_codekorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PC := gib_multiplizierte_quoten(PC,0.3);
  PM := gib_multiplizierte_quoten(PM,0.5);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_NACH_CODEREVIEW_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Codereview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_NACH_CODEREVIEW_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_NACH_CODEREVIEW_BERECHNEN

rule ALLESPRODUKTIVITAET_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Codereview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PC : REAL := 0.0;
  PM : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_NACH_CODEREVIEW_BERECHNEN";
  PC := 0.0;
  PM := 0.0;
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PC := PC * 0.7;
  PM := PM * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_NACH_CODEREVIEW_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Codereview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_NACH_CODEREVIEW_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_NACH_CODEREVIEW_BERECHNEN

rule ALLESFEHLERRATE_NACH_CODEREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : CODEREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_CODEREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Codereview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FC : REAL := 0.0;
  FM : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_NACH_CODEREVIEW_BERECHNEN";
  FC := 0.0;
  FM := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FC := FC * 1.2;
  FM := FM * 1.3;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_HANDBUCH_ZU_SCHREIBEN

rule ENTWICKLER_BEGINNT_HANDBUCH_ZU_SCHREIBEN[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_SCHREIBEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_SCHREIBEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_SCHREIBEN,EIN_ENTWICKLER,DAS_HANDBUCH);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  not (exists(PRODUZIERT(*,*,DIE_NOTIZEN)) or exists(PRODUZIERT(*,*,DIE_SPEZIFIKATION)) ) or float(length(DIE_SPEZIFIKATION.INHALT)) >= 0.5 * float(length(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
begin 
send_debug_message "ENTWICKLER_BEGINNT_HANDBUCH_ZU_SCHREIBEN";
  create entity The_Attribute_Role_Of_PRODUZIERT_74 : BASE2_PRODUZIERT_Entity aka new_unique_id(BASE2_PRODUZIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRODUKTIVITAET := 0.0;
    VERLUSTQUOTE := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VORGABEDOKUMENT := 2;
  end create;
  create relation PRODUZIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DAS_HANDBUCH;
    Attribute_Role := The_Attribute_Role_Of_PRODUZIERT_74;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_SCHREIBT_HANDBUCH

rule Deactivating_1_ENTWICKLER_SCHREIBT_HANDBUCH[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DAS_HANDBUCH : HANDBUCH;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  Deakt_Relation : Deactivating_1_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
constraints 
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_SCHREIBT_HANDBUCH";
  delete(SCHREIBT);
delete(The_Attribute_Role_Of_SCHREIBT);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_SCHREIBT_HANDBUCH

rule Deactivating_2_ENTWICKLER_SCHREIBT_HANDBUCH[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_SCHREIBT_HANDBUCH";
  send_player_message AUFGEHOERT_HANDBUCH_ZU_SCHREIBEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_SCHREIBT_HANDBUCH

rule Deactivating_3_ENTWICKLER_SCHREIBT_HANDBUCH[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_SCHREIBT_HANDBUCH";
  delete(THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_SCHREIBT_HANDBUCH

rule Activating_ENTWICKLER_SCHREIBT_HANDBUCH[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_SCHREIBT_HANDBUCH";
  create entity THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity aka new_unique_id(BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity)
 with
    LCD := current_date;
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ID_DUMMY := 0;
  end create;
  create relation BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation
  with
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity := THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_SCHREIBT := THE_ATTRIBUTE_ROLE_OF_SCHREIBT;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_SCHREIBT_HANDBUCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_SCHREIBT := THE_ATTRIBUTE_ROLE_OF_SCHREIBT;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
  end create;
  create relation Deactivating_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_HANDBUCH_ZU_SCHREIBEN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_SCHREIBT_HANDBUCH

rule Active_ENTWICKLER_SCHREIBT_HANDBUCH[790] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_SCHREIBT_HANDBUCH";
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.T := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.T + THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.T > THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_SCHREIBT.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_8 := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_8 + THE_ATTRIBUTE_ROLE_OF_SCHREIBT.FEHLERRATE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.AH.Rec_Elem_3 = 0 then
  DAS_HANDBUCH.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A);
  DAS_HANDBUCH.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DAS_HANDBUCH.UNBEARBEITETE_IDS,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_1);
  if THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT = 2 then
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_1);
end if;
  if THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT = 1 then
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_1);
end if;
end if;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.B := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.B);
end if;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.T := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.T - THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.B := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A;
else
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.A.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_SCHREIBT.PRODUKTIVITAET;
end loop;
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.DT / 60.0;
  DAS_LOGBUCH.HANDBUCH_AUFWAND := DAS_LOGBUCH.HANDBUCH_AUFWAND + THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.HANDBUCH.Rec_Elem_1 := SEIN_LOG.HANDBUCH.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.HANDBUCH_BEGINN = 1901/01/01/00:00 ) then
  DAS_LOGBUCH.HANDBUCH_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.HANDBUCH_ENDE < current_date ) then
  DAS_LOGBUCH.HANDBUCH_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: HANDBUCHARBEITSPAKET_SCHNUEREN

rule HANDBUCHARBEITSPAKET_SCHNUEREN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_SCHREIBEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_SCHREIBEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_SCHREIBEN,EIN_ENTWICKLER,DAS_HANDBUCH);
  DER_BERICHT : SPEZIFIKATIONSREVIEWBERICHT;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
declare 
  KORRIGIERTE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AH : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "HANDBUCHARBEITSPAKET_SCHNUEREN";
  KORRIGIERTE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  if not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS) = 0 ) then
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT := 2;
  KORRIGIERTE_IDS := gib_korrigierte_ids(DER_BERICHT.INHALT,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  KORRIGIERTE_IDS := f_intersection_Bag_I_Type(KORRIGIERTE_IDS,DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS);
  while AFPS < 50.0 and not ( length(KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(KORRIGIERTE_IDS);
  ID := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS,ID);
  AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,A.Rec_Elem_1);
  if AH.Rec_Elem_3 = 0 then
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
  while AFPS < 50.0 and not ( length(DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS);
  AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,A.Rec_Elem_1);
  if AH.Rec_Elem_3 = 0 then
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET,A);
  DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
else
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT := 1;
  while AFPS < 50.0 and not ( length(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS);
  AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,A.Rec_Elem_1);
  if AH.Rec_Elem_3 = 0 then
  A := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET,A);
  DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
end if;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"HandbuchArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_HANDBUCH_FERTIG_SEIN

rule MIT_HANDBUCH_FERTIG_SEIN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_SCHREIBEN : BASE2_SOLL_PRODUZIEREN_Entity;
  SOLL_SCHREIBEN : SOLL_PRODUZIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_SCHREIBEN,EIN_ENTWICKLER,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_HANDBUCH_FERTIG_SEIN";
  delete(SOLL_SCHREIBEN);
delete(The_Attribute_Role_Of_SOLL_SCHREIBEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: HANDBUCHERSTELLUNG_ABBRECHEN

rule HANDBUCHERSTELLUNG_ABBRECHEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  not exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "HANDBUCHERSTELLUNG_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ID_DUMMY := 0;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET);
  if THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT = 2 then
  DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS := f_put_Bag_I_Type(DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS,A.Rec_Elem_1);
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1);
else
  if not ( Get_Index(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS,A.Rec_Elem_1) > 0 ) then
  DIE_NOTIZEN.UNBEARBEITETE_HB_IDS := f_put_Bag_I_Type(DIE_NOTIZEN.UNBEARBEITETE_HB_IDS,A.Rec_Elem_1);
  if ( Get_Index(DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1) > 0 ) then
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1);
end if;
end if;
end if;
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_HANDBUCH_BERECHNEN

rule PRODUKTIVITAET_FUER_HANDBUCH_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_HANDBUCH_BERECHNEN";
  P := 0.0;
  P := gib_handbuchproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT = 1 then
  P := 1.0 / (1.0 / P + 1.0 / (gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 2.0 ) );
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_HANDBUCH_BERECHNEN

rule FEHLERRATE_FUER_HANDBUCH_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F_H : REAL := 0.0;
  F_A : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_HANDBUCH_BERECHNEN";
  F_H := 0.0;
  F_A := 0.0;
  F_H := gib_handbuchfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT = 2 then
  F_A := 0.0;
else
  F_A := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.8;
end if;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F_H := F_H * 1.3;
  F_A := F_A * 1.1;
end if;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.FEHLERRATE.Rec_Elem_5 := F_H;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.FEHLERRATE.Rec_Elem_1 := F_A;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTQUOTE_FUER_HANDBUCH_BERECHNEN

rule VERLUSTQUOTE_FUER_HANDBUCH_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  V : REAL := 0.0;
begin 
send_debug_message "VERLUSTQUOTE_FUER_HANDBUCH_BERECHNEN";
  V := 0.0;
  V := gib_handbuchverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,2);
  if THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT = 1 then
  V := V + gib_spezverlustquote(EIN_ENTWICKLER.ERFAHRUNG) * 2.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VERLUSTQUOTE := V;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"Verlustquote_fuer_Handbuch_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ANFORDERUNGEN_FUER_HANDBUCH_VERLIEREN

rule ANFORDERUNGEN_FUER_HANDBUCH_VERLIEREN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT : BASE2_PRODUZIERT_Entity;
  SCHREIBT : PRODUZIERT(THE_ATTRIBUTE_ROLE_OF_SCHREIBT,EIN_ENTWICKLER,DAS_HANDBUCH);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_SCHREIBT,DIE_NOTIZEN,DIE_SPEZIFIKATION,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_SCHREIBT_HANDBUCH_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_PRODUZIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH)) or not ( length(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"Verlustquote_fuer_Handbuch_berechnen" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  NOCH_ZU_VERLIERENDE_AFP : REAL := 0.0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL : REAL := 0.0;
  ID_DUMMY : INTEGER := 0;
begin 
send_debug_message "ANFORDERUNGEN_FUER_HANDBUCH_VERLIEREN";
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  ANTEIL := 0.0;
  ID_DUMMY := 0;
  NOCH_ZU_VERLIERENDE_AFP := (THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VERLUSTQUOTE / 100.0 ) * gib_afp(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET);
  while NOCH_ZU_VERLIERENDE_AFP > 0.0 loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET);
  if A.Rec_Elem_2 <= NOCH_ZU_VERLIERENDE_AFP then
  NOCH_ZU_VERLIERENDE_AFP := NOCH_ZU_VERLIERENDE_AFP - A.Rec_Elem_2;
  if THE_ATTRIBUTE_ROLE_OF_SCHREIBT.VORGABEDOKUMENT = 2 then
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1);
else
  ID_DUMMY := f_getselected_Bag_I_Type(DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS,A.Rec_Elem_1);
end if;
else
  ANTEIL := 1.0 - (NOCH_ZU_VERLIERENDE_AFP / A.Rec_Elem_2 );
  A.Rec_Elem_2 := A.Rec_Elem_2 - NOCH_ZU_VERLIERENDE_AFP;
  A.Rec_Elem_4 := ANTEIL * A.Rec_Elem_4;
  THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_SCHREIBT.ARBEITSPAKET,A);
  NOCH_ZU_VERLIERENDE_AFP := 0.0;
end if;
end loop;
end rule;
-----------------------------------------------------------------------------
-- Regel: HANDBUCHREVIEW_MIT_2_GUTACHTERN_BEGINNT

rule HANDBUCHREVIEW_MIT_2_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DAS_HANDBUCH));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DAS_HANDBUCH));
begin 
send_debug_message "HANDBUCHREVIEW_MIT_2_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_FINDET_STATT_75 : BASE2_REVIEW_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_FINDET_STATT
  with
    PRUEFLING := DAS_HANDBUCH;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_FINDET_STATT_75;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: HANDBUCHREVIEW_MIT_3_GUTACHTERN_BEGINNT

rule HANDBUCHREVIEW_MIT_3_GUTACHTERN_BEGINNT[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DAS_HANDBUCH));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DAS_HANDBUCH));
  not exists(BEGUTACHTET(*,GUTACHTER_3,DAS_HANDBUCH));
begin 
send_debug_message "HANDBUCHREVIEW_MIT_3_GUTACHTERN_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_76 : BASE2_REVIEW_3_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_3_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_3_FINDET_STATT
  with
    PRUEFLING := DAS_HANDBUCH;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    GUTACHTER3 := GUTACHTER_3;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_3_FINDET_STATT_76;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: HANDBUCHREVIEW_MIT_KUNDE_BEGINNT

rule HANDBUCHREVIEW_MIT_KUNDE_BEGINNT[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2));
  not exists(BEGUTACHTET(*,GUTACHTER_1,DAS_HANDBUCH));
  not exists(BEGUTACHTET(*,GUTACHTER_2,DAS_HANDBUCH));
begin 
send_debug_message "HANDBUCHREVIEW_MIT_KUNDE_BEGINNT";
  create entity The_Attribute_Role_Of_REVIEW_MIT_KUNDE_FINDET_STATT_77 : BASE2_REVIEW_MIT_KUNDE_FINDET_STATT_Entity aka new_unique_id(BASE2_REVIEW_MIT_KUNDE_FINDET_STATT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation REVIEW_MIT_KUNDE_FINDET_STATT
  with
    PRUEFLING := DAS_HANDBUCH;
    GUTACHTER1 := GUTACHTER_1;
    GUTACHTER2 := GUTACHTER_2;
    Attribute_Role := The_Attribute_Role_Of_REVIEW_MIT_KUNDE_FINDET_STATT_77;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_HANDBUCH_REVIEWEN

rule Deactivating_1_HANDBUCH_REVIEWEN[240] taking 0  is
structure 
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  DAS_HANDBUCH : HANDBUCH;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  Deakt_Relation : Deactivating_1_HANDBUCH_REVIEWEN_Relation(THE_BASE2_2_HANDBUCH_REVIEWEN_Entity,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2);
constraints 
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_HANDBUCH_REVIEWEN";
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) then
  send_player_message AUFGEHOERT_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_1,DAS_HANDBUCH);
  send_player_message AUFGEHOERT_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_2,DAS_HANDBUCH);
  delete(R1);
delete(The_Attribute_Role_Of_R1);
  delete(R2);
delete(The_Attribute_Role_Of_R2);
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_HANDBUCH_REVIEWEN

rule Deactivating_2_HANDBUCH_REVIEWEN[239] taking 0  is
structure 
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  DAS_HANDBUCH : HANDBUCH;
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  Deakt_Relation : Deactivating_2_HANDBUCH_REVIEWEN_Relation(THE_BASE2_2_HANDBUCH_REVIEWEN_Entity,THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
constraints 
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_HANDBUCH_REVIEWEN";
  delete(REVIEW);
delete(The_Attribute_Role_Of_REVIEW);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_HANDBUCH_REVIEWEN

rule Deactivating_3_HANDBUCH_REVIEWEN[238] taking 0  is
structure 
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
constraints 
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_HANDBUCH_REVIEWEN";
  delete(THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_HANDBUCH_REVIEWEN

rule Activating_HANDBUCH_REVIEWEN[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,*,*,*));
begin 
send_debug_message "Activating_HANDBUCH_REVIEWEN";
  create entity The_Attribute_Role_Of_R1 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_1;
    WAS := DAS_HANDBUCH;
    Attribute_Role := The_Attribute_Role_Of_R1;
  end create;
  create entity The_Attribute_Role_Of_R2 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_2;
    WAS := DAS_HANDBUCH;
    Attribute_Role := The_Attribute_Role_Of_R2;
  end create;
  create entity THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity aka new_unique_id(BASE2_2_HANDBUCH_REVIEWEN_Entity)
 with
    LCD := current_date;
    T := 0;
    PRF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    K_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    X := 0.0;
    FEHLER_DIFF := 0.0;
    ENTDECKTE_FEHLER := 0.0;
    GESAMT_FEHLER := 0.0;
    GESAMT_AFP := 0.0;
    ANZ_SEITEN := 0;
    GERUNDET := 0.0;
  end create;
  create relation BASE2_2_HANDBUCH_REVIEWEN_Relation
  with
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity := THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT := THE_ATTRIBUTE_ROLE_OF_NOTIERT;
    RL_DER_REVIEWBERICHT := DER_REVIEWBERICHT;
    RL_DER_KUNDENWUNSCH := DER_KUNDENWUNSCH;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_THE_ATTRIBUTE_ROLE_OF_R1 := THE_ATTRIBUTE_ROLE_OF_R1;
    RL_THE_ATTRIBUTE_ROLE_OF_R2 := THE_ATTRIBUTE_ROLE_OF_R2;
    RL_THE_BASE2_2_HANDBUCH_REVIEWEN_Entity := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity;
  end create;
  create relation Deactivating_1_HANDBUCH_REVIEWEN_Relation
  with
    RL_THE_BASE2_2_HANDBUCH_REVIEWEN_Entity := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
    RL_THE_ATTRIBUTE_ROLE_OF_R1 := THE_ATTRIBUTE_ROLE_OF_R1;
    RL_THE_ATTRIBUTE_ROLE_OF_R2 := THE_ATTRIBUTE_ROLE_OF_R2;
  end create;
  create relation Deactivating_2_HANDBUCH_REVIEWEN_Relation
  with
    RL_THE_BASE2_2_HANDBUCH_REVIEWEN_Entity := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_REVIEW := THE_ATTRIBUTE_ROLE_OF_REVIEW;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_GUTACHTER_1 := GUTACHTER_1;
    RL_GUTACHTER_2 := GUTACHTER_2;
  end create;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.T := 0;
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) then
  send_player_message BEGONNEN_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_1,DAS_HANDBUCH);
  send_player_message BEGONNEN_DOKUMENT_MIT_KUNDE_ZU_BEGUTACHTEN(GUTACHTER_2,DAS_HANDBUCH);
else
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_1,DAS_HANDBUCH);
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_2,DAS_HANDBUCH);
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_HANDBUCH_REVIEWEN

rule Active_HANDBUCH_REVIEWEN[790] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_HANDBUCH_REVIEWEN";
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.LCD := current_date;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.T := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.T + DEL_TA.T;
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.T >= 1440 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.ANZ_SEITEN := trunc(gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) * THE_ATTRIBUTE_ROLE_OF_NOTIERT.X_PRO_AFP + 0.9);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER := 0.0;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_AFP := 0.0;
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) then
  DER_ZUSTAND.AUFWAND_FUER_KUNDE := DER_ZUSTAND.AUFWAND_FUER_KUNDE + 180.0 / 60.0;
end if;
  while not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 ) loop
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET);
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.K_ANF := gib_anforderung_zu_id(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B := gib_befund_zu_id(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B);
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ * (THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 ) / (THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.K_ANF.Rec_Elem_2 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 );
else
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_7 := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.K_ANF.Rec_Elem_2;
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2;
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_8 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_8 / THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X;
else
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_8 * THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_8 + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_8 * (1.0 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X ) * 0.7;
end if;
else
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_5 / 100.0;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_6 := (THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_8 ) * 100.0;
else
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_6 := 0.0;
end if;
  if (THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_3 = 0 ) or (THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 = 0.0 ) then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_9 := 0.0;
else
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X >= 1.0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X;
else
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 * THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.X - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_4;
end if;
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.ENTDECKTE_FEHLER := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.FEHLER_DIFF * THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 / 100.0;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_2 := (THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.ENTDECKTE_FEHLER / THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 ) * 100.0;
else
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_9 := 15.0;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.REF_ANF.Rec_Elem_4 * 15.0 / 100.0;
end if;
  if exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) then
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.K_ANF.Rec_Elem_2 > THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_8 := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_8 + (1.0 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_8 / 100.0 ) * 15.0;
end if;
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_8 > 0.0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_6 := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_6 + (1.0 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_6 / 100.0 ) * 35.0;
end if;
  if THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 > 0.0 then
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_2 := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_2 + (1.0 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_2 / 100.0 ) * 35.0;
end if;
end if;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_8 * THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_6 / 100.0 + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_4 * THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_AFP := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_AFP + (THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.K_ANF.Rec_Elem_2 - THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.PRF_ANF.Rec_Elem_2 ) * THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_8 / 100.0;
  DER_REVIEWBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_REVIEWBERICHT.INHALT,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B);
  DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_REVIEWBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.B.Rec_Elem_1);
end loop;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GERUNDET := float(round(THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_AFP * 10.0)) / 10.0;
  send_player_message REVIEWSITZUNG_FINDET_STATT(DAS_HANDBUCH,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.ANZ_SEITEN,trunc(THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER + 0.9),THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GERUNDET);
  replace_nth(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_FEHLER_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER, DER_REVIEWBERICHT.NUMMER);
  replace_nth(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_REVIEWBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_REVIEWBERICHT.NUMMER) + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_AFP, DER_REVIEWBERICHT.NUMMER);
  DER_REVIEWBERICHT.FEHLER := DER_REVIEWBERICHT.FEHLER + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_FEHLER;
  DER_REVIEWBERICHT.VERLUSTE := DER_REVIEWBERICHT.VERLUSTE + THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.GESAMT_AFP;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.T := THE_BASE2_2_HANDBUCH_REVIEWEN_Entity.T - 1440;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.HREVIEW_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.HREVIEW_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.HREVIEW_ENDE < current_date ) then
  DER_REVIEWLOG.HREVIEW_ENDE := current_date;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: DRITTER_GUTACHTER_BEGINNT_HANDBUCH_ZU_BEGUTACHTEN

rule DRITTER_GUTACHTER_BEGINNT_HANDBUCH_ZU_BEGUTACHTEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not exists(BEGUTACHTET(*,GUTACHTER_3,DAS_HANDBUCH));
  exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
begin 
send_debug_message "DRITTER_GUTACHTER_BEGINNT_HANDBUCH_ZU_BEGUTACHTEN";
  create entity The_Attribute_Role_Of_BEGUTACHTET_78 : BASE2_BEGUTACHTET_Entity aka new_unique_id(BASE2_BEGUTACHTET_Entity)
 with
    ZEITANTEIL := 0.0;
    PRUEFLEISTUNG := 0.0;
  end create;
  create relation BEGUTACHTET
  with
    WER := GUTACHTER_3;
    WAS := DAS_HANDBUCH;
    Attribute_Role := The_Attribute_Role_Of_BEGUTACHTET_78;
  end create;
  send_player_message BEGONNEN_DOKUMENT_ZU_BEGUTACHTEN(GUTACHTER_3,DAS_HANDBUCH);
end rule;
-----------------------------------------------------------------------------
-- Regel: HANDBUCHREVIEWAP_SCHNUEREN

rule HANDBUCHREVIEWAP_SCHNUEREN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  DIE_NOTIZEN : ANALYSENOTIZEN;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  not ( Get_Index(K.REGELMENGE,"HandbuchReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  exists(REVIEW_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2));
declare 
  VORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  UNVORBEREITET_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  GUTACHTER_3_ID : INTEGER := 0;
  DUMMY : STRING := " ";
begin 
send_debug_message "HANDBUCHREVIEWAP_SCHNUEREN";
  VORBEREITET_IDS := Bag_I_Type'();
  UNVORBEREITET_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  GUTACHTER_3_ID := 0;
  DUMMY := " ";
  VORBEREITET_IDS := gib_ungepruefte_ids(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN,DER_REVIEWBERICHT.INHALT);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_SPEZIFIKATION.UNBEARBEITETE_HB_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_SPEZIFIKATION.IN_ARBEIT_FUER_HB_IDS);
  VORBEREITET_IDS := f_diff_Bag_I_Type(VORBEREITET_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_HB_IDS);
  if exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  GUTACHTER_3_ID := GUTACHTER_3.AUTOR_ID;
else
  GUTACHTER_3_ID := GUTACHTER_2.AUTOR_ID;
end if;
  PRUEFBARE_IDS := gib_fremde_ids(VORBEREITET_IDS,DAS_HANDBUCH.INHALT,GUTACHTER_1.AUTOR_ID,GUTACHTER_2.AUTOR_ID,GUTACHTER_3_ID);
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  while AFPS < 60.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
else
  ID := f_getselected_Bag_I_Type(VORBEREITET_IDS,ID);
end if;
end loop;
  UNVORBEREITET_IDS := gib_ungepruefte_ids(DAS_HANDBUCH.INHALT,DER_REVIEWBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNVORBEREITET_IDS,VORBEREITET_IDS);
  while AFPS < 60.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := f_get_Bag_I_Type(PRUEFBARE_IDS);
  B := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,A.Rec_Elem_1);
  A.Rec_Elem_2 := B.Rec_Elem_2;
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + B.Rec_Elem_2;
end loop;
  DER_REVIEWBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_REVIEWBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET := PAKET;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"HandbuchReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"HandbuchReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"HandbuchReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_HANDBUCHREVIEWS_FERTIG_SEIN

rule MIT_HANDBUCHREVIEWS_FERTIG_SEIN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN : BASE2_REVIEW_SOLL_STATTFINDEN_Entity;
  SOLL_REVIEWEN : REVIEW_SOLL_STATTFINDEN(THE_ATTRIBUTE_ROLE_OF_SOLL_REVIEWEN,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_HANDBUCHREVIEWS_FERTIG_SEIN";
  delete(SOLL_REVIEWEN);
delete(The_Attribute_Role_Of_SOLL_REVIEWEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_HANDBUCHREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
  SEIN_LOG1 : ZEITERFASSUNGSBOGEN;
  SEIN_LOG2 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST1 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST1 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST1,GUTACHTER_1,SEIN_LOG1);
  THE_ATTRIBUTE_ROLE_OF_ERFASST2 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST2 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST2,GUTACHTER_2,SEIN_LOG2);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P1 : REAL := 0.0;
  P2 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_BEI_HANDBUCHREVIEW_BERECHNEN";
  P1 := 0.0;
  P2 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DAS_HANDBUCH)));
  P1 := gib_hbreview_pruefleistung(GUTACHTER_1.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  P2 := gib_hbreview_pruefleistung(GUTACHTER_2.ERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) then
  P1 := P1 * 0.6;
end if;
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_2,*)) then
  P2 := P2 * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_R1.PRUEFLEISTUNG := P1;
  THE_ATTRIBUTE_ROLE_OF_R2.PRUEFLEISTUNG := P2;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL := (AFP_PRO_MINUTE / P1 ) * 100.0;
  THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL := (AFP_PRO_MINUTE / P2 ) * 100.0;
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.HREVIEW_AUFWAND := DER_REVIEWLOG.HREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.HREVIEW_AUFWAND := DER_REVIEWLOG.HREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG1.HANDBUCHREVIEW.Rec_Elem_1 := SEIN_LOG1.HANDBUCHREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R1.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG2.HANDBUCHREVIEW.Rec_Elem_1 := SEIN_LOG2.HANDBUCHREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_R2.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_HANDBUCHREVIEW_BERECHNEN

rule PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3 : BASE2_BEGUTACHTET_Entity;
  REVIEWT3 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_REVIEWT3,GUTACHTER_3,DAS_HANDBUCH);
  SEIN_LOG3 : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST3 : BASE2_ERFASST_ZEIT_Entity;
  ERFASST3 : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST3,GUTACHTER_3,SEIN_LOG3);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3));
  ( Get_Index(K.REGELMENGE,"HandbuchReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  P3 : REAL := 0.0;
  AFP_PRO_MINUTE : REAL := 0.0;
  ANZAHL_GUTACHTER : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_UND_ZEITANTEIL_3_BEI_HANDBUCHREVIEW_BERECHNEN";
  P3 := 0.0;
  AFP_PRO_MINUTE := 0.0;
  ANZAHL_GUTACHTER := 0.0;
  ANZAHL_GUTACHTER := float(count(BEGUTACHTET(*,*,DAS_HANDBUCH)));
  P3 := gib_hbreview_pruefleistung(GUTACHTER_3.ERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,ANZAHL_GUTACHTER);
  if exists(ARBEITET_SICH_EIN(*,GUTACHTER_3,*)) then
  P3 := P3 * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.PRUEFLEISTUNG := P3;
  AFP_PRO_MINUTE := gib_afp(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) / float(1440);
  THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL := (AFP_PRO_MINUTE / P3 ) * 100.0;
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  DER_REVIEWLOG.HREVIEW_AUFWAND := DER_REVIEWLOG.HREVIEW_AUFWAND + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
  SEIN_LOG3.HANDBUCHREVIEW.Rec_Elem_1 := SEIN_LOG3.HANDBUCHREVIEW.Rec_Elem_1 + ((float(delta_t) * THE_ATTRIBUTE_ROLE_OF_REVIEWT3.ZEITANTEIL / 18000.0 ) * 3.0 );
end rule;
-----------------------------------------------------------------------------
-- Regel: FEQ_BEI_HANDBUCHREVIEW_BERECHNEN

rule FEQ_BEI_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DER_KUNDE : KUNDE;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2));
  ( Get_Index(K.REGELMENGE,"HandbuchReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  EINARBEITENDE_GUTACHTER : INTEGER := 0;
  FEQ : REAL := 0.0;
  DUMMY : STRING := " ";
begin 
send_debug_message "FEQ_BEI_HANDBUCHREVIEW_BERECHNEN";
  EINARBEITENDE_GUTACHTER := 0;
  FEQ := 0.0;
  DUMMY := " ";
  EINARBEITENDE_GUTACHTER := count(ARBEITET_SICH_EIN(*,GUTACHTER_1,*)) + count(ARBEITET_SICH_EIN(*,GUTACHTER_2,*));
  if exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  EINARBEITENDE_GUTACHTER := EINARBEITENDE_GUTACHTER + count(ARBEITET_SICH_EIN(*,GUTACHTER_3,*));
  FEQ := gib_hbreview_3_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  FEQ := gib_hbreview_2_feq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_5 := FEQ * DIE_PRFEFF.HANDBUCHREVIEWEFFEKTIVITAET * power(0.9,float(EINARBEITENDE_GUTACHTER));
  THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_1 := THE_ATTRIBUTE_ROLE_OF_REVIEW.FEHLEREQ.Rec_Elem_5;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"HandbuchReview_FEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: VEQ_BEI_HANDBUCHREVIEW_BERECHNEN

rule VEQ_BEI_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  GUTACHTER_1 : ENTWICKLER;
  GUTACHTER_2 : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_REVIEW : BASE2_REVIEW_FINDET_STATT_Entity;
  REVIEW : REVIEW_FINDET_STATT(THE_ATTRIBUTE_ROLE_OF_REVIEW,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_REVIEWBERICHT : HANDBUCHREVIEWBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  THE_ATTRIBUTE_ROLE_OF_R1 : BASE2_BEGUTACHTET_Entity;
  R1 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R1,GUTACHTER_1,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_R2 : BASE2_BEGUTACHTET_Entity;
  R2 : BEGUTACHTET(THE_ATTRIBUTE_ROLE_OF_R2,GUTACHTER_2,DAS_HANDBUCH);
  THE_BASE2_2_HANDBUCH_REVIEWEN_Entity : BASE2_2_HANDBUCH_REVIEWEN_Entity;
  THE_BASE2_2_HANDBUCH_REVIEWEN_Relation : BASE2_2_HANDBUCH_REVIEWEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,GUTACHTER_1,GUTACHTER_2,THE_ATTRIBUTE_ROLE_OF_REVIEW,THE_ATTRIBUTE_ROLE_OF_NOTIERT,DER_REVIEWBERICHT,DER_KUNDENWUNSCH,DIE_SPEZIFIKATION,DER_REVIEWLOG,THE_ATTRIBUTE_ROLE_OF_R1,THE_ATTRIBUTE_ROLE_OF_R2,THE_BASE2_2_HANDBUCH_REVIEWEN_Entity);
  GUTACHTER_3 : ENTWICKLER;
  DER_KUNDE : KUNDE;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or not ( length(THE_ATTRIBUTE_ROLE_OF_REVIEW.ARBEITSPAKET) = 0 );
  exists(REVIEW_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2)) or exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) or exists(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2));
  ( Get_Index(K.REGELMENGE,"HandbuchReviewAP_geschnuert" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID)) > 0 );
declare 
  DUMMY : STRING := " ";
begin 
send_debug_message "VEQ_BEI_HANDBUCHREVIEW_BERECHNEN";
  DUMMY := " ";
  if exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,GUTACHTER_1,GUTACHTER_2,GUTACHTER_3)) then
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_hbreview_3_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_3.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,GUTACHTER_3.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
else
  THE_ATTRIBUTE_ROLE_OF_REVIEW.VERLUSTEQ := gib_hbreview_2_veq(GUTACHTER_1.ERFAHRUNG,GUTACHTER_2.ERFAHRUNG,GUTACHTER_1.NOTATIONSERFAHRUNG,GUTACHTER_2.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end if;
  DUMMY := f_getselected_Set_S_Type(K.REGELMENGE,"HandbuchReview_VEQ_berechnen" & integer_to_string(GUTACHTER_1.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_HANDBUCH_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_HANDBUCH_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_HANDBUCH_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_79 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DAS_HANDBUCH;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_79;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_HANDBUCH

rule Deactivating_1_ENTWICKLER_KORRIGIERT_HANDBUCH[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DAS_HANDBUCH : HANDBUCH;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_HANDBUCH";
  delete(KORRIGIERT_H);
delete(The_Attribute_Role_Of_KORRIGIERT_H);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_HANDBUCH

rule Deactivating_2_ENTWICKLER_KORRIGIERT_HANDBUCH[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_HANDBUCH";
  send_player_message AUFGEHOERT_HANDBUCH_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_HANDBUCH

rule Deactivating_3_ENTWICKLER_KORRIGIERT_HANDBUCH[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_HANDBUCH";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_HANDBUCH

rule Activating_ENTWICKLER_KORRIGIERT_HANDBUCH[990] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_HANDBUCH";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_HF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation
  with
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity := THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_HANDBUCH_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_HANDBUCH

rule Active_ENTWICKLER_KORRIGIERT_HANDBUCH[790] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_HANDBUCH";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A);
end if;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 * (((THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.FEHLERBQ.Rec_Elem_1 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 * (1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.FEHLERBQ.Rec_Elem_1 / 100.0 ) );
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_8 * ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_6 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.FEHLERBQ.Rec_Elem_5 / 100.0 ) ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_8 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_8 * (1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_6 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.FEHLERBQ.Rec_Elem_5 / 100.0 ) );
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_8 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_8 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.FEHLERRATE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A_REF.Rec_Elem_2 /= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A_REF.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_7;
end if;
end if;
  DAS_HANDBUCH.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.ENTDECKTE_HF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_8 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_6 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A_REF := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_9 / 100.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.ENTDECKTE_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.KORREKTURLEISTUNG.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.ENTDECKTE_HF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.KORREKTURLEISTUNG.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.PRODUKTIVITAET;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.A.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.DT / 60.0;
  DER_REVIEWLOG.HREVIEW_K_AUFWAND := DER_REVIEWLOG.HREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.HANDBUCH_K.Rec_Elem_1 := SEIN_LOG.HANDBUCH_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.HREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.HREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.HREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.HREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: HANDBUCHKORREKTURAP_SCHNUEREN

rule HANDBUCHKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "HANDBUCHKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DAS_HANDBUCH.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 80.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 80.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"HandbuchKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_DES_HANDBUCHS_FERTIG_SEIN

rule MIT_KORREKTUR_DES_HANDBUCHS_FERTIG_SEIN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_DES_HANDBUCHS_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*)) or exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DAS_HANDBUCH,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,*,*,*)) or exists_extended(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.HANDBUCHREVIEWEFFEKTIVITAET := DIE_PRFEFF.HANDBUCHREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_HANDBUCH_ABBRECHEN

rule KORREKTUR_VON_HANDBUCH_ABBRECHEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_HANDBUCH_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_HANDBUCHKORREKTUR_BERECHNEN

rule KORREKTURLEISTUNG_FUER_HANDBUCHKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_HANDBUCHKORREKTUR_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_handbuchkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_HANDBUCHKORREKTUR_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_HANDBUCHKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_HANDBUCHKORREKTUR_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.7);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_HANDBUCHKORREKTUR_BERECHNEN

rule PRODUKTIVITAET_FUER_HANDBUCHKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_HANDBUCHKORREKTUR_BERECHNEN";
  P := 0.0;
  P := gib_handbuchproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.5;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_HANDBUCHKORREKTUR_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_HANDBUCHKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_HANDBUCHKORREKTUR_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.VERLUSTBQ := gib_handbuchvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_HANDBUCHKORREKTUR_BERECHNEN

rule FEHLERRATE_FUER_HANDBUCHKORREKTUR_BERECHNEN[980] taking 0  is
structure 
  DAS_HANDBUCH : HANDBUCH;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DAS_HANDBUCH,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity : BASE2_1_HANDBUCH_BEARBEITEN_Entity;
  THE_BASE2_1_HANDBUCH_BEARBEITEN_Relation : BASE2_1_HANDBUCH_BEARBEITEN_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_H : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Relation(DAS_HANDBUCH,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_HANDBUCH_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H,DIE_SPEZIFIKATION,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_HANDBUCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DAS_HANDBUCH);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DAS_HANDBUCH)) or exists_extended(SOLL_BEARBEITEN(*,*,DAS_HANDBUCH)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DAS_HANDBUCH,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"HandbuchKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_HANDBUCHKORREKTUR_BERECHNEN";
  F := 0.0;
  F := gib_handbuchfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.3;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_H.FEHLERRATE.Rec_Elem_5 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_HANDBUCHREVIEW_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_HANDBUCHREVIEW_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_HANDBUCHREVIEW_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_80 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DIE_NOTIZEN;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_80;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  DER_ZUSTAND : PROJEKTZUSTAND;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity,DER_ZUSTAND);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW";
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.T / 60.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW

rule Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW[237] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_4_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AS := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    MAX_AF := 0.0;
    MAX_HF := 0.0;
    MAX_RF := 0.0;
    MAX_VERLUST := 0.0;
    ENTDECKTE_RF := 0.0;
    AF_FAKTOR := 0.0;
    HF_FAKTOR := 0.0;
    AF_NEU := 0.0;
    HINZUGEFUEGT_H_AFP := 0.0;
    HINZUGEFUEGTE_AF := 0.0;
    HINZUGEFUEGTE_HF := 0.0;
    ZEIT_H := 0.0;
    ZEIT_S := 0.0;
    ZEIT_E := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    HANDBUCHFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_REVIEWLOG := DER_REVIEWLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
    RL_DER_ZUSTAND := DER_ZUSTAND;
  end create;
  create relation Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AF_FAKTOR := 1.0 - ((THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 ) / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AF_NEU := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0 * (1.0 - THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_6 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_5 / 100.0 );
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_4 * (1.0 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_4 * (1.0 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  DIE_SPEZIFIKATION.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH := f_getselected_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HANDBUCHFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_8;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_8 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_8 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HF_FAKTOR;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HANDBUCHFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_8 ), DER_BERICHT.NUMMER);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_2 and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_8 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGTE_HF := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_8 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_8 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGTE_HF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_2 /= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_7;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGTE_AF;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGTE_AF := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGTE_HF := 0.0;
end if;
  DAS_HANDBUCH.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AF_FAKTOR := 1.0 - (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0 * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1 / 100.0 );
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF);
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF);
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC);
  DER_CODE.FEHLER := add_korr_max_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AF_NEU);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF);
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC);
end if;
  DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG := DER_ZUSTAND.AUFWAND_HANDBUCHERSTELLUNG + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_H / 60.0;
  DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE := DER_ZUSTAND.AUFWAND_SPEZIFIKATIONSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_S / 60.0;
  DER_ZUSTAND.AUFWAND_ENTWURFSPHASE := DER_ZUSTAND.AUFWAND_ENTWURFSPHASE + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_M ) / 60.0;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_C / 60.0;
  SEIN_LOG.SPEZ_K.Rec_Elem_1 := SEIN_LOG.SPEZ_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_S / 60.0;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_E / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_C / 60.0;
  SEIN_LOG.HANDBUCH_K.Rec_Elem_1 := SEIN_LOG.HANDBUCH_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_H / 60.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_HF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_8 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_6 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_HF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.HINZUGEFUEGT_H_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_HANDBUCH;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_E := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_1;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_M := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_1;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_C := 0.0;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AC.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ENTDECKTE_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_H + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_S + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_M + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_C;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID and THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.AH.Rec_Elem_3 /= 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_S * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_E * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_C * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.ZEIT_H * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS := DER_ZUSTAND.AUFWAND_KORREKTUR_REVIEWS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.DT / 60.0;
  DER_REVIEWLOG.HREVIEW_K_AUFWAND := DER_REVIEWLOG.HREVIEW_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.HREVIEW_K_BEGINN = 1901/01/01/00:00 ) then
  DER_REVIEWLOG.HREVIEW_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_REVIEWLOG.HREVIEW_K_ENDE < current_date ) then
  DER_REVIEWLOG.HREVIEW_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_HANDBUCHREVIEW

rule ALLESKORREKTURAP_SCHNUEREN_NACH_HANDBUCHREVIEW[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_HANDBUCHREVIEW";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DAS_HANDBUCH.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 80.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 80.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Handbuchreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_HANDBUCHREVIEW_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_HANDBUCHREVIEW_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Handbuchreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_HANDBUCHREVIEW_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not (exists(REVIEW_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*)) or exists(REVIEW_3_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*)) or exists(REVIEW_MIT_KUNDE_SOLL_STATTFINDEN(*,DAS_HANDBUCH,*,*)) ) and not (exists_extended(REVIEW_FINDET_STATT(*,DAS_HANDBUCH,*,*)) or exists(REVIEW_3_FINDET_STATT(*,DAS_HANDBUCH,*,*,*)) or exists_extended(REVIEW_MIT_KUNDE_FINDET_STATT(*,DAS_HANDBUCH,*,*)) ) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.HANDBUCHREVIEWEFFEKTIVITAET := DIE_PRFEFF.HANDBUCHREVIEWEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_HANDBUCHREVIEW_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_HANDBUCHREVIEW_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_HANDBUCHREVIEW_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_NACH_HANDBUCHREVIEW_BERECHNEN

rule ALLESKORREKTURLEISTUNG_NACH_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Handbuchreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PH : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PS : REAL := 0.0;
  PE : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_NACH_HANDBUCHREVIEW_BERECHNEN";
  PH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PS := 0.0;
  PE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PH := gib_handbuchkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG);
  PS := gib_spezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG);
  PE := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PC := gib_codekorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PH := gib_multiplizierte_quoten(PH,0.6);
  PS := PS * 0.6;
  PE := gib_multiplizierte_quoten(PE,0.5);
  PM := gib_multiplizierte_quoten(PM,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH := PH;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1 := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_NACH_HANDBUCHREVIEW_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_NACH_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Handbuchreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_NACH_HANDBUCHREVIEW_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.7);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_NACH_HANDBUCHREVIEW_BERECHNEN

rule ALLESPRODUKTIVITAET_NACH_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Handbuchreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PH : REAL := 0.0;
  PE : REAL := 0.0;
  PM : REAL := 0.0;
  PC : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_NACH_HANDBUCHREVIEW_BERECHNEN";
  PH := 0.0;
  PE := 0.0;
  PM := 0.0;
  PC := 0.0;
  PH := gib_handbuchproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG,1);
  PE := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,1);
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PH := PH * 0.5;
  PE := PE * 0.6;
  PM := PM * 0.6;
  PC := PC * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_HANDBUCH := PH;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_NACH_HANDBUCHREVIEW_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_NACH_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Handbuchreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_NACH_HANDBUCHREVIEW_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_handbuchvbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_NACH_HANDBUCHREVIEW_BERECHNEN

rule ALLESFEHLERRATE_NACH_HANDBUCHREVIEW_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : HANDBUCHREVIEWBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DER_REVIEWLOG : REVIEWLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_REVIEWLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_HANDBUCHREVIEW_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Handbuchreview" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FH : REAL := 0.0;
  FE : REAL := 0.0;
  FM : REAL := 0.0;
  FC : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_NACH_HANDBUCHREVIEW_BERECHNEN";
  FH := 0.0;
  FE := 0.0;
  FM := 0.0;
  FC := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FH := gib_handbuchfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG,3);
  FE := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,3);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FH := FH * 1.3;
  FE := FE * 1.3;
  FM := FM * 1.3;
  FC := FC * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_5 := FH;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 := FE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_ZU_INTEGRIEREN

rule ENTWICKLER_BEGINNT_ZU_INTEGRIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR : BASE2_SOLL_INTEGRIEREN_Entity;
  SOLL_INTEGR : SOLL_INTEGRIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  float(length(DER_CODE.INHALT)) >= 0.5 * float(length(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
begin 
send_debug_message "ENTWICKLER_BEGINNT_ZU_INTEGRIEREN";
  create entity The_Attribute_Role_Of_INTEGRIERT_81 : BASE2_INTEGRIERT_Entity aka new_unique_id(BASE2_INTEGRIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation INTEGRIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_INTEGRIERT_81;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NICHT_ZU_INTEGRIEREN

rule ENTWICKLER_BEGINNT_NICHT_ZU_INTEGRIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR : BASE2_SOLL_INTEGRIEREN_Entity;
  SOLL_INTEGR : SOLL_INTEGRIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
  float(length(DER_CODE.INHALT)) < 0.5 * float(length(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NICHT_ZU_INTEGRIEREN";
  delete(SOLL_INTEGR);
delete(The_Attribute_Role_Of_SOLL_INTEGR);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_INTEGRIERT

rule Deactivating_1_ENTWICKLER_INTEGRIERT[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  Deakt_Relation : Deactivating_1_ENTWICKLER_INTEGRIERT_Relation(THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity,THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
constraints 
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_INTEGRIERT";
  delete(INTEGR);
delete(The_Attribute_Role_Of_INTEGR);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_INTEGRIERT

rule Deactivating_2_ENTWICKLER_INTEGRIERT[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_INTEGRIERT_Relation(THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_INTEGRIERT";
  send_player_message AUFGEHOERT_ZU_INTEGRIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_INTEGRIERT

rule Deactivating_3_ENTWICKLER_INTEGRIERT[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_INTEGRIERT";
  delete(THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_INTEGRIERT

rule Activating_ENTWICKLER_INTEGRIERT[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_INTEGRIERT";
  create entity THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity aka new_unique_id(BASE2_2_ENTWICKLER_INTEGRIERT_Entity)
 with
    LCD := current_date;
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    ANOTIZEN := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    FAKTOR := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_INTEGRIERT_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_INTEGR := THE_ATTRIBUTE_ROLE_OF_INTEGR;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_INTEGRIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_INTEGR := THE_ATTRIBUTE_ROLE_OF_INTEGR;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
  end create;
  create relation Deactivating_2_ENTWICKLER_INTEGRIERT_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ZU_INTEGRIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_INTEGRIERT

rule Active_ENTWICKLER_INTEGRIERT[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_INTEGRIERT";
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_INTEGR.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.T := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.T + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.T > THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT and not (( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 ) and THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A = Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_5 * (1.0 - THE_ATTRIBUTE_ROLE_OF_INTEGR.FEHLEREQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_6 * (1.0 - THE_ATTRIBUTE_ROLE_OF_INTEGR.FEHLEREQ.Rec_Elem_3 / 100.0 );
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.ANOTIZEN.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_2 ) * (THE_ATTRIBUTE_ROLE_OF_INTEGR.VERLUSTEQ / 100.0 );
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.FAKTOR := (THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.HINZUGEFUEGTE_AFP ) / THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.FAKTOR * THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.FAKTOR * THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.FAKTOR * THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.FAKTOR * THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_7;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A);
  DER_CODE.INTEGRIERTE_IDS := f_put_Bag_I_Type(DER_CODE.INTEGRIERTE_IDS,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.B := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.B);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.T := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.T - THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.ANOTIZEN := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_1);
  THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.B := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_5 * THE_ATTRIBUTE_ROLE_OF_INTEGR.FEHLEREQ.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_6 * THE_ATTRIBUTE_ROLE_OF_INTEGR.FEHLEREQ.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.ANOTIZEN.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_2 ) * (THE_ATTRIBUTE_ROLE_OF_INTEGR.VERLUSTEQ / 100.0 );
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_INTEGR.KORREKTURLEISTUNG.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_INTEGR.KORREKTURLEISTUNG.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_INTEGR.PRODUKTIVITAET;
  if THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID then
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE := DER_ZUSTAND.AUFWAND_CODIERUNGSPHASE + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.DT / 60.0;
  DAS_LOGBUCH.INTEGRATION_AUFWAND := DAS_LOGBUCH.INTEGRATION_AUFWAND + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.CODE.Rec_Elem_1 := SEIN_LOG.CODE.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.INTEGRATION_BEGINN = 1901/01/01/00:00 ) then
  DAS_LOGBUCH.INTEGRATION_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DAS_LOGBUCH.INTEGRATION_ENDE < current_date ) then
  DAS_LOGBUCH.INTEGRATION_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_INTEGR.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: INTEGRATIONSARBEITSPAKET_SCHNUEREN

rule INTEGRATIONSARBEITSPAKET_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR : BASE2_SOLL_INTEGRIEREN_Entity;
  SOLL_INTEGR : SOLL_INTEGRIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
declare 
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "INTEGRATIONSARBEITSPAKET_SCHNUEREN";
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  while AFPS < 80.0 and not ( length(DER_CODE.UNBEARBEITETE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_CODE.UNBEARBEITETE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"IntegrationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_INTEGRIEREN_FERTIG_SEIN

rule MIT_INTEGRIEREN_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR : BASE2_SOLL_INTEGRIEREN_Entity;
  SOLL_INTEGR : SOLL_INTEGRIEREN(THE_ATTRIBUTE_ROLE_OF_SOLL_INTEGR,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_INTEGRIEREN_FERTIG_SEIN";
  delete(SOLL_INTEGR);
delete(The_Attribute_Role_Of_SOLL_INTEGR);
end rule;
-----------------------------------------------------------------------------
-- Regel: INTEGRIEREN_ABBRECHEN

rule INTEGRIEREN_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  not exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "INTEGRIEREN_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET);
  DER_CODE.UNBEARBEITETE_IDS := f_put_Bag_I_Type(DER_CODE.UNBEARBEITETE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_BEIM_INTEGRIEREN_BERECHNEN

rule KORREKTURLEISTUNG_BEIM_INTEGRIEREN_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_BEIM_INTEGRIEREN_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_integrationskorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_INTEGR.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_INTEGRATION_BERECHNEN

rule PRODUKTIVITAET_FUER_INTEGRATION_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_INTEGRATION_BERECHNEN";
  P := 0.0;
  P := gib_integrationsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_INTEGR.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERENTDECKUNGSQUOTE_FUER_INTEGRATION_BERECHNEN

rule FEHLERENTDECKUNGSQUOTE_FUER_INTEGRATION_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERENTDECKUNGSQUOTE_FUER_INTEGRATION_BERECHNEN";
  F := 0.0;
  F := gib_integrations_feq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  THE_ATTRIBUTE_ROLE_OF_INTEGR.FEHLEREQ.Rec_Elem_2 := F;
  THE_ATTRIBUTE_ROLE_OF_INTEGR.FEHLEREQ.Rec_Elem_3 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTENTDECKUNGSQUOTE_FUER_INTEGRATION_BERECHNEN

rule VERLUSTENTDECKUNGSQUOTE_FUER_INTEGRATION_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_INTEGR : BASE2_INTEGRIERT_Entity;
  INTEGR : INTEGRIERT(THE_ATTRIBUTE_ROLE_OF_INTEGR,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity : BASE2_2_ENTWICKLER_INTEGRIERT_Entity;
  THE_BASE2_2_ENTWICKLER_INTEGRIERT_Relation : BASE2_2_ENTWICKLER_INTEGRIERT_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_INTEGR,DIE_NOTIZEN,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_INTEGRIERT_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_INTEGRIEREN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_INTEGR.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationsArbeitspaket_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTENTDECKUNGSQUOTE_FUER_INTEGRATION_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_INTEGR.VERLUSTEQ := gib_integrations_veq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_MIT_MODULTEST

rule ENTWICKLER_BEGINNT_MIT_MODULTEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_MODULE_TESTEN_Entity;
  SOLL_TESTEN : SOLL_MODULE_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_MIT_MODULTEST";
  create entity The_Attribute_Role_Of_TESTET_MODULE_82 : BASE2_TESTET_MODULE_Entity aka new_unique_id(BASE2_TESTET_MODULE_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRUEFLEISTUNG := 0.0;
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation TESTET_MODULE
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_TESTET_MODULE_82;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_FUEHRT_MODULTEST_DURCH

rule Deactivating_1_ENTWICKLER_FUEHRT_MODULTEST_DURCH[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  Deakt_Relation : Deactivating_1_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity,THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_FUEHRT_MODULTEST_DURCH";
  delete(TESTET_M);
delete(The_Attribute_Role_Of_TESTET_M);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH

rule Deactivating_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH";
  send_player_message AUFGEHOERT_MIT_MODULTEST(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_FUEHRT_MODULTEST_DURCH

rule Deactivating_3_ENTWICKLER_FUEHRT_MODULTEST_DURCH[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_FUEHRT_MODULTEST_DURCH";
  delete(THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_FUEHRT_MODULTEST_DURCH

rule Activating_ENTWICKLER_FUEHRT_MODULTEST_DURCH[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_FUEHRT_MODULTEST_DURCH";
  create entity THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity aka new_unique_id(BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity)
 with
    LCD := current_date;
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    TEST_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    FEHLER_DIFF := 0.0;
    ENTDECKTE_F := 0.0;
    X := 0.0;
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_TESTET_M := THE_ATTRIBUTE_ROLE_OF_TESTET_M;
    RL_DER_TESTBERICHT := DER_TESTBERICHT;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_TESTET_M := THE_ATTRIBUTE_ROLE_OF_TESTET_M;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
  end create;
  create relation Deactivating_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.NOETIGE_ZEIT := 0.0;
  send_player_message BEGONNEN_MIT_MODULTEST(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_FUEHRT_MODULTEST_DURCH

rule Active_ENTWICKLER_FUEHRT_MODULTEST_DURCH[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_FUEHRT_MODULTEST_DURCH";
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_TESTET_M.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.T := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.T + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.T > THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF);
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B := gib_befund_zu_id(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_TESTET_M.VERLUSTEQ;
  DER_TESTBERICHT.VERLUSTE := DER_TESTBERICHT.VERLUSTE + (THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 ) * THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_8 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_TESTBERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 ) * THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_8 / 100.0, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_7 / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_7 + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 * (1.0 - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X ) * 0.6;
end if;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_4 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_5 := (THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_5 := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_3 = 0 or THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 = 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_4 := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_3 := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_2 := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_9 := 0.0;
else
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_6 / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_6;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_3 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_4 := (THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF * 60.0 / 100.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_5 / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_5;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_3 := (THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_3 := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF * 60.0 / 100.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_4;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_2 := (THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.FEHLER_DIFF * 60.0 / 100.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_9 := 15.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_6 * 15.0 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_6 * 15.0 / 100.0, DER_TESTBERICHT.NUMMER);
end if;
  DER_TESTBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B);
  DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.B.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.T := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.T - THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_TESTET_M.PRUEFLEISTUNG;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_TESTS := DER_ZUSTAND.AUFWAND_TESTS + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.DT / 60.0;
  DER_TESTLOG.MTEST_AUFWAND := DER_TESTLOG.MTEST_AUFWAND + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.MODULTEST.Rec_Elem_1 := SEIN_LOG.MODULTEST.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.MTEST_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.MTEST_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.MTEST_ENDE < current_date ) then
  DER_TESTLOG.MTEST_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: MODULTESTAP_SCHNUEREN

rule MODULTESTAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_MODULE_TESTEN_Entity;
  SOLL_TESTEN : SOLL_MODULE_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CRBERICHT : CODEREVIEWBERICHT;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
declare 
  IN_MODSPEZ_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  ZUERST_IDS : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
begin 
send_debug_message "MODULTESTAP_SCHNUEREN";
  IN_MODSPEZ_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  ZUERST_IDS := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  IN_MODSPEZ_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_TESTBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(IN_MODSPEZ_IDS,DIE_MODULSPEZ.UNBEARBEITETE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS);
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  ZUERST_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_CRBERICHT.INHALT);
  ZUERST_IDS := f_intersection_Bag_I_Type(ZUERST_IDS,PRUEFBARE_IDS);
  while AFPS < 30.0 and not ( length(ZUERST_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(ZUERST_IDS);
  ID := f_getselected_Bag_I_Type(PRUEFBARE_IDS,ID);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
  while AFPS < 30.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
  PRUEFBARE_IDS := gib_ungepruefte_ids(DER_CODE.INHALT,DER_TESTBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,IN_MODSPEZ_IDS);
  while AFPS < 30.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := f_get_Bag_I_Type(PRUEFBARE_IDS);
  B := gib_anforderung_zu_id(DER_CODE.INHALT,A.Rec_Elem_1);
  A.Rec_Elem_2 := B.Rec_Elem_2;
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  DER_TESTBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_TESTBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET := PAKET;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"ModultestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_MODULTEST_FERTIG_SEIN

rule MIT_MODULTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_MODULE_TESTEN_Entity;
  SOLL_TESTEN : SOLL_MODULE_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_MODULTEST_FERTIG_SEIN";
  delete(SOLL_TESTEN);
delete(The_Attribute_Role_Of_SOLL_TESTEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: MODULTEST_ABBRECHEN

rule MODULTEST_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  not exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "MODULTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET);
  B := gib_befund_zu_id(DER_TESTBERICHT.INHALT,A.Rec_Elem_1);
  B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,B);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_BEIM_MODULTEST_BERECHNEN

rule PRUEFLEISTUNG_BEIM_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_BEIM_MODULTEST_BERECHNEN";
  P := 0.0;
  P := gib_mtest_pruefleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.PRUEFLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERENTDECKUNGSQUOTE_BEIM_MODULTEST_BERECHNEN

rule FEHLERENTDECKUNGSQUOTE_BEIM_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERENTDECKUNGSQUOTE_BEIM_MODULTEST_BERECHNEN";
  F := 0.0;
  F := gib_mtest_fehlereq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 0.8;
end if;
  F := F * DIE_PRFEFF.MODULTESTEFFEKTIVITAET;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_4 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_3 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_2 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.FEHLEREQ.Rec_Elem_1 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTENTDECKUNGSQUOTE_BEIM_MODULTEST_BERECHNEN

rule VERLUSTENTDECKUNGSQUOTE_BEIM_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_M : BASE2_TESTET_MODULE_Entity;
  TESTET_M : TESTET_MODULE(THE_ATTRIBUTE_ROLE_OF_TESTET_M,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : MODULTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_M,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_MODULTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_MODULE_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_M.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTENTDECKUNGSQUOTE_BEIM_MODULTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_TESTET_M.VERLUSTEQ := gib_mtest_verlusteq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_CODE_NACH_MODULTEST_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_CODE_NACH_MODULTEST_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_CODE_NACH_MODULTEST_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_83 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_83;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : MODULTESTBERICHT;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST";
  delete(KORRIGIERT_C);
delete(The_Attribute_Role_Of_KORRIGIERT_C);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST";
  send_player_message AUFGEHOERT_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST

rule Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST

rule Active_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ,3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_RF * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3 / 100.0;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_RF * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3 / 100.0 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF.Rec_Elem_2;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A);
end if;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_2 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_2 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_AF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_2;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_3 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_3 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_GF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_3;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_4 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_4 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_FF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_4;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_5 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_IF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_5 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_IF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_5;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A_REF.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_9 / 100.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_2 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_FF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.ENTDECKTE_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.A.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.DT / 60.0;
  DER_TESTLOG.MTEST_K_AUFWAND := DER_TESTLOG.MTEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.MTEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.MTEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.MTEST_K_ENDE < current_date ) then
  DER_TESTLOG.MTEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: MODULTESTKORREKTURAP_SCHNUEREN

rule MODULTESTKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "MODULTESTKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"ModultestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_NACH_MODULTEST_FERTIG_SEIN

rule MIT_KORREKTUR_NACH_MODULTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_NACH_MODULTEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_MODULE_TESTEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(TESTET_MODULE(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.MODULTESTEFFEKTIVITAET := DIE_PRFEFF.MODULTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_CODE_NACH_MODULTEST_ABBRECHEN

rule KORREKTUR_VON_CODE_NACH_MODULTEST_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_CODE_NACH_MODULTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_mtestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule PRODUKTIVITAET_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  P := 0.0;
  P := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule FEHLERRATE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_MODULSPEZ,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"ModultestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  F := 0.0;
  F := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_MODULTEST_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_MODULTEST_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_MODULTEST_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_84 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_84;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : MODULTESTBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    MAX_AF := 0.0;
    MAX_GF := 0.0;
    MAX_FF := 0.0;
    MAX_IF := 0.0;
    MAX_RF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3);
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ,3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_5);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_RF);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC);
end if;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_3;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_5);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_9 / 100.0,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_RF);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_2 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_FF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.MAX_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_C + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_M;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.AC.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_C * 1.2;
end if;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.ZEIT_C / 60.0;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.DT / 60.0;
  DER_TESTLOG.MTEST_K_AUFWAND := DER_TESTLOG.MTEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.MTEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.MTEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.MTEST_K_ENDE < current_date ) then
  DER_TESTLOG.MTEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_MODULTEST

rule ALLESKORREKTURAP_SCHNUEREN_NACH_MODULTEST[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_MODULTEST";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modultest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_MODULTEST_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_MODULTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modultest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_MODULTEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_MODULSPEZ.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_MODULE_TESTEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(TESTET_MODULE(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.MODULTESTEFFEKTIVITAET := DIE_PRFEFF.MODULTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_MODULTEST_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_MODULTEST_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_MODULTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modultest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PC := gib_mtestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PM := gib_multiplizierte_quoten(PM,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modultest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modultest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PM : REAL := 0.0;
  PC : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  PM := 0.0;
  PC := 0.0;
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PM := PM * 0.6;
  PC := PC * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modultest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN

rule ALLESFEHLERRATE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : MODULTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_MODULTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Modultest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FM : REAL := 0.0;
  FC : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_FUER_KORREKTUR_NACH_MODULTEST_BERECHNEN";
  FM := 0.0;
  FC := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FM := FM * 1.3;
  FC := FC * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_MIT_INTEGRATIONSTEST

rule ENTWICKLER_BEGINNT_MIT_INTEGRATIONSTEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_SUBSYSTEME_TESTEN_Entity;
  SOLL_TESTEN : SOLL_SUBSYSTEME_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_MIT_INTEGRATIONSTEST";
  create entity The_Attribute_Role_Of_TESTET_SUBSYSTEME_85 : BASE2_TESTET_SUBSYSTEME_Entity aka new_unique_id(BASE2_TESTET_SUBSYSTEME_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRUEFLEISTUNG := 0.0;
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation TESTET_SUBSYSTEME
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_TESTET_SUBSYSTEME_85;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH

rule Deactivating_1_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  Deakt_Relation : Deactivating_1_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity,THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH";
  delete(TESTET_S);
delete(The_Attribute_Role_Of_TESTET_S);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH

rule Deactivating_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH";
  send_player_message AUFGEHOERT_MIT_INTEGRATIONSTEST(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH

rule Deactivating_3_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH";
  delete(THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH

rule Activating_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH";
  create entity THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity aka new_unique_id(BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity)
 with
    LCD := current_date;
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    TEST_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    FEHLER_DIFF := 0.0;
    ENTDECKTE_F := 0.0;
    X := 0.0;
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S := THE_ATTRIBUTE_ROLE_OF_TESTET_S;
    RL_DER_TESTBERICHT := DER_TESTBERICHT;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S := THE_ATTRIBUTE_ROLE_OF_TESTET_S;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
  end create;
  create relation Deactivating_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.NOETIGE_ZEIT := 0.0;
  send_player_message BEGONNEN_MIT_INTEGRATIONSTEST(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH

rule Active_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH";
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_TESTET_S.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.T := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.T + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.T > THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF);
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B := gib_befund_zu_id(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_TESTET_S.VERLUSTEQ;
  DER_TESTBERICHT.VERLUSTE := DER_TESTBERICHT.VERLUSTE + (THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 ) * THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_8 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_TESTBERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 ) * THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_8 / 100.0, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_7 / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_7 + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 * (1.0 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X ) * 0.55;
end if;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_4 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_5 := (THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_5 := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 > 0.0 then
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_6 / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 * (1.0 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X ) * 0.55;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_3 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_4 := (THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_4 := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_3 = 0 or THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 = 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_3 := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_2 := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_9 := 0.0;
else
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_5 / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_5;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_3 := (THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_3 := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF * 60.0 / 100.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_4;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_2 := (THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.FEHLER_DIFF * 60.0 / 100.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_9 := 15.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_5 * 15.0 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_5 * 15.0 / 100.0, DER_TESTBERICHT.NUMMER);
end if;
  DER_TESTBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B);
  DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.B.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.T := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.T - THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_TESTET_S.PRUEFLEISTUNG;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_TESTS := DER_ZUSTAND.AUFWAND_TESTS + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.DT / 60.0;
  DER_TESTLOG.ITEST_AUFWAND := DER_TESTLOG.ITEST_AUFWAND + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.INTTEST.Rec_Elem_1 := SEIN_LOG.INTTEST.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ITEST_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.ITEST_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ITEST_ENDE < current_date ) then
  DER_TESTLOG.ITEST_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: INTEGRATIONSTESTAP_SCHNUEREN

rule INTEGRATIONSTESTAP_SCHNUEREN[980] taking 15 is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_SUBSYSTEME_TESTEN_Entity;
  SOLL_TESTEN : SOLL_SUBSYSTEME_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
declare 
  UNGETESTETE_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  IDS2 : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
begin 
send_debug_message "INTEGRATIONSTESTAP_SCHNUEREN";
  UNGETESTETE_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  IDS2 := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  UNGETESTETE_IDS := gib_ungepruefte_ids(DER_ENTWURF.INHALT,DER_TESTBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNGETESTETE_IDS,DER_ENTWURF.UNBEARBEITETE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_MODULSPEZ.UNBEARBEITETE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_intersection_Bag_I_Type(PRUEFBARE_IDS,DER_CODE.INTEGRIERTE_IDS);
  IDS2 := PRUEFBARE_IDS;
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  while AFPS < 50.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DER_ENTWURF.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
  UNGETESTETE_IDS := gib_ungepruefte_ids(DER_CODE.INHALT,DER_TESTBERICHT.INHALT);
  UNGETESTETE_IDS := f_intersection_Bag_I_Type(UNGETESTETE_IDS,DER_CODE.INTEGRIERTE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNGETESTETE_IDS,IDS2);
  while AFPS < 50.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := f_get_Bag_I_Type(PRUEFBARE_IDS);
  B := gib_anforderung_zu_id(DER_CODE.INHALT,A.Rec_Elem_1);
  A.Rec_Elem_2 := B.Rec_Elem_2;
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  DER_TESTBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_TESTBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET := PAKET;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"IntegrationstestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_INTEGRATIONSTEST_FERTIG_SEIN

rule MIT_INTEGRATIONSTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_SUBSYSTEME_TESTEN_Entity;
  SOLL_TESTEN : SOLL_SUBSYSTEME_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_INTEGRATIONSTEST_FERTIG_SEIN";
  delete(SOLL_TESTEN);
delete(The_Attribute_Role_Of_SOLL_TESTEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: INTEGRATIONSTEST_ABBRECHEN

rule INTEGRATIONSTEST_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  not exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "INTEGRATIONSTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET);
  B := gib_befund_zu_id(DER_TESTBERICHT.INHALT,A.Rec_Elem_1);
  B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,B);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_BEIM_INTEGRATIONSTEST_BERECHNEN

rule PRUEFLEISTUNG_BEIM_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_BEIM_INTEGRATIONSTEST_BERECHNEN";
  P := 0.0;
  P := gib_itest_pruefleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.6;
end if;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.PRUEFLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERENTDECKUNGSQUOTE_BEIM_INTEGRATIONSTEST_BERECHNEN

rule FEHLERENTDECKUNGSQUOTE_BEIM_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERENTDECKUNGSQUOTE_BEIM_INTEGRATIONSTEST_BERECHNEN";
  F := 0.0;
  F := gib_itest_fehlereq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 0.7;
end if;
  F := F * DIE_PRFEFF.INTEGRATIONSTESTEFFEKTIVITAET;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_4 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_3 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_2 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_1 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTENTDECKUNGSQUOTE_BEIM_INTEGRATIONSTEST_BERECHNEN

rule VERLUSTENTDECKUNGSQUOTE_BEIM_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SUBSYSTEME_Entity;
  TESTET_S : TESTET_SUBSYSTEME(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : INTEGRATIONSTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_INTEGRATIONSTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SUBSYSTEME_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTENTDECKUNGSQUOTE_BEIM_INTEGRATIONSTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.VERLUSTEQ := gib_itest_verlusteq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_CODE_NACH_INTEGRATIONSTEST_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_CODE_NACH_INTEGRATIONSTEST_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_CODE_NACH_INTEGRATIONSTEST_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_86 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_86;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST";
  delete(KORRIGIERT_C);
delete(The_Attribute_Role_Of_KORRIGIERT_C);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST";
  send_player_message AUFGEHOERT_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST

rule Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST

rule Active_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ,2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2 / 100.0;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2 / 100.0 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_REF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_REF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_REF.Rec_Elem_2;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A);
end if;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_AF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_GF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_FF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_5 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_IF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_5 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_IF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_5;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_REF := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A_REF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9 / 100.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_1 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_GF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.A.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.DT / 60.0;
  DER_TESTLOG.ITEST_K_AUFWAND := DER_TESTLOG.ITEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ITEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.ITEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ITEST_K_ENDE < current_date ) then
  DER_TESTLOG.ITEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: INTEGRATIONSTESTKORREKTURAP_SCHNUEREN

rule INTEGRATIONSTESTKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "INTEGRATIONSTESTKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"IntegrationstestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_NACH_INTEGRATIONSTEST_FERTIG_SEIN

rule MIT_KORREKTUR_NACH_INTEGRATIONSTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_NACH_INTEGRATIONSTEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DER_ENTWURF.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_SUBSYSTEME_TESTEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(TESTET_SUBSYSTEME(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.INTEGRATIONSTESTEFFEKTIVITAET := DIE_PRFEFF.INTEGRATIONSTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_CODE_NACH_INTEGRATIONSTEST_ABBRECHEN

rule KORREKTUR_VON_CODE_NACH_INTEGRATIONSTEST_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_CODE_NACH_INTEGRATIONSTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_itestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule PRODUKTIVITAET_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
  P1 : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  P := 0.0;
  P1 := 0.0;
  P := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  P1 := 1.0 / P;
  P1 := P1 + 1.0 / (gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.2 );
  P := 1.0 / P1;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule FEHLERRATE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_ENTWURF : SYSTEMENTWURF;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DER_ENTWURF,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"IntegrationstestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F_I : REAL := 0.0;
  F_F : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  F_I := 0.0;
  F_F := 0.0;
  F_I := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  F_F := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 1.9;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F_I := F_I * 1.2;
  F_F := F_F * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 := F_I;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_3 := F_F;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_INTEGRATIONSTEST_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_INTEGRATIONSTEST_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_INTEGRATIONSTEST_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_87 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_87;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    MAX_AF := 0.0;
    MAX_GF := 0.0;
    MAX_FF := 0.0;
    MAX_IF := 0.0;
    MAX_RF := 0.0;
    MAX_VERLUST := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_RF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    HINZUGEFUEGT_M_AFP := 0.0;
    ZEIT_E := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2);
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ,2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_5);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_RF);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_6 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_FF);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_2 > 0.0 then
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_5);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9 / 100.0,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_RF);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_GF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_FF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_FF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_FF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_9 / 100.0,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP := 0.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 ) < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AM.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_C_AFP;
end if;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_1 + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_GF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.HINZUGEFUEGT_M_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_C + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_M;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.AC.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_E * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_C * 1.2;
end if;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_E / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.ZEIT_C / 60.0;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.DT / 60.0;
  DER_TESTLOG.ITEST_K_AUFWAND := DER_TESTLOG.ITEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ITEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.ITEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ITEST_K_ENDE < current_date ) then
  DER_TESTLOG.ITEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_INTEGRATIONSTEST

rule ALLESKORREKTURAP_SCHNUEREN_NACH_INTEGRATIONSTEST[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_INTEGRATIONSTEST";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Integrationstest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_INTEGRATIONSTEST_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_INTEGRATIONSTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Integrationstest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_INTEGRATIONSTEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DER_ENTWURF.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_SUBSYSTEME_TESTEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(TESTET_SUBSYSTEME(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.INTEGRATIONSTESTEFFEKTIVITAET := DIE_PRFEFF.INTEGRATIONSTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_INTEGRATIONSTEST_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_INTEGRATIONSTEST_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_INTEGRATIONSTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Integrationstest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PE : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  PE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PE := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PC := gib_itestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PE := gib_multiplizierte_quoten(PE,0.5);
  PM := gib_multiplizierte_quoten(PM,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Integrationstest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Integrationstest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PE : REAL := 0.0;
  PM : REAL := 0.0;
  PC : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  PE := 0.0;
  PM := 0.0;
  PC := 0.0;
  PE := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,1);
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PE := PE * 0.6;
  PM := PM * 0.6;
  PC := PC * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Integrationstest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN

rule ALLESFEHLERRATE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : INTEGRATIONSTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_INTEGRATIONSTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Integrationstest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FE : REAL := 0.0;
  FM : REAL := 0.0;
  FC : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_FUER_KORREKTUR_NACH_INTEGRATIONSTEST_BERECHNEN";
  FE := 0.0;
  FM := 0.0;
  FC := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FE := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,3);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FE := FE * 1.3;
  FM := FM * 1.3;
  FC := FC * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 := FE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_MIT_SYSTEMTEST

rule ENTWICKLER_BEGINNT_MIT_SYSTEMTEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_SYSTEM_TESTEN_Entity;
  SOLL_TESTEN : SOLL_SYSTEM_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_MIT_SYSTEMTEST";
  create entity The_Attribute_Role_Of_TESTET_SYSTEM_88 : BASE2_TESTET_SYSTEM_Entity aka new_unique_id(BASE2_TESTET_SYSTEM_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    PRUEFLEISTUNG := 0.0;
    FEHLEREQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    VERLUSTEQ := 0.0;
  end create;
  create relation TESTET_SYSTEM
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_TESTET_SYSTEM_88;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH

rule Deactivating_1_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  Deakt_Relation : Deactivating_1_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity,THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH";
  delete(TESTET_S);
delete(The_Attribute_Role_Of_TESTET_S);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH

rule Deactivating_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH";
  send_player_message AUFGEHOERT_MIT_SYSTEMTEST(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH

rule Deactivating_3_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH";
  delete(THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH

rule Activating_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH";
  create entity THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity aka new_unique_id(BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity)
 with
    LCD := current_date;
    REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    TEST_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    FEHLER_DIFF := 0.0;
    ENTDECKTE_F := 0.0;
    X := 0.0;
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S := THE_ATTRIBUTE_ROLE_OF_TESTET_S;
    RL_DER_TESTBERICHT := DER_TESTBERICHT;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_TESTET_S := THE_ATTRIBUTE_ROLE_OF_TESTET_S;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
  end create;
  create relation Deactivating_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.NOETIGE_ZEIT := 0.0;
  send_player_message BEGONNEN_MIT_SYSTEMTEST(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH

rule Active_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH";
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_TESTET_S.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.T := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.T + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.T > THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF);
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B := gib_befund_zu_id(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 > THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_TESTET_S.VERLUSTEQ;
  DER_TESTBERICHT.VERLUSTE := DER_TESTBERICHT.VERLUSTE + (THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 ) * THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_8 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_TESTBERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 ) * THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_8 / 100.0, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_8 := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_7 / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_7 + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 * (1.0 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X ) * 0.5;
end if;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_4 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_5 := (THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_7 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_5 := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 > 0.0 then
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_6 / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 * (1.0 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X ) * 0.5;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_3 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_4 := (THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_6 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_4 := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 > 0.0 then
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_5 / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 * (1.0 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X ) * 0.5;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_2 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_3 := (THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_5 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_3 := 0.0;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_3 = 0 or THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_2 = 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_2 := 0.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_9 := 0.0;
else
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X >= 1.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_4 / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X;
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.X - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_4;
end if;
  if THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF > 0.0 then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF * (THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_1 / 100.0 );
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_2 := (THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F / THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TEST_ANF.Rec_Elem_4 ) * 100.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.ENTDECKTE_F, DER_TESTBERICHT.NUMMER);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.FEHLER_DIFF * 60.0 / 100.0;
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_9 := 15.0;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_4 * 15.0 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_4 * 15.0 / 100.0, DER_TESTBERICHT.NUMMER);
end if;
  DER_TESTBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B);
  DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.B.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.T := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.T - THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.NOETIGE_ZEIT;
end if;
  if not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET);
else
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
end if;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.REF_ANF.Rec_Elem_2 / THE_ATTRIBUTE_ROLE_OF_TESTET_S.PRUEFLEISTUNG;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_TESTS := DER_ZUSTAND.AUFWAND_TESTS + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.DT / 60.0;
  DER_TESTLOG.STEST_AUFWAND := DER_TESTLOG.STEST_AUFWAND + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.SYSTEMTEST.Rec_Elem_1 := SEIN_LOG.SYSTEMTEST.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.STEST_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.STEST_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.STEST_ENDE < current_date ) then
  DER_TESTLOG.STEST_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: SYSTEMTESTAP_SCHNUEREN

rule SYSTEMTESTAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_SYSTEM_TESTEN_Entity;
  SOLL_TESTEN : SOLL_SYSTEM_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
declare 
  UNGETESTETE_IDS : Bag_I_Type := Bag_I_Type'();
  PRUEFBARE_IDS : Bag_I_Type := Bag_I_Type'();
  IDS2 : Bag_I_Type := Bag_I_Type'();
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
begin 
send_debug_message "SYSTEMTESTAP_SCHNUEREN";
  UNGETESTETE_IDS := Bag_I_Type'();
  PRUEFBARE_IDS := Bag_I_Type'();
  IDS2 := Bag_I_Type'();
  PAKET := Bag_Record_IRIRRRRR_Type'();
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  AFPS := 0.0;
  ID := 0;
  if 2 * length(DER_CODE.INTEGRIERTE_IDS) >= length(DER_CODE.INHALT) then
  UNGETESTETE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_TESTBERICHT.INHALT);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNGETESTETE_IDS,DIE_SPEZIFIKATION.UNBEARBEITETE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DER_ENTWURF.UNBEARBEITETE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_MODULSPEZ.UNBEARBEITETE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_MODULSPEZ.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DER_ENTWURF.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_SPEZIFIKATION.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(PRUEFBARE_IDS,DIE_NOTIZEN.IN_ARBEIT_FUER_CODE_IDS);
  PRUEFBARE_IDS := f_intersection_Bag_I_Type(PRUEFBARE_IDS,DER_CODE.INTEGRIERTE_IDS);
  IDS2 := PRUEFBARE_IDS;
  PAKET := Bag_Record_IRIRRRRR_Type'();
  AFPS := 0.0;
  while AFPS < 100.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(PRUEFBARE_IDS);
  A := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,ID);
  if A.Rec_Elem_2 > 0.0 then
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end if;
end loop;
  UNGETESTETE_IDS := gib_ungepruefte_ids(DER_CODE.INHALT,DER_TESTBERICHT.INHALT);
  UNGETESTETE_IDS := f_intersection_Bag_I_Type(UNGETESTETE_IDS,DER_CODE.INTEGRIERTE_IDS);
  PRUEFBARE_IDS := f_diff_Bag_I_Type(UNGETESTETE_IDS,IDS2);
  while AFPS < 100.0 and not ( length(PRUEFBARE_IDS) = 0 ) loop
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  A.Rec_Elem_1 := f_get_Bag_I_Type(PRUEFBARE_IDS);
  B := gib_anforderung_zu_id(DER_CODE.INHALT,A.Rec_Elem_1);
  A.Rec_Elem_2 := B.Rec_Elem_2;
  PAKET := f_put_Bag_Record_IRIRRRRR_Type(PAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  DER_TESTBERICHT.INHALT := nimm_in_bericht_auf(PAKET,DER_TESTBERICHT.INHALT);
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET := PAKET;
end if;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"SystemtestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_SYSTEMTEST_FERTIG_SEIN

rule MIT_SYSTEMTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_SYSTEM_TESTEN_Entity;
  SOLL_TESTEN : SOLL_SYSTEM_TESTEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "MIT_SYSTEMTEST_FERTIG_SEIN";
  delete(SOLL_TESTEN);
delete(The_Attribute_Role_Of_SOLL_TESTEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: SYSTEMTEST_ABBRECHEN

rule SYSTEMTEST_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  not exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "SYSTEMTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET);
  B := gib_befund_zu_id(DER_TESTBERICHT.INHALT,A.Rec_Elem_1);
  B := f_getselected_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,B);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: PRUEFLEISTUNG_BEIM_SYSTEMTEST_BERECHNEN

rule PRUEFLEISTUNG_BEIM_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
begin 
send_debug_message "PRUEFLEISTUNG_BEIM_SYSTEMTEST_BERECHNEN";
  P := 0.0;
  P := gib_stest_pruefleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.8;
end if;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.PRUEFLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERENTDECKUNGSQUOTE_BEIM_SYSTEMTEST_BERECHNEN

rule FEHLERENTDECKUNGSQUOTE_BEIM_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F : REAL := 0.0;
begin 
send_debug_message "FEHLERENTDECKUNGSQUOTE_BEIM_SYSTEMTEST_BERECHNEN";
  F := 0.0;
  F := gib_stest_fehlereq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F := F * 0.8;
end if;
  F := F * DIE_PRFEFF.SYSTEMTESTEFFEKTIVITAET;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_4 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_3 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_2 := F;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.FEHLEREQ.Rec_Elem_1 := F;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTENTDECKUNGSQUOTE_BEIM_SYSTEMTEST_BERECHNEN

rule VERLUSTENTDECKUNGSQUOTE_BEIM_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  THE_ATTRIBUTE_ROLE_OF_TESTET_S : BASE2_TESTET_SYSTEM_Entity;
  TESTET_S : TESTET_SYSTEM(THE_ATTRIBUTE_ROLE_OF_TESTET_S,EIN_ENTWICKLER,DER_CODE);
  DER_TESTBERICHT : SYSTEMTESTBERICHT;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity;
  THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation : BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,THE_ATTRIBUTE_ROLE_OF_TESTET_S,DER_TESTBERICHT,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_FUEHRT_SYSTEMTEST_DURCH_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_SYSTEM_TESTEN(*,EIN_ENTWICKLER,DER_CODE)) or not ( length(THE_ATTRIBUTE_ROLE_OF_TESTET_S.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTENTDECKUNGSQUOTE_BEIM_SYSTEMTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_TESTET_S.VERLUSTEQ := gib_stest_verlusteq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_CODE_NACH_SYSTEMTEST_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_CODE_NACH_SYSTEMTEST_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_CODE_NACH_SYSTEMTEST_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_89 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_89;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : SYSTEMTESTBERICHT;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST";
  delete(KORRIGIERT_C);
delete(The_Attribute_Role_Of_KORRIGIERT_C);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST";
  send_player_message AUFGEHOERT_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST

rule Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    ENTDECKTE_RF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST

rule Active_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ,1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1 / 100.0;
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1 / 100.0 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A_REF.Rec_Elem_2;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A);
end if;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_FF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_5 >= 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_IF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_5 / 100.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_IF := -THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_5;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A_REF := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9 / 100.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.ENTDECKTE_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.A.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.DT / 60.0;
  DER_TESTLOG.STEST_K_AUFWAND := DER_TESTLOG.STEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.STEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.STEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.STEST_K_ENDE < current_date ) then
  DER_TESTLOG.STEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: SYSTEMTESTKORREKTURAP_SCHNUEREN

rule SYSTEMTESTKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "SYSTEMTESTKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"SystemtestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_NACH_SYSTEMTEST_FERTIG_SEIN

rule MIT_KORREKTUR_NACH_SYSTEMTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_NACH_SYSTEMTEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_SYSTEM_TESTEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(TESTET_SYSTEM(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.SYSTEMTESTEFFEKTIVITAET := DIE_PRFEFF.SYSTEMTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_CODE_NACH_SYSTEMTEST_ABBRECHEN

rule KORREKTUR_VON_CODE_NACH_SYSTEMTEST_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_CODE_NACH_SYSTEMTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_stestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule PRODUKTIVITAET_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
  P1 : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  P := 0.0;
  P1 := 0.0;
  P := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  P1 := 1.0 / P;
  P1 := P1 + 1.0 / (gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.2 ) + 1.0 / (gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.5 );
  P := 1.0 / P1;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule FEHLERRATE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_SPEZIFIKATION,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"SystemtestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F_I : REAL := 0.0;
  F_F : REAL := 0.0;
  F_G : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  F_I := 0.0;
  F_F := 0.0;
  F_G := 0.0;
  F_I := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  F_F := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 1.9;
  F_G := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.0;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F_I := F_I * 1.2;
  F_F := F_F * 1.2;
  F_G := F_F * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 := F_I;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_3 := F_F;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_2 := F_G;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_SYSTEMTEST_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_SYSTEMTEST_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_SYSTEMTEST_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_90 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_90;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : SYSTEMTESTBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AS := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    MAX_AF := 0.0;
    MAX_GF := 0.0;
    MAX_FF := 0.0;
    MAX_IF := 0.0;
    MAX_RF := 0.0;
    MAX_VERLUST := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_RF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    ENTDECKTE_HF := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    HINZUGEFUEGT_E_AFP := 0.0;
    HINZUGEFUEGT_M_AFP := 0.0;
    ZEIT_S := 0.0;
    ZEIT_E := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    ZEIT_H := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1);
  DIE_SPEZIFIKATION.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ,1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_5);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH := f_getselected_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  DAS_HANDBUCH.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_5 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_GF);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_6 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_FF);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 > 0.0 then
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_2 > 0.0 then
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_5);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9 / 100.0,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_C := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_HF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AH.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9 / 100.0,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_HF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9 / 100.0,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP := 0.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 ) < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AE.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP;
end if;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_E := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_E_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_FF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_FF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_FF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_9 / 100.0,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_RF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP := 0.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 ) < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AM.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_C_AFP;
end if;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_M := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_AF + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_RF ) / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.HINZUGEFUEGT_M_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_C + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_S + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_H + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_M;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.AC.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_S * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_E * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_C * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_H * 1.2;
end if;
  SEIN_LOG.SPEZ_K.Rec_Elem_1 := SEIN_LOG.SPEZ_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_S / 60.0;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_E / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_C / 60.0;
  SEIN_LOG.HANDBUCH_K.Rec_Elem_1 := SEIN_LOG.HANDBUCH_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.ZEIT_H / 60.0;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.DT / 60.0;
  DER_TESTLOG.STEST_K_AUFWAND := DER_TESTLOG.STEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.STEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.STEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.STEST_K_ENDE < current_date ) then
  DER_TESTLOG.STEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_SYSTEMTEST

rule ALLESKORREKTURAP_SCHNUEREN_NACH_SYSTEMTEST[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_SYSTEMTEST";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Systemtest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_SYSTEMTEST_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_SYSTEMTEST_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Systemtest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_SYSTEMTEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_SYSTEM_TESTEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(TESTET_SYSTEM(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.SYSTEMTESTEFFEKTIVITAET := DIE_PRFEFF.SYSTEMTESTEFFEKTIVITAET * (1.0 - 25.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_SYSTEMTEST_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_SYSTEMTEST_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_SYSTEMTEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Systemtest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PS : REAL := 0.0;
  PE : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PH : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  PS := 0.0;
  PE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PS := gib_spezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG);
  PE := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PC := gib_stestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  PH := gib_handbuchkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PS := PS * 0.6;
  PE := gib_multiplizierte_quoten(PE,0.5);
  PM := gib_multiplizierte_quoten(PM,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
  PH := gib_multiplizierte_quoten(PH,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1 := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH := PH;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Systemtest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Systemtest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PS : REAL := 0.0;
  PE : REAL := 0.0;
  PM : REAL := 0.0;
  PC : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  PS := 0.0;
  PE := 0.0;
  PM := 0.0;
  PC := 0.0;
  PS := gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG,1);
  PE := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,1);
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PS := PS * 0.5;
  PE := PE * 0.6;
  PM := PM * 0.6;
  PC := PC * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_SPEZ := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Systemtest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN

rule ALLESFEHLERRATE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : SYSTEMTESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_SYSTEMTEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Systemtest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FS : REAL := 0.0;
  FE : REAL := 0.0;
  FM : REAL := 0.0;
  FC : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_FUER_KORREKTUR_NACH_SYSTEMTEST_BERECHNEN";
  FS := 0.0;
  FE := 0.0;
  FM := 0.0;
  FC := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FS := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG,3);
  FE := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,3);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FS := FS * 1.1;
  FE := FE * 1.3;
  FM := FM * 1.3;
  FC := FC * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 := FS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 := FE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
end rule;
-----------------------------------------------------------------------------
-- Regel: KUNDE_BEGINNT_NICHT_MIT_ABNAHMETEST

rule KUNDE_BEGINNT_NICHT_MIT_ABNAHMETEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  DER_KUNDE : KUNDE;
  DER_TESTBERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_ABNEHMEN_Entity;
  SOLL_TESTEN : SOLL_ABNEHMEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,DER_KUNDE,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  date_weekday(current_date) < 6;
  length(DER_CODE.INTEGRIERTE_IDS) > 0;
  not ( length(DER_TESTBERICHT.INHALT) = 0 ) or DER_ZUSTAND.ANZAHL_ABNAHMETESTS > 2;
begin 
send_debug_message "KUNDE_BEGINNT_NICHT_MIT_ABNAHMETEST";
  if exists(NIMMT_AB(*,DER_KUNDE,DER_CODE)) then
  send_player_message KUNDE_FUEHRT_ABNAHMETEST_GERADE_DURCH;
end if;
  if not exists(NIMMT_AB(*,DER_KUNDE,DER_CODE)) and not ( length(DER_TESTBERICHT.INHALT) = 0 ) then
  send_player_message ABNAHMETEST_BEFUNDE_ERST_KORRIGIEREN;
end if;
  if not exists(NIMMT_AB(*,DER_KUNDE,DER_CODE)) and DER_ZUSTAND.ANZAHL_ABNAHMETESTS > 2 then
  send_player_message KUNDE_FUEHRT_KEINEN_WEITEREN_ABNAHMETEST_DURCH;
end if;
  delete(SOLL_TESTEN);
delete(The_Attribute_Role_Of_SOLL_TESTEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KUNDE_BEGINNT_MIT_ABNAHMETEST

rule KUNDE_BEGINNT_MIT_ABNAHMETEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  DER_KUNDE : KUNDE;
  DER_TESTBERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN : BASE2_SOLL_ABNEHMEN_Entity;
  SOLL_TESTEN : SOLL_ABNEHMEN(THE_ATTRIBUTE_ROLE_OF_SOLL_TESTEN,DER_KUNDE,DER_CODE);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
  DER_TESTLOG : TESTLOGBUCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists(NIMMT_AB(*,DER_KUNDE,DER_CODE));
  date_weekday(current_date) < 6;
  length(DER_CODE.INTEGRIERTE_IDS) > 0;
  ( length(DER_TESTBERICHT.INHALT) = 0 );
  DER_ZUSTAND.ANZAHL_ABNAHMETESTS <= 2;
declare 
  NOETIGE_ZEIT : REAL := 0.0;
  FEQ : REAL := 0.0;
begin 
send_debug_message "KUNDE_BEGINNT_MIT_ABNAHMETEST";
  NOETIGE_ZEIT := 0.0;
  FEQ := 0.0;
  NOETIGE_ZEIT := gib_afp(DER_CODE.INHALT) / gib_atest_pruefleistung;
  DER_ZUSTAND.AUFWAND_FUER_KUNDE := DER_ZUSTAND.AUFWAND_FUER_KUNDE + NOETIGE_ZEIT / 60.0;
  DER_TESTLOG.ATEST_AUFWAND := NOETIGE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ATEST_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.ATEST_BEGINN := current_date;
end if;
  FEQ := gib_atest_fehlereq * DIE_PRFEFF.ABNAHMETESTEFFEKTIVITAET;
  create entity The_Attribute_Role_Of_NIMMT_AB_91 : BASE2_NIMMT_AB_Entity aka new_unique_id(BASE2_NIMMT_AB_Entity)
 with
    FERTIG_AM := current_date + round(NOETIGE_ZEIT * (float(delta_t) / float(DEL_TA.T) ));
    FEHLEREQ := Record_RRRRR_Type'(FEQ,FEQ,FEQ,FEQ,FEQ);
    VERLUSTEQ := gib_atest_verlusteq;
  end create;
  create relation NIMMT_AB
  with
    WER := DER_KUNDE;
    WAS := DER_CODE;
    Attribute_Role := The_Attribute_Role_Of_NIMMT_AB_91;
  end create;
  delete(SOLL_TESTEN);
delete(The_Attribute_Role_Of_SOLL_TESTEN);
  send_player_message BEGONNEN_MIT_ABNAHMETEST;
  DER_ZUSTAND.ANZAHL_ABNAHMETESTS := DER_ZUSTAND.ANZAHL_ABNAHMETESTS + 1;
  if DER_ZUSTAND.ANZAHL_ABNAHMETESTS > 2 then
  send_player_message LETZTER_ABNAHMETEST_VOM_KUNDEN;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KUNDE_BEENDET_ABNAHMETEST

rule KUNDE_BEENDET_ABNAHMETEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  DER_KUNDE : KUNDE;
  THE_ATTRIBUTE_ROLE_OF_ABNAHME : BASE2_NIMMT_AB_Entity;
  ABNAHME : NIMMT_AB(THE_ATTRIBUTE_ROLE_OF_ABNAHME,DER_KUNDE,DER_CODE);
  DER_TESTBERICHT : ABNAHMETESTBERICHT;
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DAS_HANDBUCH : HANDBUCH;
  DIE_ZIELE : PROJEKTZIELE;
  DER_TESTLOG : TESTLOGBUCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  current_date >= THE_ATTRIBUTE_ROLE_OF_ABNAHME.FERTIG_AM;
  date_weekday(current_date) < 6;
declare 
  PAKET : Bag_Record_IRIRRRRR_Type := Bag_Record_IRIRRRRR_Type'();
  REF_ANF : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  TEST_ANF : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B : Record_IRRRRRRRR_Type := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KUNDE_BEENDET_ABNAHMETEST";
  PAKET := Bag_Record_IRIRRRRR_Type'();
  REF_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  TEST_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  DER_TESTLOG.ATEST_ENDE := current_date;
  DER_TESTBERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  PAKET := DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN;
  while not ( length(PAKET) = 0 ) loop
  REF_ANF := f_get_Bag_Record_IRIRRRRR_Type(PAKET);
  TEST_ANF := gib_anforderung_zu_id(DER_CODE.INHALT,REF_ANF.Rec_Elem_1);
  B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  B.Rec_Elem_1 := TEST_ANF.Rec_Elem_1;
  if REF_ANF.Rec_Elem_2 > TEST_ANF.Rec_Elem_2 then
  B.Rec_Elem_8 := THE_ATTRIBUTE_ROLE_OF_ABNAHME.VERLUSTEQ;
else
  B.Rec_Elem_8 := 0.0;
end if;
  DER_TESTBERICHT.VERLUSTE := DER_TESTBERICHT.VERLUSTE + (REF_ANF.Rec_Elem_2 - TEST_ANF.Rec_Elem_2 ) * B.Rec_Elem_8 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_VERLUSTE_PRO_PRF, DER_TESTBERICHT.NUMMER) + (REF_ANF.Rec_Elem_2 - TEST_ANF.Rec_Elem_2 ) * B.Rec_Elem_8 / 100.0, DER_TESTBERICHT.NUMMER);
  B.Rec_Elem_7 := REF_ANF.Rec_Elem_2;
  if TEST_ANF.Rec_Elem_4 > 0.0 then
  B.Rec_Elem_2 := THE_ATTRIBUTE_ROLE_OF_ABNAHME.FEHLEREQ.Rec_Elem_1;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + TEST_ANF.Rec_Elem_4 * B.Rec_Elem_2 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + TEST_ANF.Rec_Elem_4 * B.Rec_Elem_2 / 100.0, DER_TESTBERICHT.NUMMER);
end if;
  if TEST_ANF.Rec_Elem_5 > 0.0 then
  B.Rec_Elem_3 := THE_ATTRIBUTE_ROLE_OF_ABNAHME.FEHLEREQ.Rec_Elem_2;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + TEST_ANF.Rec_Elem_5 * B.Rec_Elem_3 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + TEST_ANF.Rec_Elem_5 * B.Rec_Elem_3 / 100.0, DER_TESTBERICHT.NUMMER);
end if;
  if TEST_ANF.Rec_Elem_6 > 0.0 then
  B.Rec_Elem_4 := THE_ATTRIBUTE_ROLE_OF_ABNAHME.FEHLEREQ.Rec_Elem_3;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + TEST_ANF.Rec_Elem_6 * B.Rec_Elem_4 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + TEST_ANF.Rec_Elem_6 * B.Rec_Elem_4 / 100.0, DER_TESTBERICHT.NUMMER);
end if;
  if TEST_ANF.Rec_Elem_7 > 0.0 then
  B.Rec_Elem_5 := THE_ATTRIBUTE_ROLE_OF_ABNAHME.FEHLEREQ.Rec_Elem_4;
  DER_TESTBERICHT.FEHLER := DER_TESTBERICHT.FEHLER + TEST_ANF.Rec_Elem_7 * B.Rec_Elem_5 / 100.0;
  replace_nth(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, nth_elem(DER_TESTBERICHT.ANZ_FEHLER_PRO_PRF, DER_TESTBERICHT.NUMMER) + TEST_ANF.Rec_Elem_7 * B.Rec_Elem_5 / 100.0, DER_TESTBERICHT.NUMMER);
end if;
  DER_TESTBERICHT.INHALT := f_put_Bag_Record_IRRRRRRRR_Type(DER_TESTBERICHT.INHALT,B);
  DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_TESTBERICHT.NICHT_KORRIGIERTE_IDS,B.Rec_Elem_1);
end loop;
  send_player_message KUNDE_BERICHTET_NACH_ABNAHMETEST(round(DER_TESTBERICHT.FEHLER),round(DER_TESTBERICHT.VERLUSTE));
  delete(ABNAHME);
delete(The_Attribute_Role_Of_ABNAHME);
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_CODE_NACH_ABNAHMETEST_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_CODE_NACH_ABNAHMETEST_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_CODE_NACH_ABNAHMETEST_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_92 : BASE2_KORRIGIERT_Entity aka new_unique_id(BASE2_KORRIGIERT_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_92;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : ABNAHMETESTBERICHT;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST";
  delete(KORRIGIERT_C);
delete(The_Attribute_Role_Of_KORRIGIERT_C);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST";
  send_player_message AUFGEHOERT_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST

rule Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST[990] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_ANF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    A_REF := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    HINZUGEFUEGTE_AFP := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation
  with
    RL_DER_CODE := DER_CODE;
    RL_EINE_NOTATION := EINE_NOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DAS_LOGBUCH := DAS_LOGBUCH;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_CODE_BEARBEITEN_Entity := THE_BASE2_1_CODE_BEARBEITEN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_CODE_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST

rule Active_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST[790] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ,0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 / 100.0 ) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_REF := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_REF.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_REF.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_REF.Rec_Elem_2;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A);
end if;
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_ANF := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_ANF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A_ANF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_FF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_4 / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_IF := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_7 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_5 / 100.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.ENTDECKTE_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.HINZUGEFUEGTE_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.A.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT * 1.2;
end if;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.DT / 60.0;
  DER_TESTLOG.ATEST_K_AUFWAND := DER_TESTLOG.ATEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ATEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.ATEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ATEST_K_ENDE < current_date ) then
  DER_TESTLOG.ATEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ABNAHMETESTKORREKTURAP_SCHNUEREN

rule ABNAHMETESTKORREKTURAP_SCHNUEREN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ABNAHMETESTKORREKTURAP_SCHNUEREN";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"AbnahmetestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_NACH_ABNAHMETEST_FERTIG_SEIN

rule MIT_KORREKTUR_NACH_ABNAHMETEST_FERTIG_SEIN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AbnahmetestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_NACH_ABNAHMETEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_ABNEHMEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(NIMMT_AB(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.ABNAHMETESTEFFEKTIVITAET := DIE_PRFEFF.ABNAHMETESTEFFEKTIVITAET * (1.0 - 20.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
  send_player_message KORREKTUR_NACH_ABNAHMETEST_BEENDET;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_VON_CODE_NACH_ABNAHMETEST_ABBRECHEN

rule KORREKTUR_VON_CODE_NACH_ABNAHMETEST_ABBRECHEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  not exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_VON_CODE_NACH_ABNAHMETEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AbnahmetestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTURLEISTUNG_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  P := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  P := gib_stestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := gib_multiplizierte_quoten(P,0.3);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.KORREKTURLEISTUNG := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AbnahmetestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "FEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: PRODUKTIVITAET_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule PRODUKTIVITAET_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AbnahmetestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  P : REAL := 0.0;
  P1 : REAL := 0.0;
begin 
send_debug_message "PRODUKTIVITAET_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  P := 0.0;
  P1 := 0.0;
  P := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,1);
  P1 := 1.0 / P;
  P1 := P1 + 1.0 / (gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.2 ) + 1.0 / (gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 3.5 ) + 1.0 / (gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * 2.0 );
  P := 1.0 / P1;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  P := P * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.PRODUKTIVITAET := P;
end rule;
-----------------------------------------------------------------------------
-- Regel: VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AbnahmetestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "VERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: FEHLERRATE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule FEHLERRATE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DER_CODE : CODE;
  EINE_NOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_CODE,EINE_NOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DAS_LOGBUCH : PROJEKTLOGBUCH;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_CODE_BEARBEITEN_Entity : BASE2_1_CODE_BEARBEITEN_Entity;
  THE_BASE2_1_CODE_BEARBEITEN_Relation : BASE2_1_CODE_BEARBEITEN_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C : BASE2_KORRIGIERT_Entity;
  KORRIGIERT_C : KORRIGIERT(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Relation(DER_CODE,EINE_NOTATION,THE_ATTRIBUTE_ROLE_OF_NOTIERT_IN,DER_ZUSTAND,DAS_LOGBUCH,DEL_TA,K,THE_BASE2_1_CODE_BEARBEITEN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C,DIE_NOTIZEN,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_CODE_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_NOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists_extended(BEARBEITET(*,*,DER_CODE)) or exists_extended(SOLL_BEARBEITEN(*,*,DER_CODE)) or exists(SOLL_ABNEHMEN(*,*,DER_CODE)) or exists(NIMMT_AB(*,*,DER_CODE)) or exists_extended(REVIEW_SOLL_STATTFINDEN(*,DER_CODE,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_KORRIGIEREN(*,EIN_ENTWICKLER,DER_CODE,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"AbnahmetestKorrekturAP_schnueren" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F_I : REAL := 0.0;
  F_F : REAL := 0.0;
  F_G : REAL := 0.0;
  F_A : REAL := 0.0;
begin 
send_debug_message "FEHLERRATE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  F_I := 0.0;
  F_F := 0.0;
  F_G := 0.0;
  F_A := 0.0;
  F_I := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_NOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG,3);
  F_F := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 1.9;
  F_G := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.0;
  F_A := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN)) * 2.8;
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F_I := F_I * 1.2;
  F_F := F_F * 1.2;
  F_G := F_F * 1.2;
  F_A := F_A * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_4 := F_I;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_3 := F_F;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_2 := F_G;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_C.FEHLERRATE.Rec_Elem_1 := F_A;
end rule;
-----------------------------------------------------------------------------
-- Regel: ENTWICKLER_BEGINNT_NACH_ABNAHMETEST_ALLES_ZU_KORRIGIEREN

rule ENTWICKLER_BEGINNT_NACH_ABNAHMETEST_ALLES_ZU_KORRIGIEREN[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  not exists_extended(BEARBEITET(*,EIN_ENTWICKLER,*));
begin 
send_debug_message "ENTWICKLER_BEGINNT_NACH_ABNAHMETEST_ALLES_ZU_KORRIGIEREN";
  create entity The_Attribute_Role_Of_KORRIGIERT_ALLES_93 : BASE2_KORRIGIERT_ALLES_Entity aka new_unique_id(BASE2_KORRIGIERT_ALLES_Entity)
 with
    ARBEITSPAKET := Bag_Record_IRIRRRRR_Type'();
    ZEITANTEIL := 100.0;
    KORREKTURLEISTUNG_SPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_ENTWURF := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_MODULSPEZ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_CODE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    KORREKTURLEISTUNG_HANDBUCH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    FEHLERBQ := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
    PRODUKTIVITAET_SPEZ := 0.0;
    PRODUKTIVITAET_ENTWURF := 0.0;
    PRODUKTIVITAET_MODULSPEZ := 0.0;
    PRODUKTIVITAET_CODE := 0.0;
    PRODUKTIVITAET_HANDBUCH := 0.0;
    VERLUSTBQ := 0.0;
    FEHLERRATE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  end create;
  create relation KORRIGIERT_ALLES
  with
    WER := EIN_ENTWICKLER;
    WAS := DER_CODE;
    AUFGRUND := DER_BERICHT;
    Attribute_Role := The_Attribute_Role_Of_KORRIGIERT_ALLES_93;
  end create;
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST

rule Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST[240] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  DER_CODE : CODE;
  DER_BERICHT : ABNAHMETESTBERICHT;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  Deakt_Relation : Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST";
  delete(KORRIGIERT_A);
delete(The_Attribute_Role_Of_KORRIGIERT_A);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST

rule Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST[239] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  EIN_ENTWICKLER : ENTWICKLER;
  Deakt_Relation : Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity,EIN_ENTWICKLER);
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST";
  send_player_message AUFGEHOERT_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST

rule Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST[238] taking 0  is
structure 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
constraints 
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.LCD /= current_date;
begin 
send_debug_message "Deactivating_3_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST";
  delete(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
end rule;
-----------------------------------------------------------------------------
-- Regel: Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST

rule Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST[990] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,*));
begin 
send_debug_message "Activating_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST";
  create entity THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity aka new_unique_id(BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity)
 with
    LCD := current_date;
    B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
    AN := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AS := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AE := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AM := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AC_ALT := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    AH := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
    T := 0.0;
    DT := 0.0;
    NOETIGE_ZEIT := 0.0;
    MAX_AF := 0.0;
    MAX_GF := 0.0;
    MAX_FF := 0.0;
    MAX_IF := 0.0;
    MAX_VERLUST := 0.0;
    ENTDECKTE_AF := 0.0;
    ENTDECKTE_GF := 0.0;
    ENTDECKTE_FF := 0.0;
    ENTDECKTE_IF := 0.0;
    ENTDECKTE_HF := 0.0;
    HINZUGEFUEGT_C_AFP := 0.0;
    HINZUGEFUEGT_S_AFP := 0.0;
    HINZUGEFUEGT_H_AFP := 0.0;
    HINZUGEFUEGT_E_AFP := 0.0;
    HINZUGEFUEGT_M_AFP := 0.0;
    ZEIT_S := 0.0;
    ZEIT_E := 0.0;
    ZEIT_M := 0.0;
    ZEIT_C := 0.0;
    ZEIT_H := 0.0;
    TATSAECHLICHE_ZEIT := 0.0;
    ANALYSEFEHLER_VOR_KORR := 0.0;
    GROBENTWURFSFEHLER_VOR_KORR := 0.0;
    FEINENTWURFSFEHLER_VOR_KORR := 0.0;
    IMPLEMENTIERUNGSFEHLER_VOR_KORR := 0.0;
  end create;
  create relation BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation
  with
    RL_DIE_NOTIZEN := DIE_NOTIZEN;
    RL_DIE_SPEZIFIKATION := DIE_SPEZIFIKATION;
    RL_DER_ENTWURF := DER_ENTWURF;
    RL_DIE_MODULSPEZ := DIE_MODULSPEZ;
    RL_DER_CODE := DER_CODE;
    RL_DAS_HANDBUCH := DAS_HANDBUCH;
    RL_EINE_SPEZNOTATION := EINE_SPEZNOTATION;
    RL_EINE_ENTWURFSNOTATION := EINE_ENTWURFSNOTATION;
    RL_EINE_MODULSPEZNOTATION := EINE_MODULSPEZNOTATION;
    RL_EINE_CODENOTATION := EINE_CODENOTATION;
    RL_EINE_HANDBUCHNOTATION := EINE_HANDBUCHNOTATION;
    RL_THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN;
    RL_THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN := THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN;
    RL_DER_ZUSTAND := DER_ZUSTAND;
    RL_DEL_TA := DEL_TA;
    RL_K := K;
    RL_THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity := THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_BERICHT := DER_BERICHT;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_DER_TESTLOG := DER_TESTLOG;
    RL_SEIN_LOG := SEIN_LOG;
    RL_THE_ATTRIBUTE_ROLE_OF_ERFASST := THE_ATTRIBUTE_ROLE_OF_ERFASST;
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  end create;
  create relation Deactivating_1_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
    RL_THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A := THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
    RL_DER_CODE := DER_CODE;
    RL_DER_BERICHT := DER_BERICHT;
  end create;
  create relation Deactivating_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation
  with
    RL_THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
    RL_EIN_ENTWICKLER := EIN_ENTWICKLER;
  end create;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.T := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
  send_player_message BEGONNEN_ALLES_ZU_KORRIGIEREN(EIN_ENTWICKLER);
end rule;
-----------------------------------------------------------------------------
-- Regel: Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST

rule Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST[790] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
begin 
send_debug_message "Active_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST";
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.LCD := current_date;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.DT := float(DEL_TA.T) * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL / 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.T + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.DT;
  while THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.T > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT and (not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) or THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) ) loop
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC /= Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_3 = 0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_3 := EIN_ENTWICKLER.AUTOR_ID;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC := gib_anforderung_zu_id(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC := f_getselected_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC);
end if;
  DER_CODE.FEHLER := add_korr_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ,0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ANALYSEFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ANALYSEFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.GROBENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.GROBENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.FEINENTWURFSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.FEINENTWURFSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_5);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7 := gib_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_5,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_4);
  replace_nth(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, nth_elem(DER_BERICHT.ANZ_KORR_FEHLER_PRO_PRF, DER_BERICHT.NUMMER) + (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.IMPLEMENTIERUNGSFEHLER_VOR_KORR - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7 ), DER_BERICHT.NUMMER);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH := f_getselected_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE := f_getselected_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_5 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_GF);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM := f_getselected_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_1,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_2,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_6 := gib_max_korrigiert(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_4,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ.Rec_Elem_3,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_FF);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_S_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_S_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AN := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AN.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AN.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_S_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AN.Rec_Elem_2;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 > 0.0 then
  DIE_SPEZIFIKATION.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_8 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_8 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 > 0.0 then
  DAS_HANDBUCH.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_5 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 > 0.0 then
  DER_ENTWURF.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_6 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2;
end if;
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 > 0.0 then
  DIE_MODULSPEZ.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM);
end if;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_2 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC_ALT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7 + THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 > 0.0 then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_6 * THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP / THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6 := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP * THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3;
end if;
  DER_CODE.FEHLER := add_erw_cf(DER_CODE.FEHLER,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC_ALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC);
end if;
  if THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_2 > 0.0 then
  DER_CODE.INHALT := f_put_Bag_Record_IRIRRRRR_Type(DER_CODE.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC);
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.T := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.T - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT;
end if;
  if ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B := Record_IRRRRRRRR_Type'(0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := 0.0;
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC := f_lookup_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM := gib_anforderung_zu_id(DIE_MODULSPEZ.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE := gib_anforderung_zu_id(DER_ENTWURF.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS := gib_anforderung_zu_id(DIE_SPEZIFIKATION.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH := gib_anforderung_zu_id(DAS_HANDBUCH.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AN := gib_anforderung_zu_id(DIE_NOTIZEN.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B := gib_befund_zu_id(DER_BERICHT.INHALT,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_1);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_IF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_7,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_5);
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_VERLUST := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_VERLUST * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_VERLUST := 0.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP := 0.0;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_IF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE.Rec_Elem_4 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_S_AFP := 0.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 ) < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_S_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AS.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_S_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP;
end if;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_S_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_SPEZ;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP := 0.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 ) < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AH.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP;
end if;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_H_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_HANDBUCH;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP := 0.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 ) < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AE.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP;
end if;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_E_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_4,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_2);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_AF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_5,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_3);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_GF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_FF := setze_fehler(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_6,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_4);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_FF := min(THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_FF,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_FF);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP := 0.0;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 > THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 > 0.0 ) then
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 ) < THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.MAX_VERLUST then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP := (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_7 - THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AM.Rec_Elem_2 ) * (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.B.Rec_Elem_8 / 100.0 ) * (THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ / 100.0 );
else
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_C_AFP;
end if;
end if;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_AF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_GF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_2 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ENTDECKTE_FF / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ.Rec_Elem_3 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.HINZUGEFUEGT_M_AFP / THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_C + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_S + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_H + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_E + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_M;
  if (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_3 /= EIN_ENTWICKLER.AUTOR_ID ) and (THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.AC.Rec_Elem_3 /= 0 ) then
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.NOETIGE_ZEIT * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_S := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_S * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_E := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_E * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_M := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_M * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_C := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_C * 1.2;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_H := THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_H * 1.2;
end if;
  SEIN_LOG.SPEZ_K.Rec_Elem_1 := SEIN_LOG.SPEZ_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_S / 60.0;
  SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 := SEIN_LOG.GROBENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_E / 60.0;
  SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 := SEIN_LOG.FEINENTWURF_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_M / 60.0;
  SEIN_LOG.CODE_K.Rec_Elem_1 := SEIN_LOG.CODE_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_C / 60.0;
  SEIN_LOG.HANDBUCH_K.Rec_Elem_1 := SEIN_LOG.HANDBUCH_K.Rec_Elem_1 + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.ZEIT_H / 60.0;
end if;
end loop;
  DER_ZUSTAND.AUFWAND_TESTPHASE := DER_ZUSTAND.AUFWAND_TESTPHASE + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.DT / 60.0;
  DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS := DER_ZUSTAND.AUFWAND_KORREKTUR_TESTS + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.DT / 60.0;
  DER_TESTLOG.ATEST_K_AUFWAND := DER_TESTLOG.ATEST_K_AUFWAND + THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT / 60.0;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ATEST_K_BEGINN = 1901/01/01/00:00 ) then
  DER_TESTLOG.ATEST_K_BEGINN := current_date;
end if;
  if (date_weekday(current_date) < 6 ) and (DER_TESTLOG.ATEST_K_ENDE < current_date ) then
  DER_TESTLOG.ATEST_K_ENDE := current_date;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ZEITANTEIL := 100.0;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity.TATSAECHLICHE_ZEIT := 0.0;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURAP_SCHNUEREN_NACH_ABNAHMETEST

rule ALLESKORREKTURAP_SCHNUEREN_NACH_ABNAHMETEST[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
declare 
  EIGENE_IDS : Bag_I_Type := Bag_I_Type'();
  AFPS : REAL := 0.0;
  ID : INTEGER := 0;
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURAP_SCHNUEREN_NACH_ABNAHMETEST";
  EIGENE_IDS := Bag_I_Type'();
  AFPS := 0.0;
  ID := 0;
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  EIGENE_IDS := gib_eigene_ids(DER_BERICHT.INHALT,DER_CODE.INHALT,EIN_ENTWICKLER.AUTOR_ID);
  EIGENE_IDS := f_intersection_Bag_I_Type(EIGENE_IDS,DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  AFPS := 0.0;
  while AFPS < 30.0 and not ( length(EIGENE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(EIGENE_IDS);
  ID := f_getselected_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,ID);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  while AFPS < 30.0 and not ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) loop
  ID := f_get_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS);
  A := gib_anforderung_zu_id(DER_CODE.INHALT,ID);
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET := f_put_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET,A);
  AFPS := AFPS + A.Rec_Elem_2;
end loop;
  K.REGELMENGE := f_put_Set_S_Type(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Abnahmetest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID));
end rule;
-----------------------------------------------------------------------------
-- Regel: MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_ABNAHMETEST_FERTIG_SEIN

rule MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_ABNAHMETEST_FERTIG_SEIN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_AUFTRAG : BASE2_SOLL_ALLES_KORRIGIEREN_Entity;
  AUFTRAG : SOLL_ALLES_KORRIGIEREN(THE_ATTRIBUTE_ROLE_OF_AUFTRAG,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT);
  DIE_PRFEFF : PRUEFUNGSEFFEKTIVITAET;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Abnahmetest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  UNGEPRUEFTE_IDS : Bag_I_Type := Bag_I_Type'();
begin 
send_debug_message "MIT_KORREKTUR_ALLER_DOKUMENTE_NACH_ABNAHMETEST_FERTIG_SEIN";
  UNGEPRUEFTE_IDS := Bag_I_Type'();
  delete(AUFTRAG);
delete(The_Attribute_Role_Of_AUFTRAG);
  UNGEPRUEFTE_IDS := gib_ungepruefte_ids(DIE_SPEZIFIKATION.INHALT,DER_BERICHT.INHALT);
  if ( length(UNGEPRUEFTE_IDS) = 0 ) and ( length(DER_BERICHT.NICHT_KORRIGIERTE_IDS) = 0 ) and not (exists(SOLL_KORRIGIEREN(*,*,*,DER_BERICHT)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,DER_BERICHT)) ) and not exists(SOLL_ABNEHMEN(*,*,DER_CODE)) and not exists(KORRIGIERT(*,*,*,DER_BERICHT)) and not exists(KORRIGIERT_ALLES(*,*,*,DER_BERICHT)) and not exists_extended(NIMMT_AB(*,*,DER_CODE)) then
  DER_BERICHT.INHALT := Bag_Record_IRRRRRRRR_Type'();
  DIE_PRFEFF.ABNAHMETESTEFFEKTIVITAET := DIE_PRFEFF.ABNAHMETESTEFFEKTIVITAET * (1.0 - 20.0 / 100.0 );
  DER_BERICHT.NUMMER := DER_BERICHT.NUMMER + 1;
  DER_BERICHT.IST_LEER := true;
  send_player_message KORREKTUR_NACH_ABNAHMETEST_BEENDET;
end if;
end rule;
-----------------------------------------------------------------------------
-- Regel: KORREKTUR_ALLER_DOKUMENTE_NACH_ABNAHMETEST_ABBRECHEN

rule KORREKTUR_ALLER_DOKUMENTE_NACH_ABNAHMETEST_ABBRECHEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN : BASE2_SOLL_BEARBEITUNG_ABBRECHEN_Entity;
  SOLL_ABBRECHEN : SOLL_BEARBEITUNG_ABBRECHEN(THE_ATTRIBUTE_ROLE_OF_SOLL_ABBRECHEN,EIN_ENTWICKLER,DIE_NOTIZEN);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  not exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT));
declare 
  A : Record_IRIRRRRR_Type := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "KORREKTUR_ALLER_DOKUMENTE_NACH_ABNAHMETEST_ABBRECHEN";
  A := Record_IRIRRRRR_Type'(0,0.0,0,0.0,0.0,0.0,0.0,0.0);
  while not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 ) loop
  A := f_get_Bag_Record_IRIRRRRR_Type(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET);
  DER_BERICHT.NICHT_KORRIGIERTE_IDS := f_put_Bag_I_Type(DER_BERICHT.NICHT_KORRIGIERTE_IDS,A.Rec_Elem_1);
end loop;
  delete(SOLL_ABBRECHEN);
delete(The_Attribute_Role_Of_SOLL_ABBRECHEN);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Abnahmetest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PS : REAL := 0.0;
  PE : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PH : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESKORREKTURLEISTUNG_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  PS := 0.0;
  PE := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PM := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PC := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PH := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  PS := gib_spezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG);
  PE := gib_entwurfkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG);
  PM := gib_modulspezkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG);
  PC := gib_stestkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
  PH := gib_handbuchkorrekturleistung(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PS := PS * 0.6;
  PE := gib_multiplizierte_quoten(PE,0.5);
  PM := gib_multiplizierte_quoten(PM,0.5);
  PC := gib_multiplizierte_quoten(PC,0.3);
  PH := gib_multiplizierte_quoten(PH,0.6);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_SPEZ.Rec_Elem_1 := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_CODE := PC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.KORREKTURLEISTUNG_HANDBUCH := PH;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERT : BASE2_GEEIGNET_FUER_Entity;
  NOTIERT : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERT,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Abnahmetest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  F5 : Record_RRRRR_Type := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
begin 
send_debug_message "ALLESFEHLERBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  F5 := Record_RRRRR_Type'(0.0,0.0,0.0,0.0,0.0);
  F5 := gib_fbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERT.AUSWIRKUNG);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  F5 := gib_multiplizierte_quoten(F5,0.2);
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERBQ := F5;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Abnahmetest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  PS : REAL := 0.0;
  PH : REAL := 0.0;
  PE : REAL := 0.0;
  PM : REAL := 0.0;
  PC : REAL := 0.0;
begin 
send_debug_message "ALLESPRODUKTIVITAET_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  PS := 0.0;
  PH := 0.0;
  PE := 0.0;
  PM := 0.0;
  PC := 0.0;
  PS := gib_spezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG,1);
  PH := gib_handbuchproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG,1);
  PE := gib_entwurfsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,1);
  PM := gib_modulspezproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,1);
  PC := gib_codierungsproduktivitaet(EIN_ENTWICKLER.ERFAHRUNG) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,1);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  PS := PS * 0.5;
  PH := PH * 0.5;
  PE := PE * 0.6;
  PM := PM * 0.6;
  PC := PC * 0.7;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_SPEZ := PS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_HANDBUCH := PH;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_ENTWURF := PE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_MODULSPEZ := PM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.PRODUKTIVITAET_CODE := PC;
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Abnahmetest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
begin 
send_debug_message "ALLESVERLUSTBEHEBUNGSQUOTE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.VERLUSTBQ := gib_codevbq(EIN_ENTWICKLER.ERFAHRUNG,EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG);
end rule;
-----------------------------------------------------------------------------
-- Regel: ALLESFEHLERRATE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN

rule ALLESFEHLERRATE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN[980] taking 0  is
structure 
  DIE_NOTIZEN : ANALYSENOTIZEN;
  DIE_SPEZIFIKATION : SPEZIFIKATION;
  DER_ENTWURF : SYSTEMENTWURF;
  DIE_MODULSPEZ : MODULSPEZIFIKATION;
  DER_CODE : CODE;
  DAS_HANDBUCH : HANDBUCH;
  EINE_SPEZNOTATION : NOTATION;
  EINE_ENTWURFSNOTATION : NOTATION;
  EINE_MODULSPEZNOTATION : NOTATION;
  EINE_CODENOTATION : NOTATION;
  EINE_HANDBUCHNOTATION : NOTATION;
  THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  S_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,DIE_SPEZIFIKATION,EINE_SPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  E_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,DER_ENTWURF,EINE_ENTWURFSNOTATION);
  THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  C_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,DER_CODE,EINE_CODENOTATION);
  THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  MS_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,DIE_MODULSPEZ,EINE_MODULSPEZNOTATION);
  THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN : BASE2_GESCHRIEBEN_IN_Entity;
  HB_NOTIERT_IN : GESCHRIEBEN_IN(THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DAS_HANDBUCH,EINE_HANDBUCHNOTATION);
  DER_ZUSTAND : PROJEKTZUSTAND;
  DEL_TA : DELTAT;
  K : KAUSALITAETSFLUSS;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity;
  THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation : BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity);
  EIN_ENTWICKLER : ENTWICKLER;
  DER_BERICHT : ABNAHMETESTBERICHT;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A : BASE2_KORRIGIERT_ALLES_Entity;
  KORRIGIERT_A : KORRIGIERT_ALLES(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,EIN_ENTWICKLER,DER_CODE,DER_BERICHT);
  DER_TESTLOG : TESTLOGBUCH;
  SEIN_LOG : ZEITERFASSUNGSBOGEN;
  THE_ATTRIBUTE_ROLE_OF_ERFASST : BASE2_ERFASST_ZEIT_Entity;
  ERFASST : ERFASST_ZEIT(THE_ATTRIBUTE_ROLE_OF_ERFASST,EIN_ENTWICKLER,SEIN_LOG);
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity;
  THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation : BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Relation(DIE_NOTIZEN,DIE_SPEZIFIKATION,DER_ENTWURF,DIE_MODULSPEZ,DER_CODE,DAS_HANDBUCH,EINE_SPEZNOTATION,EINE_ENTWURFSNOTATION,EINE_MODULSPEZNOTATION,EINE_CODENOTATION,EINE_HANDBUCHNOTATION,THE_ATTRIBUTE_ROLE_OF_S_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_E_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_C_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_MS_NOTIERT_IN,THE_ATTRIBUTE_ROLE_OF_HB_NOTIERT_IN,DER_ZUSTAND,DEL_TA,K,THE_BASE2_1_ALLE_DOKUMENTE_KORRIGIEREN_Entity,EIN_ENTWICKLER,DER_BERICHT,THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A,DER_TESTLOG,SEIN_LOG,THE_ATTRIBUTE_ROLE_OF_ERFASST,THE_BASE2_2_ENTWICKLER_KORRIGIERT_ALLES_NACH_ABNAHMETEST_Entity);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTS : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTS : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTS,EINE_SPEZNOTATION,DIE_SPEZIFIKATION);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTH : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTH : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTH,EINE_HANDBUCHNOTATION,DAS_HANDBUCH);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTE : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTE : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTE,EINE_ENTWURFSNOTATION,DER_ENTWURF);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTM : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTM : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTM,EINE_MODULSPEZNOTATION,DIE_MODULSPEZ);
  THE_ATTRIBUTE_ROLE_OF_NOTIERTC : BASE2_GEEIGNET_FUER_Entity;
  NOTIERTC : GEEIGNET_FUER(THE_ATTRIBUTE_ROLE_OF_NOTIERTC,EINE_CODENOTATION,DER_CODE);
  DER_KUNDENWUNSCH : KUNDENWUNSCH;
constraints 
  exists(KORRIGIERT_ALLES(*,*,*,*)) or exists(SOLL_ALLES_KORRIGIEREN(*,*,*,*));
  DER_ZUSTAND.PROJEKT_IST_BEENDET = false;
  exists(SOLL_ALLES_KORRIGIEREN(*,EIN_ENTWICKLER,DIE_NOTIZEN,DER_BERICHT)) or not ( length(THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.ARBEITSPAKET) = 0 );
  ( Get_Index(K.REGELMENGE,"allesKorrekturAP_schnueren_nach_Abnahmetest" & integer_to_string(EIN_ENTWICKLER.AUTOR_ID)) > 0 );
declare 
  FS : REAL := 0.0;
  FH : REAL := 0.0;
  FE : REAL := 0.0;
  FM : REAL := 0.0;
  FC : REAL := 0.0;
  AFP_WUNSCH : REAL := 0.0;
begin 
send_debug_message "ALLESFEHLERRATE_FUER_KORREKTUR_NACH_ABNAHMETEST_BERECHNEN";
  FS := 0.0;
  FH := 0.0;
  FE := 0.0;
  FM := 0.0;
  FC := 0.0;
  AFP_WUNSCH := 0.0;
  AFP_WUNSCH := gib_afp(DER_KUNDENWUNSCH.SOLL_ANFORDERUNGEN);
  FS := gib_spezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_SPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTS.AUSWIRKUNG,3);
  FH := gib_handbuchfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_HANDBUCHNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTH.AUSWIRKUNG,3);
  FE := gib_entwurfsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_ENTWURFSNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTE.AUSWIRKUNG,3);
  FM := gib_modulspezfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_MODULSPEZNOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTM.AUSWIRKUNG,3);
  FC := gib_codierungsfehlerrate(EIN_ENTWICKLER.ERFAHRUNG,AFP_WUNSCH) * gib_auswirkung(EIN_ENTWICKLER.NOTATIONSERFAHRUNG,EINE_CODENOTATION.NAME,THE_ATTRIBUTE_ROLE_OF_NOTIERTC.AUSWIRKUNG,3);
  if exists(ARBEITET_SICH_EIN(*,EIN_ENTWICKLER,*)) then
  FS := FS * 1.1;
  FH := FH * 1.3;
  FE := FE * 1.3;
  FM := FM * 1.3;
  FC := FC * 1.2;
end if;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_1 := FS;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_2 := FE;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_3 := FM;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_4 := FC;
  THE_ATTRIBUTE_ROLE_OF_KORRIGIERT_A.FEHLERRATE.Rec_Elem_5 := FH;
end rule;
-----------------------------------------------------------------------------
-- Startsituation: 

begin at 2013/09/30/08:00 timestep 1440 using "model.dib"
create entity FA : ANFORDERUNGEN_NACH_IFPUG_4 aka "Requirements"
 with
    INTERNAL_LOGICAL_FILES := Array_3_I_Type'(3,3,3);
    EXTERNAL_INTERFACE_FILES := Array_3_I_Type'(4,1,3);
    EXTERNAL_INPUTS := Array_3_I_Type'(0,1,0);
    EXTERNAL_OUTPUTS := Array_3_I_Type'(8,0,2);
    EXTERNAL_INQUIRIES := Array_3_I_Type'(1,1,1);
    DATA_COMMUNICATIONS := 0;
    DISTRIBUTED_DATA_PROCESSING := 0;
    PERFORMANCE := 2;
    HEAVILY_USED_CONFIGURATION := 1;
    TRANSACTION_RATE := 0;
    ONLINE_DATA_ENTRY := 5;
    END_USER_EFFICIENCY := 4;
    ONLINE_UPDATE := 2;
    COMPLEX_PROCESSING := 2;
    REUSABILITY := 1;
    INSTALLATION_EASE := 2;
    OPERATIONAL_EASE := 4;
    MULTIPLE_SITES := 2;
    FACILITATE_CHANGE := 3;
  end create;
create entity P : PROJEKT aka "Project"
 with
    FIX_KOSTEN := 1500.0;
    VOLLSTAENDIGKEIT_DER_ANALYSENOTIZEN := 100.0;
  end create;
create entity PZ : PROJEKTZIELE aka "Projectgoals"
 with
    SOLL_KOSTEN := 225000.0;
    SOLL_TERMIN := 2014/06/30/08:00;
    SOLL_VOLLSTAENDIGKEIT_SPEZIFIKATION := 0.0;
    SOLL_VOLLSTAENDIGKEIT_SYSTEMENTWURF := 0.0;
    SOLL_VOLLSTAENDIGKEIT_MODULSPEZ := 0.0;
    SOLL_VOLLSTAENDIGKEIT_CODE := 95.0;
    SOLL_VOLLSTAENDIGKEIT_HANDBUCH := 95.0;
    SOLL_KORREKTHEIT_SPEZIFIKATION := 9999.9;
    SOLL_KORREKTHEIT_SYSTEMENTWURF := 9999.9;
    SOLL_KORREKTHEIT_MODULSPEZ := 9999.9;
    SOLL_KORREKTHEIT_CODE := 12.0;
    SOLL_KORREKTHEIT_HANDBUCH := 0.5;
    MITTEL_AB_DAUER := 25;
    MITTEL_AB_KOSTEN := 25000.0;
    MITTEL_AB_VOLL_CODE := 90.0;
    MITTEL_AB_KORR_CODE := 3.0;
    MITTEL_AB_VOLL_HB := 90.0;
    MITTEL_AB_KORR_HB := 0.25;
  end create;
create entity K : KUNDE aka "Paul Koenig"
  end create;
create entity PL : PROJEKTLEITER aka "Peter Leiter"
 with
    KOSTEN := 15.0;
    IST_EINGESTELLT := true;
    VERFUEGBAR_AB := 2013/09/30/08:00;
  end create;
create entity E1 : ENTWICKLER aka "Axel"
 with
    KOSTEN := 40.0;
    IST_EINGESTELLT := false;
    VERFUEGBAR_AB := 2013/09/30/08:00;
    AUTOR_ID := 1;
    ERFAHRUNG := Record_IIIII_Type'(3,3,3,3,3);
    NOTATIONSERFAHRUNG := Set_Record_SI_Type'(Record_SI_Type'("German",3),Record_SI_Type'("German_in_Analysis",3),
Record_SI_Type'("German_in_Spec",3),Record_SI_Type'("German_in_System_design",3),
Record_SI_Type'("German_in_Module_design",3),Record_SI_Type'("German_in_Manuals",3),
Record_SI_Type'("English",3),Record_SI_Type'("Ada 95",3),Record_SI_Type'("C++",3),
Record_SI_Type'("SA",3));
  end create;
create entity E2 : ENTWICKLER aka "Bernd"
 with
    KOSTEN := 40.0;
    IST_EINGESTELLT := false;
    VERFUEGBAR_AB := 2013/09/30/08:00;
    AUTOR_ID := 2;
    ERFAHRUNG := Record_IIIII_Type'(3,3,2,2,4);
    NOTATIONSERFAHRUNG := Set_Record_SI_Type'(Record_SI_Type'("German",3),Record_SI_Type'("German_in_Analysis",3),
Record_SI_Type'("German_in_Spec",3),Record_SI_Type'("German_in_System_design",3),
Record_SI_Type'("German_in_Module_design",3),Record_SI_Type'("German_in_Manuals",4),
Record_SI_Type'("English",3),Record_SI_Type'("Ada 95",3),Record_SI_Type'("C++",3),
Record_SI_Type'("SA",3));
  end create;
create entity E3 : ENTWICKLER aka "Christine"
 with
    KOSTEN := 45.0;
    IST_EINGESTELLT := false;
    VERFUEGBAR_AB := 2013/09/30/08:00;
    AUTOR_ID := 3;
    ERFAHRUNG := Record_IIIII_Type'(3,3,4,3,3);
    NOTATIONSERFAHRUNG := Set_Record_SI_Type'(Record_SI_Type'("German",3),Record_SI_Type'("German_in_Analysis",3),
Record_SI_Type'("German_in_Spec",3),Record_SI_Type'("German_in_System_design",4),
Record_SI_Type'("German_in_Module_design",4),Record_SI_Type'("German_in_Manuals",3),
Record_SI_Type'("English",3),Record_SI_Type'("Ada 95",3),Record_SI_Type'("C++",3),
Record_SI_Type'("SA",3));
  end create;
create entity E4 : ENTWICKLER aka "Diana"
 with
    KOSTEN := 40.0;
    IST_EINGESTELLT := false;
    VERFUEGBAR_AB := 2013/09/30/08:00;
    AUTOR_ID := 4;
    ERFAHRUNG := Record_IIIII_Type'(2,2,3,4,3);
    NOTATIONSERFAHRUNG := Set_Record_SI_Type'(Record_SI_Type'("German",3),Record_SI_Type'("German_in_Analysis",3),
Record_SI_Type'("German_in_Spec",3),Record_SI_Type'("German_in_System_design",3),
Record_SI_Type'("German_in_Module_design",3),Record_SI_Type'("German_in_Manuals",3),
Record_SI_Type'("English",3),Record_SI_Type'("Ada 95",4),Record_SI_Type'("C++",3),
Record_SI_Type'("SA",3));
  end create;
create entity E5 : ENTWICKLER aka "Richard"
 with
    KOSTEN := 50.0;
    IST_EINGESTELLT := false;
    VERFUEGBAR_AB := 2013/09/30/08:00;
    AUTOR_ID := 5;
    ERFAHRUNG := Record_IIIII_Type'(3,4,4,3,2);
    NOTATIONSERFAHRUNG := Set_Record_SI_Type'(Record_SI_Type'("German",3),Record_SI_Type'("German_in_Analysis",3),
Record_SI_Type'("German_in_Spec",4),Record_SI_Type'("German_in_System_design",4),
Record_SI_Type'("German_in_Module_design",3),Record_SI_Type'("German_in_Manuals",3),
Record_SI_Type'("English",3),Record_SI_Type'("Ada 95",3),Record_SI_Type'("C++",3),
Record_SI_Type'("SA",3));
  end create;
create entity E6 : ENTWICKLER aka "Stefanie"
 with
    KOSTEN := 40.0;
    IST_EINGESTELLT := false;
    VERFUEGBAR_AB := 2013/09/30/08:00;
    AUTOR_ID := 6;
    ERFAHRUNG := Record_IIIII_Type'(3,3,3,2,4);
    NOTATIONSERFAHRUNG := Set_Record_SI_Type'(Record_SI_Type'("German",3),Record_SI_Type'("German_in_Analysis",3),
Record_SI_Type'("German_in_Spec",3),Record_SI_Type'("German_in_System_design",3),
Record_SI_Type'("German_in_Module_design",3),Record_SI_Type'("German_in_Manuals",3),
Record_SI_Type'("English",3),Record_SI_Type'("Ada 95",3),Record_SI_Type'("C++",3),
Record_SI_Type'("SA",3));
  end create;
create entity E7 : ENTWICKLER aka "Thomas"
 with
    KOSTEN := 45.0;
    IST_EINGESTELLT := false;
    VERFUEGBAR_AB := 2013/09/30/08:00;
    AUTOR_ID := 7;
    ERFAHRUNG := Record_IIIII_Type'(4,3,3,3,3);
    NOTATIONSERFAHRUNG := Set_Record_SI_Type'(Record_SI_Type'("German",3),Record_SI_Type'("German_in_Analysis",4),
Record_SI_Type'("German_in_Spec",3),Record_SI_Type'("German_in_System_design",3),
Record_SI_Type'("German_in_Module_design",3),Record_SI_Type'("German_in_Manuals",3),
Record_SI_Type'("English",3),Record_SI_Type'("Ada 95",3),Record_SI_Type'("C++",3),
Record_SI_Type'("SA",3));
  end create;
create entity NV : NOTATIONSVOREINSTELLUNG aka "Notationsvoreinstellung"
 with
    FUER_NOTIZEN := "German_in_Analysis";
    FUER_SPEZIFIKATION := "German_in_Spec";
    FUER_SYSTEMENTWURF := "German_in_System_design";
    FUER_MODULSPEZ := "German_in_Module_design";
    FUER_CODE := "Ada 95";
    FUER_HANDBUCH := "German_in_Manuals";
  end create;
end model;
